{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/contextAPI/dialog-context.js","webpack:///./src/components/Layout/header.js","webpack:///./src/components/Layout/navButtons.js","webpack:///./src/components/WordDataTable/WordDataTable.js","webpack:///./src/components/Layout/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Layout_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","DialogContext","open","content","Header","siteTitle","react_default","style","background","height","textAlign","position","top","zIndex","width","gatsby_browser_entry","color","textDecoration","defaultProps","NavButtons","classNamesLeft","styles","button","left","join","classNamesRight","right","Fragment","prev","className","fontSize","next","Table","dialogTable","rowData","map","row","leftCell","rightCell","book_id","chapter_id","verse_id","Layout","nextURL","prevURL","_useState","useState","dialog","updateDialog","newDialog","obj","dialog_context","Provider","value","header","site","siteMetadata","margin","maxWidth","padding","paddingTop","marginTop","primereact_dialog","StrongNumber","visible","contentStyle","overflowY","baseZIndex","modal","onHide","WordDataTable","entries","navButtons","_755544856","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","arrayOf"],"mappings":"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","file":"component---src-pages-page-2-js-ca85fc3da81ad32fc17c.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/Layout/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nconst DialogContext = React.createContext({open: false, content: {}})\n\nexport default DialogContext;","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `grey`,\n      height: '50px',\n      textAlign: 'center',\n      // marginBottom: `1.45rem`,\n      position: 'fixed',\n      top: '0',\n      zIndex: '2',\n      width: '100%'\n    }}\n  >\n    <div\n      // style={{\n      //   margin: `0 auto`,\n      //   maxWidth: 960,\n      //   padding: `1.45rem 1.0875rem`,\n      // }}\n    >\n      <Link\n        to=\"/\"\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        {siteTitle}\n      </Link>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport styles from './navButtons.module.css'\nimport { Link } from \"gatsby\"\n\nconst NavButtons = (props) => {\n    const classNamesLeft = [styles.button, styles.left].join(' ')\n    const classNamesRight = [styles.button, styles.right].join(' ')\n    return (\n        <React.Fragment>\n            <Link to={props.prev} className={classNamesLeft}><i className=\"pi pi-chevron-left\" style={{fontSize: '0.5em'}}></i></Link>\n            <Link to={props.next} className={classNamesRight}><i className=\"pi pi-chevron-right\" style={{fontSize: '0.5em'}}></i></Link>\n        </React.Fragment>\n    )\n}\n\nexport default NavButtons;","import React from 'react'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => (<table className={styles.dialogTable}>\n            {props.rowData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n        </table>)\n\nexport default Table;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport NavButtons from \"./navButtons\"\nimport \"./layout.module.css\"\n\nimport DialogContext from '../../contextAPI/dialog-context'\nimport {Dialog} from 'primereact/dialog';\nimport WordDataTable from '../WordDataTable/WordDataTable'\n\nconst Layout = ({ children, nextURL, prevURL }) => {\n\n  // This controls the popup for the word information\n  const [ dialog, updateDialog ] = useState({open: false, content: {}})\n  const newDialog = (obj) => {\n    updateDialog(obj)\n  }\n  \n  return (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <DialogContext.Provider value={{dialog: dialog, newDialog: newDialog}}>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            marginTop: '50px'\n          }}\n        >\n          <main>{children}</main>\n          {(dialog.open === true) ? (\n                <Dialog header={`WORD INFO : ${dialog.content.StrongNumber}`} visible={dialog.open} style={{width: '75vw', height: '70vw'}} contentStyle={{height: '200px', overflowY: 'auto'}}baseZIndex={300} modal={true} onHide={() => updateDialog({open: false, content: {}})}>\n                    <WordDataTable rowData={Object.entries(dialog.content)} />\n                </Dialog> \n            ) : null}\n        </div>\n        <NavButtons next={nextURL} prev={prevURL}/>\n        </DialogContext.Provider>\n      </>\n    )}\n  />\n)}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}