{"version":3,"sources":["webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./src/images/SVB-Read-together.png","webpack:///./src/images/SVB-Discuss-together.png"],"names":["SourceName","props","receivedAppContext","useContext","AppContext","react_default","a","createElement","className","styles","sourceName","onClick","updateSourceDialog","open","sourceDialog","content","data","useStyles","makeStyles","theme","typography","padding","spacing","fontSize","color","paper","background","width","maxWidth","Leaf","_useState","useState","anchorEl","setAnchorEl","classes","chapter","marks","find","mark","type","undefined","verse","footnote","bibleRef","classNames","leaf","join","handleClick","event","currentTarget","handleClickAway","Boolean","id","book","style","display","displayRef","text","onMouseOver","onMouseLeave","Popper","transition","placement","_ref","TransitionProps","ClickAwayListener","onClickAway","Fade","Object","assign","timeout","Paper","Typography","InterlinearLeaf","updateDialog","obj","newDialog","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","Fragment","key","word_ID","whitespace","dialog","interlinearinterlinear","interlinearStrongs","StrongNumber","interlinearTranslation","language","IT","ETCBCgloss","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","backgroundColor","extendedStrongNumber","Inlines","prose","leaves","map","interlinear","Leaf_InterlinearLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","source","speechbubblehebrew","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","push","length","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","Subtitle","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","NarratorText","main","justifyContent","flexWrap","textAlign","marginBottom","maxHeight","card","margin","leftCard","marginRight","top5","flex","cardTitle","textDecoration","fontWeight","top5List","cardContent","lineHeight","red","green","blue","topSources","topWords","colorComparison","createColorData","keys","pop","values","labels","datasets","Math","round","total","hoverBackgroundColor","chartOptions","responsive","maintainAspectRatio","layout","left","right","top","bottom","legend","position","boxWidth","SegmentData","Card","CardHeader","title","disableTypography","CardContent","chart","es","colors","options","sourcesArray","val","words","sort","b","top5Sources","count","forEach","name","getTopSources","sources","repeatedWords","segmentDataContainer","header","paddingTop","reference","discuss","borderTop","footer","& p","images","readImage","borderBottom","questions","imgCaption","__webpack_exports__","segment","pageContext","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","currentYear","Date","getFullYear","components_SegmentData_SegmentData","src","ReadTogether","alt","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","DiscussTogether","components_Introduction_Introduction","document","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-templates-chapter-page-js-c173a5f1d04472ac7372.js","sourcesContent":["import React, { useContext } from 'react'\nimport styles from './SourceName.module.css'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SourceName = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    return (\n    <p className={styles.sourceName}\n    onClick={() => receivedAppContext.updateSourceDialog({open: !receivedAppContext.sourceDialog.open, content: props.data})}\n    >{props.sourceName}</p>\n)}\n\nexport default SourceName;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\n\nconst InterlinearLeaf = (props) => {\n\n    const receivedAppContext = useContext(AppContext);\n    const updateDialog = (obj) => {\n        receivedAppContext.newDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => updateDialog({open: !receivedAppContext.dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(!word_metadata.data.StrongNumber) ? '-' : word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => updateDialog({open: !receivedAppContext.dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                    style={(word_metadata.data.StrongNumber === 'H4487') ? {backgroundColor: 'yellow'} : null}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber : word_metadata.data.extendedStrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            {props.content.map(block => {\n                switch (block.type) {\n                    case 'speech':\n                        return <Paragraph content={block.nodes} />\n                    case 'subtitle':\n                        return <Subtitle content={block.nodes} />\n                    case 'bulleted-list':\n                        return <BulletedList content={block.nodes} />\n                    case 'table':\n                        return <p style={{color: 'red'}}>TABLE WILL BE HERE!</p>\n                        // <Table content={block.nodes} />\n                    default:\n                        return null\n                }\n            })}\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'rgba(58, 76, 125, 0.07)'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Main Character(s)', 'Everyone Else'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title=\"Color Comparison\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut data={createColorData(props.colors)} options={chartOptions} />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Top Sources (words)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]} ${classes.topWords}`} >{source.name} ({source.words})</p>)}\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Top Repeated Words\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useEffect, useContext } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport ReadTogether from '../images/SVB-Read-together.png'\nimport DiscussTogether from '../images/SVB-Discuss-together.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  paper: {\n      background: '#3A4C7D',\n      width: '75vw'\n  },\n  segmentDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingTop: '5px'\n  },\n  title: {\n    fontSize: '150%',\n    fontWeight: ' bold',\n    textDecoration: 'underline',\n    width: '100%',\n    margin: 0,\n    textAlign: 'center'\n  },\n  reference: {\n    margin: 0,\n    fontSize: '60%',\n    color: 'grey'\n  },\n  discuss: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n    borderTop: '0.25px lightgrey solid',\n  },\n  footer: {\n    textAlign: 'center',\n    fontSize: '60%',\n    margin: '10px 0 30px 0',\n    '& p': {\n      margin: 0\n    }\n  },\n  images: {\n    width: '200px',\n    margin: '10px auto',\n  },\n  readImage: {\n    marginBottom: '20px',\n    borderBottom: '0.25px lightgrey solid',\n  },\n  content: {\n    margin: '0 0 10px 0',\n    padding: '0 0 10px 0'\n  },\n  questions: {\n    textAlign: 'left',\n    margin: 0,\n    '& p': {\n      margin: '10px 0',\n    }\n  },\n  imgCaption: {\n    color: 'grey',\n    fontSize: '70%',\n    margin: '-20px 0 0 0',\n    textAlign: 'center'\n  }\n}))\n\n\nexport default ({pageContext: {segment}}) => {\n  const classes = useStyles();\n  const receivedAppContext = useContext(AppContext);\n  \n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <p className={classes.title}>Title</p>\n        <p className={classes.reference}>Reference</p>\n      </div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(segment.content) ? (\n        <div>\n          <div className={classes.segmentDataContainer}>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          <div className={`${classes.images} ${classes.readImage}`}>\n            <img src={ReadTogether} alt=\"Read Together\" />\n            <p className={classes.imgCaption}>Each person reads a color aloud</p>\n          </div>\n          <div className={classes.content}>\n            {segment.content.map(block => {\n              if (block.data.color === 'black') {\n                return (<Narrator \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              } else {\n                return (<SpeechBubble \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              }\n            })}\n          </div>\n          <div className={classes.discuss}>\n            <div className={classes.images}>\n              <img src={DiscussTogether} alt=\"Discuss Together\" />\n              <p className={classes.imgCaption}>Discuss the questions with others</p>\n            </div>\n            <p className={classes.title}>Title</p>\n            <div className={classes.questions}>\n              <p>Question #1: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #2: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #3: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #4: this is a really, really, really, really, really, really, really, really, really long question</p>\n            </div>\n          </div>\n          <div className={classes.footer}>\n            <p>copyright info of version</p>\n            <p>© {currentYear} SourceView LLC.</p>\n          </div>\n        </div>\n    ) : (\n        <Introduction content={segment.document.nodes} />\n      )}\n    </div>\n  )}","module.exports = __webpack_public_path__ + \"static/SVB-Read-together-c3869d4d71bf839bdd9a7b8be1078625.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Discuss-together-ea87a32e2fe039e84980badd5ee97a5a.png\";"],"sourceRoot":""}