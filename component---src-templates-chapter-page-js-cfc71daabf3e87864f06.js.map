{"version":3,"sources":["webpack:///./src/components/SourceViewInfo/SourceViewInfo.js","webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/WordDataTable/WordDataTable.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Leaf/SphereLeaf.js","webpack:///./src/components/Leaf/VerbLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Table/TableCell.js","webpack:///./src/components/Introduction/Table/TableRow.js","webpack:///./src/components/Introduction/Table/TableHeader.js","webpack:///./src/components/Introduction/Table/Table.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/IntroData/IntroData.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/components/WordDataTable/VerbWordDataTable.js","webpack:///./src/components/VerbView/VerbCharts.js","webpack:///./src/components/Dialogs/VerbViewDialog.js","webpack:///./src/components/SegmentData/OTNTData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./src/images sync ^\\.\\/.*\\.png$","webpack:///./src/images/SVOriginalLanguagesLogo.png","webpack:///./src/images/Celebration.png","webpack:///./src/images/Communications.png","webpack:///./src/images/Economics.png","webpack:///./src/images/Education.png","webpack:///./src/images/Family.png","webpack:///./src/images/Foundational.png","webpack:///./src/images/Government.png","webpack:///./src/images/Religion.png","webpack:///./src/images/SVB-Discuss-together.png","webpack:///./src/images/SVB-Read-together.png","webpack:///./src/images/VerbViewLogo.png","webpack:///./src/images/ReaderLogo.png","webpack:///./src/images/angelic.png","webpack:///./src/images/demonic.png","webpack:///./src/images/god.png","webpack:///./src/images/other.png","webpack:///./src/images/pluralBlack.png","webpack:///./src/images/pluralBlue.png","webpack:///./src/images/pluralGreen.png","webpack:///./src/images/pluralGrey.png","webpack:///./src/images/singleBlackMale.png","webpack:///./src/images/singleBlueFemale.png","webpack:///./src/images/singleBlueMale.png","webpack:///./src/images/singleGreenFemale.png","webpack:///./src/images/singleGreenMale.png","webpack:///./src/images/singleGreyMale.png","webpack:///./src/data/Verbs sync ^\\.\\/.*\\.json$"],"names":["useStyles","makeStyles","speakingIcon","transform","SVicons","height","width","narratorIcon","SVBInfoTable","margin","padding","borderSpacing","borderCollapse","fontSize","row","position","display","justifyContent","rightCell","wordWrap","flex","textAlign","leftCell","rightIcon","leftIcon","cellTitle","textDecoration","fontWeight","marginBottom","narrator","sourceName","marginTop","SourceViewInfo","props","classes","SVBData","content","color","recipList","unique_recipients","map","recip","react_default","a","createElement","className","src","require","SourceIcons","source","sourceIcon","alt","middleIcon","IconButton","size","RssFeed_default","middleCell","length","recipient","time_period","unique_sources","dialogTitle","flexWrap","title","flexDirection","marginRight","textTransform","dialogContent","SourceName","_useState","useState","open","sourceDialog","updateSourceDialog","newSourceDialog","obj","onClick","data","Dialog","maxWidth","onClose","DialogTitle","SVBLogo","Typography","variant","DialogContent","dividers","components_SourceViewInfo_SourceViewInfo","theme","typography","spacing","paper","background","Leaf","receivedAppContext","useContext","AppContext","anchorEl","setAnchorEl","chapter","marks","find","mark","type","undefined","verse","footnote","bibleRef","classNames","styles","leaf","join","handleClick","event","currentTarget","handleClickAway","Boolean","id","book","style","displayRef","text","onMouseOver","onMouseLeave","Popper","transition","placement","_ref","TransitionProps","ClickAwayListener","onClickAway","Fade","Object","assign","timeout","Paper","Table","displayedData","language","IT","lexeme","transSBL","GoodrickKohlenbergerNumbers","LouwNidaNumbers","ETCBCgloss","HebrewLexeme","SBLstyleTransliteration","Heb_ref","book_id","chapter_id","verse_id","KJV_ref","morphologyDetail","dialogTable","closeButton","right","top","palette","grey","dialog","definition","InterlinearLeaf","updateDialog","newDialog","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","dictionary","version","strongsNumberOnly","StrongNumber","extendedStrongNumber","gloss","Fragment","key","word_ID","whitespace","interlinearinterlinear","interlinearStrongs","interlinearTranslation","strongs_def","WordDataTable","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","highlightColors","CEL","COM","ECO","EDU","FAM","GOV","REL","logo","whiteSpace","verticalAlign","backgroundColor","dialogRef","dialogHeader","SphereLeaf","_useState2","keyPassage","sphere","keyPassageNum","doubleHighlight","parseInt","push","styledClasses","c","indexOf","highlight","KeyPassages","spheres","boxShadow","SPH","Foundational","Celebration","Communication","Economics","Education","Family","Government","Religion","getSphereLogo","mainSphere","questions","Q1","Q2","Q3","Q4","GodVerb","SharedVerb","VerbViewData","verbViewDialog","VerbView","Inlines","prose","leaves","interlinear","Leaf_InterlinearLeaf","showSpheres","Leaf_SphereLeaf","showVerbs","VerbLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","speechbubblehebrew","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","table","border","tableTR","borderBottom","borderRight","tableTD","borderTop","paddingLeft","paddingRight","TableRow","Array","from","cell","TableCell","tableTH","shift","TableHeader","Table_TableRow","Subtitle","main","maxHeight","card","leftCard","top5","cardTitle","top5List","cardContent","lineHeight","paddingBottom","red","green","blue","topSources","topWords","colorComparison","segmentBarChart","chartholder","bookChart","segChart","piechart","introSubtitle","percentageOfVerses","segments","keys","OTNTData","totals","verses","original","quotes","allusions","forEach","segment","total","chartOptions","responsive","maintainAspectRatio","layout","left","bottom","legend","labels","boxWidth","bibleBookOrder","bibleBookList","BookBarChartOptions","scales","xAxes","stacked","yAxes","getNumOfVerses","ref","verseRef","split","numOfVerses","startingVerse","createBookBarDataObj","LukData","barData","quoteRef","bookRef","allusionRef","books","sort","b","bookData","datasets","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","SegmentBarChartOptions","SegmentData","segmentIDs","root","Card","CardHeader","testament","disableTypography","CardContent","es","pieData","options","seg","SegmentRefs","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","Introduction_Table_Table","segmentID","IntroData","NarratorText","createColorData","pop","values","Math","round","chart","colors","sourcesArray","val","words","top5Sources","count","name","getTopSources","sources","repeatedWords","occurrences","byBook","blackButton","redButton","greenButton","blueButton","selected","roles","roleSelectButton","showReferences","VerbCharts","_occurrenceOptions","_SourceRoleOptions","refColor","updateRefColor","showRefs","updateShowRefs","verbFile","fileRef","occurrenceData","verbRef","NumGodVerbs","NumSharedVerbs","NumOthersVerbs","occurrenceOptions","bookCounts","VerbByBookData","OthersVerb","GodVerbs","SharedVerbs","OthersVerbs","HBarHeight","groupedReferencesByColor","all","GodRefs","black","filter","countGroupedRefs","SourceRoleData","SourceRoleOptions","Divider","Button","refButton","VerbViewDialog","verbDialog","refNum","DJHVerb","strongLength","newVerbDialog","VerbViewLogo","VerbWordDataTable","VerbView_VerbCharts","segmentRefData","SegmentQueries","getRefsWithinSegment","splitRef","chapVerseSplit","newQueryObj","starting_book","starting_chapter","starting_verse","ending_book","ending_chapter","ending_verse","console","log","isRefInSegment","OTNTRefData","segmentDataContainer","header","paddingTop","reference","discuss","footer","& p","images","readImage","imgCaption","groupIcons","opacity","furtherDiscovery","__webpack_exports__","_ref$pageContext","pageContext","updateVerbDialog","QuestionsRefs","QRef1","questionRef","updateQuestionRef","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","currentYear","Date","getFullYear","SegmentTitles","components_SegmentData_SegmentData","ReadTogether","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","Dialogs_VerbViewDialog","DiscussTogether","QuestionsData","QRef2","QRef3","SegmentData_OTNTData","components_Introduction_Introduction","document","./Celebration.png","./Communications.png","./Economics.png","./Education.png","./Family.png","./Foundational.png","./Government.png","./ReaderLogo.png","./Religion.png","./SVB-Discuss-together.png","./SVB-Read-together.png","./SVOriginalLanguagesLogo.png","./VerbViewLogo.png","./angelic.png","./demonic.png","./god.png","./other.png","./pluralBlack.png","./pluralBlue.png","./pluralGreen.png","./pluralGrey.png","./singleBlackMale.png","./singleBlueFemale.png","./singleBlueMale.png","./singleGreenFemale.png","./singleGreenMale.png","./singleGreyMale.png","webpackContext","req","webpackContextResolve","__webpack_require__","e","Error","code","resolve","module","exports","p","./H062.json","./H067.json","./H318.json","./H619.json"],"mappings":"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","file":"component---src-templates-chapter-page-js-cfc71daabf3e87864f06.js","sourcesContent":["import React from 'react'\nimport SourceIcons from '../../data/SourceIcons.json'\nimport IconButton from '@material-ui/core/IconButton';\nimport RssFeed from '@material-ui/icons/RssFeed';\nimport SVBLogo from '../../images/SVLogo.jpeg'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  speakingIcon: {\n    transform: 'rotate(45deg)'\n  },\n  SVicons: {\n    height: '50px',\n    width: '50px'\n  },\n  narratorIcon: {\n    height: '100px',\n    width: '100px'\n  },\n  SVBInfoTable: {\n    width: '100%',\n    height: 'fit-content',\n    margin: 0,\n    padding: 0,\n    borderSpacing: 0,\n    borderCollapse: 'collapse',\n    fontSize: '100%',\n  },\n  row: {\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  rightCell: {\n    wordWrap: 'normal',\n    flex: 1,\n    textAlign: 'right',\n  },\n  leftCell: {\n    wordWrap: 'break-word',\n    flex: 1,\n  },\n  rightIcon: {\n    wordWrap: 'normal',\n    flex: 1,\n    textAlign: 'center',\n  },\n  leftIcon: {\n    wordWrap: 'break-word',\n    flex: 1,\n    textAlign: 'center',\n  },\n  cellTitle: {\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    marginBottom: '1px',\n  },\n  narrator: {\n    textAlign: 'center'\n  },\n  sourceName: {\n    marginTop: 0,\n  }\n})\n\nconst SourceViewInfo = (props) => {\n  const classes = useStyles();\n    const SVBData = props.content\n    const color = () => {\n        switch (SVBData.color) {\n            case 'blue':\n                return 'darkblue'\n            case 'green':\n                return '#006400'\n            case 'red':\n                return '#d60000'\n            case 'black':\n                return 'black'\n            default:\n                return 'black'\n        } \n    }\n\n    if (SVBData.color !== 'black') {\n        let recipList = ``\n        SVBData.unique_recipients.map(recip => {\n            recipList = (recipList !== '') ? recipList + `, ${recip}` : recipList + `${recip}`\n        })\n        return (\n            <div>\n                <table className={classes.SVBInfoTable}>\n                    <tbody>\n                        <tr className={classes.row}>\n                            <td className={classes.leftIcon}><img src={require(`../../images/${SourceIcons[SVBData.source].sourceIcon}.png`)} className={classes.SVicons} alt=\"Source Name\" /></td>\n                            <td className={classes.middleIcon}>\n                              <IconButton className={classes.speakingIcon} size=\"large\">\n                                <RssFeed size=\"large\" />\n                              </IconButton>\n                            </td>\n                            <td className={classes.rightIcon}><img src={require(`../../images/${SourceIcons[SVBData.unique_recipients[0]].sourceIcon}.png`)} className={classes.SVicons} alt=\"Source Name\" /></td>\n                        </tr>\n                        <tr className={classes.row}>\n                            <td className={classes.leftCell}><span className={classes.cellTitle}>SOURCE(S)</span><br />{SVBData.source}</td>\n                            <td className={classes.middleCell}></td>\n                            <td className={classes.rightCell}><span className={classes.cellTitle}>RECIPIENT(S)</span><br />{(SVBData.unique_recipients.length === 1) ? SVBData.recipient : recipList}</td>\n                        </tr>\n                        <tr className={classes.row}>\n                            <td className={classes.leftCell}>Historical Time Period: </td>\n                            <td className={classes.middleCell}></td>\n                            <td className={classes.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    } else {\n        return (<div className={classes.narrator}>\n                <img src={require(`../../images/${SourceIcons[SVBData.source].sourceIcon}.png`)} className={classes.narratorIcon} alt=\"Source Name\" />\n                <p className={classes.cellTitle}>SOURCE</p>\n                <p className={classes.sourceName}>{`${SVBData.source} (${SVBData.unique_sources[0]})`}</p>\n                <table className={classes.SVBInfoTable}>\n                    <tbody>\n                        <tr className={classes.row}>\n                            <td className={classes.leftCell}>Historical Time Period: </td>\n                            <td className={classes.middleCell}></td>\n                            <td className={classes.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SourceViewInfo;","import React, { useState } from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport SourceViewInfo from '../SourceViewInfo/SourceViewInfo'\nimport SVBLogo from '../../images/SVLogo.jpeg'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  dialogTitle: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n    justifyContent: 'space-between'\n  },\n  title: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  SVicons: {\n    height: '50px',\n    width: '50px',\n    marginRight: '5px',\n    marginBottom: '5px'\n  },\n  sourceName: {\n    color: 'rgb(180, 180, 180)',\n    marginTop: '10px',\n    marginBottom: '0px',\n    fontSize: '80%',\n    textTransform: 'uppercase',\n  },\n  dialogContent: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n})\n\nconst SourceName = (props) => {\n  const classes = useStyles();\n    \n    // This controls the popup for the source information\n    const [ sourceDialog, updateSourceDialog ] = useState({open: false, content: {}})\n    const newSourceDialog = (obj) => {\n        updateSourceDialog(obj)\n    }\n    return (\n    <p className={classes.sourceName}\n    onClick={() => newSourceDialog({open: !sourceDialog.open, content: props.data})}\n    >\n        {props.sourceName}\n        {(sourceDialog.open === true) ? (\n            <Dialog \n                maxWidth='lg'\n                open={sourceDialog.open}\n                onClose={() => newSourceDialog({open: false, content: {}})}>\n                    <DialogTitle>\n                      <div className={classes.dialogTitle}>\n                        <img src={SVBLogo} className={classes.SVicons} alt=\"SourceView Logo\" />\n                        <div className={classes.title}>\n                          <Typography variant=\"h5\">SourceView Info</Typography>\n                        </div>\n                      </div>\n                    </DialogTitle>\n                    <DialogContent dividers className={classes.dialogContent}>\n                      <SourceViewInfo content={sourceDialog.content}/>  \n                    </DialogContent>\n            </Dialog> \n        ) : null}\n    </p>\n)}\n\nexport default SourceName;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => {\n        const receivedAppContext = useContext(AppContext)\n        const displayedData = (receivedAppContext.language === 'GRK') ? [\n                ['Gloss', props.content.IT],\n                ['Lemma', props.content.lexeme],\n                ['SBL Transliteration', props.content.transSBL],\n                ['GK #', props.content.GoodrickKohlenbergerNumbers],\n                ['LouwNida #', props.content.LouwNidaNumbers]\n         ] : [\n                ['Gloss', props.content.ETCBCgloss],\n                ['Lemma', props.content.HebrewLexeme],\n                ['SBL Transliteration', props.content.SBLstyleTransliteration],\n                ['Hebrew Reference', `${props.content.Heb_ref.book_id} ${props.content.Heb_ref.chapter_id}:${props.content.Heb_ref.verse_id}`],\n                ['English Reference', `${props.content.KJV_ref.book_id} ${props.content.KJV_ref.chapter_id}:${props.content.KJV_ref.verse_id}`],\n                ['Morphological Details', props.content.morphologyDetail]\n         ]\n        return (\n        <table className={styles.dialogTable}><tbody>\n                {displayedData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n                </tbody>\n        </table>\n        )\n}\n\nexport default Table;","import React, { useContext, useState } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport WordDataTable from '../WordDataTable/WordDataTable'\nimport theme from '../../theme'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n    dialog: {\n      width: '75vw',\n      height: '75vh'\n    },\n    definition: {\n      fontWeight: 'bold'\n    }\n  });\n\nconst InterlinearLeaf = (props) => {\n    const classes = useStyles();\n    const receivedAppContext = useContext(AppContext);\n    \n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        updateDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    const dictionary = (receivedAppContext.version === 'GNA') ? require('../../data/strongsGreekDictionary.json') : (receivedAppContext.version === 'WLC') ? require('../../data/strongsHebrewDictionary.json') : null\n\n    const strongsNumberOnly = (!word_metadata.data.StrongNumber) ? '-' : (word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber.substring(1,5) : word_metadata.data.extendedStrongNumber.substring(1,5)\n    const gloss = (word_metadata.data.ETCBCgloss === '[object marker]' || \n        word_metadata.data.ETCBCgloss === '[relative]' ||\n        word_metadata.data.ETCBCgloss === '[interrogative]' ||\n        word_metadata.data.ETCBCgloss === '[uncertain]' ) ? '-' : (receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{strongsNumberOnly}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{gloss}</span>\n                </span>\n                {(dialog.open === true) ? (\n                    <Dialog \n                    maxWidth='lg'\n                        open={dialog.open} \n                        onClose={() => newDialog({open: false, content: {}})}>\n                        <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.StrongNumber.substring(1,5)}` : `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.extendedStrongNumber.substring(1,5)}`}`}</DialogTitle>\n                        <DialogContent dividers>\n                            <p className={classes.definition}>{`STRONG'S DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                            <WordDataTable />\n                        </DialogContent>\n                    </Dialog> \n                ) : null}\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{strongsNumberOnly}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{gloss}</span>\n                    {(dialog.open === true) ? (\n                        <Dialog \n                        maxWidth='lg'\n                            open={dialog.open} \n                            onClose={() => newDialog({open: false, content: {}})}>\n                            <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.StrongNumber.substring(1,5)}` : `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.extendedStrongNumber.substring(1,5)}`}`}</DialogTitle>\n                            <DialogContent dividers>\n                                <p className={classes.definition}>{`STRONG'S DEFINITION:  `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                                <WordDataTable content={dialog.content}/>\n                            </DialogContent>\n                        </Dialog> \n                    ) : null}\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext, useState } from 'react'\nimport KeyPassages from './../../data/KeyPassages.json'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Foundational from './../../images/Foundational.png'\nimport Celebration from './../../images/Celebration.png'\nimport Communication from './../../images/Communications.png'\nimport Economics from './../../images/Economics.png'\nimport Education from './../../images/Education.png'\nimport Family from './../../images/Family.png'\nimport Government from './../../images/Government.png'\nimport Religion from './../../images/Religion.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst highlightColors = {\n    CEL: '#f9d7fb',\n    COM: '#eed7fb',\n    ECO: '#fbe9d7',\n    EDU: '#d7fbf8',\n    FAM: '#fbcaca',\n    GOV: '#fafbca',\n    REL: '#d8fbca',\n}\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    },\n    logo: {\n        height: '30px',\n        width: '30px',\n        marginRight: '20px',\n        flex: '0 0 30px'\n    },\n    leaf: {\n        whiteSpace: 'pre-wrap',\n        height: '25px',\n    },\n    chapter: {\n        fontWeight: 'bold'\n    },\n    verse: {\n        verticalAlign: 'top',\n        position: 'relative',\n        top: '-0.3em',\n        fontSize: '60%',\n        backgroundColor: 'transparent'\n    },\n    dialogRef: {\n        color: 'grey',\n        fontSize: '80%',\n        textAlign: \"center\",\n        marginBottom: '-15px'\n    },\n    dialogHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '-10px'\n    }\n  }));\n\nconst SphereLeaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        updateDialog(obj)\n    }\n\n    // Create CSS styles from marks\n    const keyPassage = (props.marks) ? props.marks.find(mark => mark.type === 'keyPassage') : undefined\n    const sphere = (keyPassage) ? keyPassage.data.id.substring(0.3) : null\n    const keyPassageNum = (keyPassage) ? keyPassage.data.id.substring(4,6) : null\n    const doubleHighlight = parseInt(keyPassageNum) > 46\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    let classNames = []\n    if (verse !== undefined) {\n        classNames.push(classes.verse)\n    }\n    if (chapter !== undefined) {\n        classNames.push(classes.chapter)\n    }\n\n    let styledClasses = ''\n\n    classNames.map(c => {\n        if (classNames.indexOf(c) === 0) {\n            styledClasses = `${c}`\n        } else {\n            styledClasses = styledClasses + `, ${c}`\n        }\n    })\n\n    let highlight = ''\n    if (keyPassage && doubleHighlight) {\n        highlight = `repeating-linear-gradient(${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]}, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]} 49.9%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 50.1%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 100%)`\n    } else if (keyPassage && !doubleHighlight) {\n        highlight = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else {\n        highlight = ''\n    }\n\n    let backgroundColor = '' \n    if (keyPassage && !doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else if (keyPassage && doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]\n    } else {\n        backgroundColor = ''\n    }\n\n    function getSphereLogo(SPH) {\n        const sphere = SPH.substring(0,3)\n        switch (sphere) {\n            case 'FOU':\n                return <img src={Foundational} className={classes.logo} />\n            case 'CEL':\n                return <img src={Celebration} className={classes.logo} />\n            case 'COM':\n                return <img src={Communication} className={classes.logo} />\n            case 'ECO':\n                return <img src={Economics} className={classes.logo} />\n            case 'EDU':\n                return <img src={Education} className={classes.logo} />\n            case 'FAM':\n                return <img src={Family} className={classes.logo} />\n            case 'GOV':\n                return <img src={Government} className={classes.logo} />\n            case 'REL':\n                return <img src={Religion} className={classes.logo} />\n        }\n    }\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return (\n            <span style={{\n                background: highlight,\n                boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n                whiteSpace: 'pre-wrap',\n                height: '25px',\n            }}\n            onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n            >\n            <span \n                id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`}\n                className={styledClasses} \n                style={{\n                    display: (receivedAppContext.displayRef) ? '' : 'none',\n                    background: highlight,\n                    boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : ''\n                }}\n                >\n                    {props.text}{(chapter)?'':'\\u00A0'}\n                </span></span>)\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span style={{\n            background: highlight,\n            boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n            whiteSpace: 'pre-wrap',\n            height: '25px',\n        }}\n        onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n        >\n            {footnote ? (\n                <span className={styledClasses} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                        {({ TransitionProps }) => (\n                            <ClickAwayListener onClickAway={handleClickAway}>\n                                <Fade {...TransitionProps} timeout={350}>\n                                    <Paper className={classes.paper}>\n                                    <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                    </Paper>\n                                </Fade>\n                            </ClickAwayListener>\n                        )}\n                    </Popper>\n                </span>\n            ) : <span className={styledClasses}>{props.text}</span>}\n            {(dialog.open === true) ? (\n                <Dialog \n                maxWidth='lg'\n                    open={dialog.open} \n                    onClose={() => newDialog({open: false, content: {}})}>\n                    <DialogTitle>\n                        <div className={classes.dialogHeader}>\n                            {getSphereLogo(sphere)}\n                            <p className={classes.dialogRef}>{dialog.content.mainSphere} #{keyPassage.data.id.substring(4,6)}</p>\n                        </div>\n                        {dialog.content.title}\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <p>Let's Think About This:</p>\n                        <ul>\n                            <li>{dialog.content.questions.Q1}</li>\n                            <li>{dialog.content.questions.Q2}</li>\n                            <li>{dialog.content.questions.Q3}</li>\n                            <li>{dialog.content.questions.Q4}</li>\n                        </ul>\n                    </DialogContent>\n                </Dialog> \n            ) : null}\n        </span>\n        )\n     }\n     \n    }\n\nexport default SphereLeaf;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const GodVerb = (props.marks) ? props.marks.find(mark => mark.type === 'GodVerb') : undefined\n    const SharedVerb = (props.marks) ? props.marks.find(mark => mark.type === 'SharedVerb') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, (GodVerb || SharedVerb)?styles.GodVerb:null, styles.leaf].join(' ') : styles.leaf\n    const VerbViewData = GodVerb || SharedVerb\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // if it's a GodVerb\n    else if (GodVerb || SharedVerb) {\n        return <span \n            className={(classNames !== null) ? classNames : ''} \n            onClick={() => props.verbViewDialog({open: true, content: Object.assign(word_metadata.data, {text: props.text}, { VerbView: VerbViewData.data })})}\n            style={(SharedVerb) ? {backgroundColor: '#f7c297'} : (GodVerb) ? {backgroundColor: 'yellow'}: null} >{props.text}</span>\n    }\n\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport SphereLeaf from '../Leaf/SphereLeaf'\nimport VerbLeaf from '../Leaf/VerbLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showSpheres) {\n                        return <SphereLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showVerbs) {\n                        return <VerbLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}\n                        verbViewDialog={props.verbViewDialog} />\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showSpheres) {\n                        return <SphereLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showVerbs) {\n                        return <VerbLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}\n                        verbViewDialog={props.verbViewDialog} />\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative',\n        fontSize: '80%'\n    },\n    text: {\n        paddingLeft: '0.5em',\n        paddingRight: '0.5em'\n    }\n  }))\n\nconst TableRow = (props) => {\n    const classes = useStyles()\n    const nodes = Array.from(props.content)\n    return (\n        <td className={classes.tableTD}>\n            {nodes.map(cell => <p className={classes.text}>{cell.nodes[0].leaves[0].text}</p>)}\n        </td>\n    )\n}\n\nexport default TableRow","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableCell from './TableCell'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative'\n    }\n  }))\n\nconst TableRow = (props) => {\n    const classes = useStyles()\n    const nodes = Array.from(props.content)\n    return (\n        <tr className={classes.tableTR}>\n            {nodes.map(cell => <TableCell content={cell.nodes}/>)}\n        </tr>\n    )\n}\n\nexport default TableRow","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableCell from './TableCell'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTH: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative'\n    }\n  }))\n\nconst TableRow = (props) => {\n    const classes = useStyles()\n    const nodes = Array.from(props.content)\n    return (\n        <tr className={classes.tableTH}>\n            {nodes.map(cell => <TableCell content={cell.nodes}/>)}\n        </tr>\n    )\n}\n\nexport default TableRow","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableRow from './TableRow'\nimport TableHeader from './TableHeader'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative'\n    }\n  }))\n\nconst Table = (props) => {\n    const classes = useStyles()\n    let nodes = Array.from(props.content)\n    nodes.shift()\n    return (\n        <table className={classes.table}>\n          <tbody>\n            <TableHeader content={Array.from(props.content)[0].nodes}></TableHeader>\n            {nodes.map(row => <TableRow content={row.nodes}/>)}\n          </tbody>\n        </table>\n    )\n}\n\nexport default Table","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut, Bar, HorizontalBar } from 'react-chartjs-2'\nimport OTNTData from '../../../data/OTNTData.json'\nimport SegmentRefs from '../../../data/SegmentTitles.json'\nimport LukData from '../../../data/Luk(OTNT).json'\nimport bibleBookList from '../../../data/BookChapterList.json'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { relative } from 'path';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '75px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '500px',\n    height: 'fit-content',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    fontSize: '11px',\n    lineHeight: '13px',\n    position: 'relative',\n    width: '100%',\n    paddingBottom: 1\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n    maxHeight: '275px'\n  },\n  segmentBarChart: {\n    flex: '1 1 400px',\n    height: 'fit-content'\n  },\n  chartholder: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: '5px',\n    marginBottom: '50px'\n  },\n  bookChart: {\n    height: '500px'\n  },\n  segChart: {\n    height: '400px',\n  },\n  piechart: {\n    height: '300px'\n  },\n  introSubtitle: {\n    color: 'rgb(83, 152, 255)',\n    fontWeight: 'bold'\n  }\n})\n\n// ---------------------- //\n// PIE CHART DATA\n// ---------------------- //\n\nconst percentageOfVerses = () => {\n  const segments = Object.keys(OTNTData)\n  let totals = {\n    verses: 0,\n    original: 0,\n    quotes: 0,\n    allusions: 0\n  }\n  segments.forEach(segment => {\n    totals.verses += OTNTData[segment].verses;\n    totals.quotes += OTNTData[segment].quotes;\n    totals.allusions += OTNTData[segment].allusions;\n    totals.original += (OTNTData[segment].total - OTNTData[segment].verses);\n  })\n  return totals\n}\n\nconst createPieChartData = () => {\n  return {\n    labels: [\"Quotations\",\"Allusions\",\"Remainder\"],\n    datasets: [{\n      data: [percentageOfVerses().quotes, percentageOfVerses().allusions, percentageOfVerses().original],\n      backgroundColor: [\n        'rgb(209, 0, 209)',\n        'rgb(255, 238, 4)',\n        'lightgrey',\n        ],\n      hoverBackgroundColor: [\n        'purple',\n        'rgb(184, 171, 0)',\n        'grey'\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'top',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\n// ---------------------- //\n// BOOK BAR CHART DATA\n// ---------------------- //\n\n\nconst bibleBookOrder = Object.keys(bibleBookList)\n\nconst BookBarChartOptions = {\n  scales: {\n    xAxes: [{ stacked: true }],\n    yAxes: [{ stacked: true }],\n  },\n  maintainAspectRatio: false,\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 20\n    },\n    display: false\n  },\n};\n\nconst getNumOfVerses = (ref) => {\n  const verseRef = ref.split(':')[1]\n  let numOfVerses = 1\n  if (verseRef.search('-') !== -1) {\n    // console.log(verseRef)\n    const startingVerse = parseInt(verseRef.split('-')[0])\n    const endingVerse = parseInt(verseRef.split('-')[1])\n    numOfVerses = endingVerse - startingVerse + 1;\n  }\n  return numOfVerses\n}\n\nconst createBookBarDataObj = () => {\n\n  // Compile Bar Data from JSON\n\n  const verses = Object.keys(LukData);\n  let barData = {}\n  verses.forEach(ref => {\n    const quotes = (LukData[ref].quotes !== undefined) ? Array.from(LukData[ref].quotes) : null\n    const allusions = (LukData[ref].allusions) ? LukData[ref].allusions : null\n    if (quotes) {\n      quotes.forEach(quoteRef => {\n        const numOfVerses = getNumOfVerses(quoteRef)\n        const bookRef = quoteRef.substring(0,3)\n        if (!barData[bookRef]) {\n          barData[bookRef] = {}\n          barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n        } else {\n          barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n        }\n      })\n    }\n    if (allusions) {\n      allusions.forEach(allusionRef => {\n        const numOfVerses = getNumOfVerses(allusionRef)\n        const bookRef = allusionRef.substring(0,3)\n        if (!barData[bookRef]) {\n          barData[bookRef] = {\n            allusions: numOfVerses\n          }\n        } else {\n          barData[bookRef].allusions += numOfVerses\n        }\n      })\n    }\n  })\n\n  // distribute Bar Data from JSON\n  let books = Object.keys(barData);\n  books.sort(function(a, b) {\n    return bibleBookOrder.indexOf(a) - bibleBookOrder.indexOf(b);\n  });\n\n  const bookData = {\n    labels: [],\n    quotes: [],\n    allusions: []\n  }\n  books.forEach(book => {\n    bookData.labels.push(book)\n    bookData.quotes.push((barData[book].quotes) ? barData[book].quotes : 0)\n    bookData.allusions.push((barData[book].allusions) ? barData[book].allusions : 0)\n\n  })\n\n  return {\n    labels: bookData.labels,\n    datasets: [\n      {\n        label: 'Quotations',\n        data: bookData.quotes,\n        backgroundColor: 'rgb(209, 0, 209)',\n        borderColor: 'purple',\n        borderWidth: 1,\n        hoverBackgroundColor: 'purple',\n        hoverBorderColor: 'purple',\n      },\n      {\n        label: 'Allusions',\n        data: bookData.allusions,\n        backgroundColor: 'rgb(255, 238, 4)',\n        borderColor: 'rgb(184, 171, 0)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgb(184, 171, 0)',\n        hoverBorderColor: 'rgb(184, 171, 0)',\n      }\n    ],\n  };\n}\n\n// ---------------------- //\n// SEGMENT BAR CHART DATA\n// ---------------------- //\n\nconst SegmentBarChartOptions = {\n  scales: {\n    xAxes: [{ stacked: true }],\n    yAxes: [{ stacked: true }],\n  },\n  maintainAspectRatio: false,\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    },\n    display: false\n  },\n};\n\nconst createSegmentBarDataObj = () => {\n  const segmentIDs = Object.keys(OTNTData);\n  let barData = {\n    quotes: [],\n    allusions: [],\n    original: [],\n    labels: []\n  }\n  segmentIDs.forEach(seg => {\n    barData.quotes.push((OTNTData[seg].quotes) ? OTNTData[seg].quotes : 0)\n    barData.allusions.push((OTNTData[seg].allusions) ? OTNTData[seg].allusions : 0)\n    barData.original.push(OTNTData[seg].total - OTNTData[seg].verses)\n    barData.labels.push(SegmentRefs[seg].ref)\n  })\n\n  return {\n    labels: barData.labels,\n    datasets: [\n      {\n        label: 'Quotations',\n        data: barData.quotes,\n        backgroundColor: 'rgb(209, 0, 209)',\n        borderColor: 'purple',\n        borderWidth: 1,\n        hoverBackgroundColor: 'purple',\n        hoverBorderColor: 'purple',\n      },\n      {\n        label: 'Allusions',\n        data: barData.allusions,\n        backgroundColor: 'rgb(255, 238, 4)',\n        borderColor: 'rgb(184, 171, 0)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgb(184, 171, 0)',\n        hoverBorderColor: 'rgb(184, 171, 0)',\n      },\n      {\n        label: 'Remainder',\n        data: barData.original,\n        backgroundColor: 'lightgrey',\n        borderColor: 'grey',\n        borderWidth: 1,\n        hoverBackgroundColor: 'grey',\n        hoverBorderColor: 'grey',\n      }\n    ],\n  };\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.root}>\n        <p className={classes.introSubtitle}>Old and New Testament Relationships</p>\n        <div className={classes.main}>\n          <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n            <CardHeader title={(props.testament === 'NT') ? 'Quotations and Allusions from OT' : `Quotations and Allusions used in ${props.book}`} disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={`${classes.cardContent} ${classes.piechart}`}>\n              <div className={classes.chartholder}>\n                <Doughnut \n                  data={createPieChartData(props.pieData)} \n                  options={chartOptions} \n                  height={null}\n                  width={null}\n                />\n              </div>\n            </CardContent>\n          </Card>\n          <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card} ${classes.segmentBarChart}`}>\n            <CardHeader title=\"Quotations, Allusions and Remainder (verses)\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={`${classes.cardContent} ${classes.segChart}`}>\n              <div className={classes.chartholder}>\n                <HorizontalBar\n                  data={createSegmentBarDataObj()}\n                  width={40}\n                  height={35}\n                  options={SegmentBarChartOptions}\n                />\n              </div>\n            </CardContent>\n          </Card>\n          <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.segmentBarChart}`}>\n            <CardHeader title=\"Books with Quotations and Allusions\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={`${classes.cardContent} ${classes.bookChart}`}>\n              <div className={classes.chartholder}>\n                <HorizontalBar\n                  data={createBookBarDataObj()}\n                  width={40}\n                  height={60}\n                  options={BookBarChartOptions}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n)}\n\nexport default SegmentData;","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\nimport IntroData from './IntroData/IntroData'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            <div>\n                {props.content.map(block => {\n                    switch (block.type) {\n                        case 'speech':\n                            return <Paragraph content={block.nodes} />\n                        case 'subtitle':\n                            return <Subtitle content={block.nodes} />\n                        case 'bulleted-list':\n                            return <BulletedList content={block.nodes} />\n                        case 'table':    \n                            return <Table content={block.nodes}/>\n                        default:\n                            return null\n                    }\n                })}\n            </div>\n            {(props.segmentID === 'I042') && <div><IntroData book={props.book}/></div>}\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px',\n    lineHeight: '150%'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Lead Character(s)', 'Other Character(s)'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title=\"Source Role Comparison\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut \n              data={createColorData(props.colors)} \n              options={chartOptions} \n              height={null}\n              width={null}\n              />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Most Frequent Sources\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]} ${classes.topWords}`} >{source.name} ({source.words})</p>)}\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Most Frequent Words\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => {\n        const receivedAppContext = useContext(AppContext)\n        const displayedData = (receivedAppContext.language === 'GRK') ? [\n                ['Lemma', props.content.lexeme],\n                ['SBL Transliteration', props.content.transSBL]\n         ] : [\n                ['Lemma', props.content.HebrewLexeme],\n                ['SBL Transliteration', props.content.SBLstyleTransliteration]\n         ]\n        return (\n        <table className={styles.dialogTable}><tbody>\n                {displayedData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n                </tbody>\n        </table>\n        )\n}\n\nexport default Table;","import React, { useState } from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  // main: {\n  //   display: 'flex',\n  //   justifyContent: 'center',\n  //   flexWrap: 'wrap',\n  //   textAlign: 'center',\n  //   marginBottom: '75px',\n  //   maxHeight: 'fit-content',\n  // },\n  occurrences: {\n    height: '300px',\n    width: '100%',\n    // margin: '0 auto',\n    position: 'relative'\n  },\n  byBook: {\n    height: '600px',\n    width: '100%',\n    // margin: '0 auto',\n    position: 'relative'\n  },\n  chartholder: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: '5px',\n    // marginBottom: '50px'\n  },\n  blackButton: {\n    color: 'black',\n    backgroundColor: 'rgb(201, 201, 201)',\n    borderColor: 'black',\n    margin: '2px'\n  },\n  redButton: {\n    color: '#d60000',\n    backgroundColor: '#ffadad',\n    borderColor: '#d60000',\n    margin: '2px'\n  },\n  greenButton: {\n    color: '#006400',\n    backgroundColor: '#b9f8b9',\n    borderColor: '#006400',\n    margin: '2px'\n  },\n  blueButton: {\n    color: 'darkblue',\n    backgroundColor: 'rgb(142, 227, 255)',\n    borderColor: 'darkblue',\n    margin: '2px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  selected: {\n    fontWeight: 'bold',\n    textDecoration: 'underline'\n  },\n  roles: {\n    width: '100%',\n    height: 'auto',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '10px'\n  },\n  roleSelectButton: {\n    padding: '2px'\n  },\n  showReferences: {\n    margin:'5px',\n    padding: '5px',\n    textAlign: 'center'\n  }\n})\n\nconst VerbCharts = (props) => {\n  const classes = useStyles()\n  const [ refColor, updateRefColor ] = useState('')\n  const [ showRefs, updateShowRefs ] = useState(false)\n  const verbFile = require(`../../data/Verbs/${props.fileRef}.json`)\n\n  // ------- OCCURRENCES DOUGHNUT CHART------- //\n  const occurrenceData = {\n      labels: [`GodVerbs (${verbFile[props.verbRef].NumGodVerbs})`,`SharedVerbs (${verbFile[props.verbRef].NumSharedVerbs})` ,`OtherVerbs (${verbFile[props.verbRef].NumOthersVerbs})`],\n      datasets: [\n      {\n          data: [verbFile[props.verbRef].NumGodVerbs, verbFile[props.verbRef].NumSharedVerbs, verbFile[props.verbRef].NumOthersVerbs],\n          backgroundColor: [\n              \"#ffadad\",\n              \"rgb(174, 145, 209)\",\n              \"rgb(142, 227, 255)\"\n          ],\n          hoverBackgroundColor: [\n              \"#d60000\",\n              \"rgb(111, 28, 212)\",\n              \"darkblue\"\n          ]\n      }] \n  };\n  const occurrenceOptions = {\n    title: {\n      display: true,\n      text: 'Occurrences in the Whole OT',\n      fontSize: 16\n    },\n    legend: {\n      position: 'top'\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 0,\n        bottom: 50\n      }\n    },\n    legend: {\n      position: 'top',\n      labels: {\n        fontSize: 9,\n        boxWidth: 40\n      }\n      // display: false\n    },\n  }\n  \n  // -------BOOK BAR CHART------- //\n  const books = Object.keys(verbFile[props.verbRef].bookCounts)\n  const VerbByBookData = () => {\n    let data = {\n      GodVerb: [],\n      SharedVerb: [],\n      OthersVerb: []\n    }\n    books.forEach(book => {\n      data.GodVerb.push(verbFile[props.verbRef].bookCounts[book].GodVerbs)\n      data.SharedVerb.push(verbFile[props.verbRef].bookCounts[book].SharedVerbs)\n      data.OthersVerb.push(verbFile[props.verbRef].bookCounts[book].OthersVerbs)\n    })\n    return data\n  }\n  \n  const bookData = {\n      labels: books,\n      datasets: [\n          {\n              label: 'GodVerbs',\n              backgroundColor: '#ffadad',\n              hoverBackgroundColor: '#d60000',\n              data: VerbByBookData().GodVerb\n          },\n          {\n              label: 'SharedVerbs',\n              backgroundColor: 'rgb(174, 145, 209)',\n              hoverBackgroundColor: 'rgb(111, 28, 212)',\n              data: VerbByBookData().SharedVerb\n          },\n          {\n              label: 'OtherVerbs',\n              backgroundColor: 'rgb(142, 227, 255)',\n              hoverBackgroundColor: 'darkblue',\n              data: VerbByBookData().OthersVerb\n          }\n      ]    \n  };\n\n  const HBarHeight = bookData.labels.length * 3\n\n  const bookDataOptions = {\n      title: {\n          display: true,\n          text: 'Occurrences by OT Book',\n          fontSize: 16\n      },\n      legend: {\n          position: 'top'\n      },\n      scales: {\n        xAxes: [{ stacked: true }],\n        yAxes: [{ stacked: true }],\n      },\n      maintainAspectRatio: false,\n      responsive: true\n  }\n\n  // ------- OCCURRENCES DOUGHNUT CHART------- //\n\n// group the references into colors\nconst groupedReferencesByColor = () => {\n  const all = verbFile[props.verbRef].GodRefs\n  const black = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'black')\n  const red = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'red')\n  const green = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'green')\n  const blue = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'blue')\n  return {\n    black,\n    red,\n    green,\n    blue,\n    all\n  }\n}\n// count groups\nconst countGroupedRefs = () => {\n  return {\n    black: groupedReferencesByColor().black.length,\n    red: groupedReferencesByColor().red.length,\n    green: groupedReferencesByColor().green.length,\n    blue: groupedReferencesByColor().blue.length\n  }\n}\n\n  const SourceRoleData = {\n    labels: [`Narrator`,`God` ,`Lead Character(s)`, `Other Character(s)`],\n    datasets: [\n    {\n        data: [countGroupedRefs().black, countGroupedRefs().red, countGroupedRefs().green, countGroupedRefs().blue],\n        backgroundColor: [\n          'grey',\n          '#ffadad',\n          '#b9f8b9',\n          'rgb(142, 227, 255)',\n          ],\n        hoverBackgroundColor: [\n          'black',\n          '#d60000',\n          '#006400',\n          'darkblue',\n          ]\n    }]    \n};\nconst SourceRoleOptions = {\n  title: {\n    display: true,\n    text: 'Source Role Comparison',\n    fontSize: 16\n  },\n  legend: {\n    position: 'top',\n  },\n  maintainAspectRatio: false,\n  responsive: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'top',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\n  return (\n  <div className={classes.main}>\n      <Divider />\n      <div className={classes.occurrences}>\n        <div className={classes.chartholder}>\n          <Doughnut \n              data={occurrenceData} \n              options={occurrenceOptions}\n              height={10}\n              width={10}\n          />\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.byBook}>\n        <div className={classes.chartholder}>\n          <HorizontalBar \n              data={bookData}  \n              width={50}\n              height={HBarHeight}\n              options={bookDataOptions}\n          />\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.occurrences}>\n        <div className={classes.chartholder}>\n          <Doughnut \n              data={SourceRoleData} \n              options={SourceRoleOptions}\n              height={10}\n              width={10}\n          />\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.showReferences}>\n        <Button color='primary' variant={(showRefs) ? \"outlined\" : \"contained\"} onClick={() => updateShowRefs(!showRefs)}>{(showRefs) ? \"Hide References\" : \"Show References\"}</Button>\n        {(showRefs) ? (\n          <div className={classes.roles}>\n            <span className={`${classes.black} ${classes.roleSelectButton} ${(refColor === 'all') && classes.selected}`} onClick={() => updateRefColor('all')}>All</span>\n            <span className={`${classes.black} ${classes.roleSelectButton} ${(refColor === 'black') && classes.selected}`} onClick={() => updateRefColor('black')}>Black</span>\n            <span className={`${classes.red} ${classes.roleSelectButton} ${(refColor === 'red') && classes.selected}`} onClick={() => updateRefColor('red')}>Red</span>\n            <span className={`${classes.green} ${classes.roleSelectButton} ${(refColor === 'green') && classes.selected}`} onClick={() => updateRefColor('green')}>Green</span>\n            <span className={`${classes.blue} ${classes.roleSelectButton} ${(refColor === 'blue') && classes.selected}`} onClick={() => updateRefColor('blue')}>Blue</span>\n            \n          </div>\n        ) : null}\n      </div>\n      <Divider />\n      {(refColor !== '' && showRefs) ? groupedReferencesByColor()[refColor].map(refButton => <Button size=\"small\" className={classes[`${refButton.color}Button`]} key={refButton.ref}>{refButton.ref}</Button>) : null}\n  </div>\n  )\n}\n\nexport default VerbCharts;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport VerbWordDataTable from '../../components/WordDataTable/VerbWordDataTable'\nimport VerbViewLogo from '../../images/VerbViewLogo.png'\nimport VerbCharts from '../../components/VerbView/VerbCharts'\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n  \nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  definition: {\n    fontWeight: 'bold'\n  },\n  dialogRef: {\n    color: 'grey',\n    fontSize: '80%',\n    textAlign: \"center\",\n    marginBottom: '-15px'\n  },\n  dialogHeader: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '-10px'\n  },\n  logo: {\n    height: '30px',\n    width: 'auto'\n  }\n}))\n\nconst getVerbRef = (ref) => {\n  if (ref.length === 4) {\n    return ref\n  } else if (ref.length === 3) {\n    return `${ref.substring(0,1)}0${ref.substring(1,3)}`\n  } else if (ref.length === 2) {\n    return `${ref.substring(0,1)}00${ref.substring(1,2)}`\n  }\n}\n\nconst VerbViewDialog = (props) => {\n  const classes = useStyles();\n  const testament = (props.verbDialog.content.VerbView.refNum.substring(0,1) === 'G') ? 'NT' : 'OT'\n  const dictionary = (testament === 'NT') ? require(`../../data/strongsGreekDictionary.json`) : (testament === 'OT') ? require(`../../data/strongsHebrewDictionary.json`) : null\n  const DJHVerb = getVerbRef(props.verbDialog.content.VerbView.refNum)\n  const strongLength = props.verbDialog.content.StrongNumber.length\n  return (\n    <Dialog \n      maxWidth='lg'\n      open={props.verbDialog.open} \n      onClose={() => props.newVerbDialog({open: false, content: {}})}>\n      <DialogTitle>\n        <div className={classes.dialogHeader}>\n            <img src={VerbViewLogo} className={classes.logo} alt=\"VerbViewLogo\" />\n            <Typography variant=\"h4\" className={classes.title}>VerbView</Typography>\n        </div>\n        {`${props.verbDialog.content.text} : ${props.verbDialog.content.VerbView.refNum}`}\n      </DialogTitle>\n      <DialogContent dividers>\n          <p className={classes.definition}>{`STRONG'S ${testament} #${props.verbDialog.content.StrongNumber.substring(1,strongLength)} DEFINITION:  `}<em>{(dictionary[props.verbDialog.content.StrongNumber]) ? dictionary[props.verbDialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n          <VerbWordDataTable content={props.verbDialog.content}/>\n          <VerbCharts fileRef={DJHVerb} verbRef={props.verbDialog.content.VerbView.refNum} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default VerbViewDialog;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut, HorizontalBar } from 'react-chartjs-2'\nimport OTNTRefData from '../../data/OTNTData.json'\nimport LukData from '../../data/Luk(OTNT).json'\nimport bibleBookList from '../../data/BookChapterList.json'\nimport SegmentQueries from '../../data/SegmentQueriesArray.json'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '75px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '500px',\n    height: 'fit-content',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    fontSize: '11px',\n    lineHeight: '13px',\n    position: 'relative',\n    width: '100%',\n    paddingBottom: 1\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n    maxHeight: '275px'\n  },\n  segmentBarChart: {\n    flex: '1 1 400px',\n    height: 'fit-content'\n  },\n  chartholder: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: '5px',\n    marginBottom: '50px'\n  },\n  bookChart: {\n    height: '500px'\n  },\n  segChart: {\n    height: '400px',\n  },\n  piechart: {\n    height: '300px'\n  },\n  introSubtitle: {\n    color: 'rgb(83, 152, 255)',\n    fontWeight: 'bold'\n  }\n})\n\nconst OTNTData = (props) => {\n  const classes = useStyles();\n\n  // ---------------------- //\n  // PIE CHART DATA\n  // ---------------------- //\n\n  // const percentageOfVerses = () => {\n  //   const segments = Object.keys(OTNTData)\n  //   let totals = {\n  //     verses: 0,\n  //     original: 0,\n  //     quotes: 0,\n  //     allusions: 0\n  //   }\n  //   segments.forEach(segment => {\n  //     totals.verses += OTNTData[segment].verses;\n  //     totals.quotes += OTNTData[segment].quotes;\n  //     totals.allusions += OTNTData[segment].allusions;\n  //     totals.original += (OTNTData[segment].total - OTNTData[segment].verses);\n  //   })\n  //   return totals\n  // }\n\n  const createPieChartData = () => {\n    return {\n      labels: [\"Quotations\",\"Allusions\",\"Remainder\"],\n      datasets: [{\n        data: [OTNTRefData[props.segmentID].quotes, OTNTRefData[props.segmentID].allusions, (OTNTRefData[props.segmentID].total - OTNTRefData[props.segmentID].allusions - OTNTRefData[props.segmentID].quotes)],\n        backgroundColor: [\n          'rgb(209, 0, 209)',\n          'rgb(255, 238, 4)',\n          'lightgrey',\n          ],\n        hoverBackgroundColor: [\n          'purple',\n          'rgb(184, 171, 0)',\n          'grey'\n          ]\n      }]\n    }\n  }\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 0,\n        bottom: 50\n      }\n    },\n    legend: {\n      position: 'top',\n      labels: {\n        fontSize: 9,\n        boxWidth: 40\n      }\n      // display: false\n    },\n  }\n\n  // ---------------------- //\n  // BOOK BAR CHART DATA\n  // ---------------------- //\n\n\n  const bibleBookOrder = Object.keys(bibleBookList)\n\n  const BookBarChartOptions = {\n    scales: {\n      xAxes: [{ stacked: true }],\n      yAxes: [{ stacked: true }],\n    },\n    maintainAspectRatio: false,\n    legend: {\n      position: 'right',\n      labels: {\n        fontSize: 9,\n        boxWidth: 20\n      },\n      display: false\n    },\n  };\n\n  const getNumOfVerses = (ref) => {\n    const verseRef = ref.split(':')[1]\n    let numOfVerses = 1\n    if (verseRef.search('-') !== -1) {\n      const startingVerse = parseInt(verseRef.split('-')[0])\n      const endingVerse = parseInt(verseRef.split('-')[1])\n      numOfVerses = endingVerse - startingVerse + 1;\n    }\n    return numOfVerses\n  }\n\n  const segmentRefData = SegmentQueries.filter(seg => seg.segment === props.segmentID)[0]\n\n  const isRefInSegment = (book, chapter, verse) => {\n    const newQueryObj = {\n      starting_book: segmentRefData.starting_book,\n      starting_chapter: parseInt(segmentRefData.starting_chapter),\n      starting_verse: parseInt(segmentRefData.starting_verse),\n      ending_book: segmentRefData.ending_book,\n      ending_chapter: parseInt(segmentRefData.ending_chapter),\n      ending_verse: parseInt(segmentRefData.ending_verse)\n    }\n\n    if (newQueryObj.starting_book !== newQueryObj.ending_book) {\n      // deal with crossover segments\n      console.log('must deal with crossover segments')\n    }\n\n    if (book === segmentRefData.starting_book) {\n      const numOfChapters = newQueryObj.ending_chapter - newQueryObj.starting_chapter + 1;\n      const isOneChapter = (newQueryObj.starting_chapter === newQueryObj.ending_chapter) ? true : false;\n      \n      // if there's more than one chapter\n      if (numOfChapters > 1) {\n        // if it's in the first chapter\n        if (chapter === newQueryObj.starting_chapter) {\n          // if the verse is or is after the first segment verse\n          if (verse >= newQueryObj.starting_verse) {\n            return true\n          } else {\n            return false\n          }\n        } \n\n        // if it's in a middle chapter\n        else if (chapter > newQueryObj.starting_chapter && chapter < newQueryObj.ending_chapter) {\n          return true\n        } \n\n        // if it's in the last chapter\n        else if (chapter === newQueryObj.ending_chapter) {\n          // if the verse is or is after the first segment verse\n          if (verse <= newQueryObj.ending_verse) {\n            return true\n          } else {\n            return false\n          }\n        }\n      }\n      // if there's only one chapter\n      else if (isOneChapter) {\n        if (chapter === newQueryObj.starting_chapter && chapter === newQueryObj.ending_chapter) {\n          // if the verse is within the segment verses\n          if (verse >= newQueryObj.starting_verse && verse <= newQueryObj.ending_verse) {\n            return true\n          } else {\n            return false\n          }\n        } else {\n          return false\n        }\n      }\n    } else {\n      return false\n    }\n  }\n\n  const getRefsWithinSegment = () => {\n    const allRefsInSegment = Object.values(LukData).filter(ref => {\n      const splitRef = ref.ref.split(' ')\n      const book = splitRef[0]\n      const chapVerseSplit = splitRef[1].split(':')\n      const chapter = parseInt(chapVerseSplit[0])\n      const verse = parseInt(chapVerseSplit[1].split('-')[0])\n      return isRefInSegment(book, chapter, verse)\n    //   if (isRefInSegment(book, chapter, verse), book, chapter, verse) {\n    //     return true\n    //   }\n    })\n    return allRefsInSegment\n  }\n\n  const createBookBarDataObj = () => {\n\n    // Compile Bar Data from JSON\n\n    const verses = getRefsWithinSegment().map(ref => ref.ref);\n    let barData = {}\n    verses.forEach(ref => {\n      const quotes = (LukData[ref].quotes !== undefined) ? Array.from(LukData[ref].quotes) : null\n      const allusions = (LukData[ref].allusions) ? LukData[ref].allusions : null\n      if (quotes) {\n        quotes.forEach(quoteRef => {\n          const numOfVerses = getNumOfVerses(quoteRef)\n          const bookRef = quoteRef.substring(0,3)\n          if (!barData[bookRef]) {\n            barData[bookRef] = {}\n            barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n          } else {\n            barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n          }\n        })\n      }\n      if (allusions) {\n        allusions.forEach(allusionRef => {\n          const numOfVerses = getNumOfVerses(allusionRef)\n          const bookRef = allusionRef.substring(0,3)\n          if (!barData[bookRef]) {\n            barData[bookRef] = {\n              allusions: numOfVerses\n            }\n          } else {\n            barData[bookRef].allusions += numOfVerses\n          }\n        })\n      }\n    })\n\n    // distribute Bar Data from JSON\n    let books = Object.keys(barData);\n    books.sort(function(a, b) {\n      return bibleBookOrder.indexOf(a) - bibleBookOrder.indexOf(b);\n    });\n\n    const bookData = {\n      labels: [],\n      quotes: [],\n      allusions: []\n    }\n    books.forEach(book => {\n      bookData.labels.push(book)\n      bookData.quotes.push((barData[book].quotes) ? barData[book].quotes : 0)\n      bookData.allusions.push((barData[book].allusions) ? barData[book].allusions : 0)\n\n    })\n\n    return {\n      labels: bookData.labels,\n      datasets: [\n        {\n          label: 'Quotations',\n          data: bookData.quotes,\n          backgroundColor: 'rgb(209, 0, 209)',\n          borderColor: 'purple',\n          borderWidth: 1,\n          hoverBackgroundColor: 'purple',\n          hoverBorderColor: 'purple',\n        },\n        {\n          label: 'Allusions',\n          data: bookData.allusions,\n          backgroundColor: 'rgb(255, 238, 4)',\n          borderColor: 'rgb(184, 171, 0)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgb(184, 171, 0)',\n          hoverBorderColor: 'rgb(184, 171, 0)',\n        }\n      ],\n    };\n  }\n\n  return (\n    <div className={classes.root}>\n      <p className={classes.introSubtitle}>Old and New Testament Relationships</p>\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title={(props.testament === 'NT') ? 'Quotations and Allusions From This Segment' : `Quotations and Allusions Used in This Segment`} disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.piechart}`}>\n            <div className={classes.chartholder}>\n              <Doughnut \n                data={createPieChartData(props.pieData)} \n                options={chartOptions} \n                height={null}\n                width={null}\n              />\n            </div>\n          </CardContent>\n        </Card>\n        {/* <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card} ${classes.segmentBarChart}`}>\n          <CardHeader title=\"Quotations, Allusions and Remainder (verses)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.segChart}`}>\n            <div className={classes.chartholder}>\n              <HorizontalBar\n                data={createSegmentBarDataObj()}\n                width={40}\n                height={35}\n                options={SegmentBarChartOptions}\n              />\n            </div>\n          </CardContent>\n        </Card> */}\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.segmentBarChart}`}>\n          <CardHeader title=\"Books with Quotations and Allusions\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.bookChart}`}>\n            <div className={classes.chartholder}>\n              <HorizontalBar\n                data={createBookBarDataObj()}\n                width={40}\n                height={60}\n                options={BookBarChartOptions}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default OTNTData;","import React, { useEffect, useContext, useState } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport ReadTogether from '../images/SVB-Read-together.png'\nimport DiscussTogether from '../images/SVB-Discuss-together.png'\nimport SegmentTitles from '../data/SegmentTitles.json'\nimport QuestionsRefs from '../data/QuestionsRefs.json'\nimport QuestionsData from '../data/QuestionsData(Eng).json'\nimport Button from '@material-ui/core/Button';\nimport VerbViewDialog from '../components/Dialogs/VerbViewDialog'\nimport OTNTData from '../components/SegmentData/OTNTData'\nimport OTNTRefData from '../data/OTNTData.json'\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  paper: {\n      background: '#3A4C7D',\n      width: '75vw'\n  },\n  segmentDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingTop: '5px'\n  },\n  title: {\n    fontSize: '150%',\n    fontWeight: ' bold',\n    textDecoration: 'underline',\n    width: '100%',\n    margin: 0,\n    textAlign: 'center'\n  },\n  reference: {\n    margin: 0,\n    fontSize: '60%',\n    color: 'grey'\n  },\n  discuss: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n    borderTop: '0.25px lightgrey solid',\n  },\n  footer: {\n    textAlign: 'center',\n    fontSize: '60%',\n    margin: '10px 0 30px 0',\n    '& p': {\n      margin: 0\n    }\n  },\n  images: {\n    width: '200px',\n    margin: '10px auto',\n  },\n  readImage: {\n    marginBottom: '20px',\n    borderBottom: '0.25px lightgrey solid',\n  },\n  content: {\n    margin: '0 0 10px 0',\n    padding: '0 0 10px 0'\n  },\n  questions: {\n    textAlign: 'left',\n    margin: '30px 0',\n    '& p': {\n      margin: '10px 0',\n    }\n  },\n  imgCaption: {\n    color: 'grey',\n    fontSize: '70%',\n    margin: '-20px 0 0 0',\n    textAlign: 'center'\n  },\n  groupIcons: {\n    opacity: 0.60\n  },\n  furtherDiscovery: {\n    textAlign: 'center',\n    margin: '10px'\n  }\n}))\n\n\nexport default ({pageContext: {segment, book, segmentID}}) => {\n  const classes = useStyles();\n  const receivedAppContext = useContext(AppContext);\n\n  // This controls the popup for the word information\n  const [ verbDialog, updateVerbDialog ] = useState({open: false, content: {}})\n  const newVerbDialog = (obj) => {\n    console.log(obj)\n    updateVerbDialog(obj)\n  }\n\n  // figure out solution for introductions without QRefs \n  const [ questionRef, updateQuestionRef ] = useState((segmentID[0] === 'S') ? QuestionsRefs[segmentID].QRef1 : '')\n  // const NTBooks = [\"Tit\", \"Rev\", \"Jam\", \"3Jn\", \"Heb\", \"2Co\", \"Luk\", \"Mat\", \"2Ti\", \"2Th\", \"1Pe\", \"Gal\", \"2Pe\", \"Joh\", \"Php\", \"1Ti\", \"Phm\", \"Mar\", \"Eph\", \"Act\", \"1Co\", \"Col\", \"Jud\", \"Rom\", \"1Jn\", \"2Jn\", \"1Th\"]\n  // const isNT = (NTBooks.indexOf(book) !== -1) ? true : false\n  \n  function changeQuestions () {\n    if (questionRef === QuestionsRefs[segmentID].QRef1) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef2)\n    } else if (questionRef === QuestionsRefs[segmentID].QRef2) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef3)\n    } else if (questionRef === QuestionsRefs[segmentID].QRef3) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef1)\n    }\n  }\n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <p className={classes.title}>{SegmentTitles[segmentID].title}</p>\n      </div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(segmentID[0] === 'S') ? (\n        <div>\n          <div className={classes.segmentDataContainer}>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          <div className={`${classes.images} ${classes.readImage}`}>\n            <img src={ReadTogether} className={classes.groupIcons} alt=\"Read Together\" />\n            <p className={classes.imgCaption}>Each person reads a color aloud</p>\n          </div>\n          <div className={classes.content}>\n            {segment.content.map(block => {\n              if (block.data.color === 'black') {\n                return (<Narrator \n                  sourceData={block.data}\n                  inlines={block.nodes}\n                  verbViewDialog={newVerbDialog} />\n                  )\n              } else {\n                return (<SpeechBubble \n                  sourceData={block.data}\n                  inlines={block.nodes}\n                  verbViewDialog={newVerbDialog} />\n                  )\n              }\n            })}\n          </div>\n          {(verbDialog.open === true) ? (\n              <VerbViewDialog verbDialog={verbDialog} newVerbDialog={newVerbDialog} /> \n          ) : null}\n          <div className={classes.discuss}>\n            <div className={classes.images}>\n              <img src={DiscussTogether} alt=\"Discuss Together\" />\n              <p className={classes.imgCaption}>Discuss the questions with others</p>\n            </div>\n            <p className={classes.title}>{QuestionsData[questionRef].title}</p>\n            <div className={classes.questions}>\n              <p>{QuestionsData[questionRef].Q1}</p>\n              <p>{QuestionsData[questionRef].Q2}</p>\n              <p>{QuestionsData[questionRef].Q3}</p>\n              <p>{QuestionsData[questionRef].Q4}</p>\n            </div>\n            <Button color='secondary' variant=\"contained\" onClick={() => changeQuestions()}>Change Questions</Button>\n          </div>\n          <Divider />\n          {(receivedAppContext.version === 'NLT' && Object.keys(OTNTRefData).indexOf(segmentID) !== -1) ? (<div className={classes.furtherDiscovery}>\n            <Typography variant=\"h4\">Further Discovery</Typography>\n            <OTNTData segmentID={segmentID}/>\n          </div>) : null}\n          <div className={classes.footer}>\n            <p>Copyright info of version</p>\n            <p>© {currentYear} SourceView LLC.</p>\n          </div>\n        </div>\n    ) : (\n        <Introduction \n          content={segment.content.document.nodes} \n          segmentID={segmentID}\n          book={book}\n        />\n      )}\n    </div>\n  )}","var map = {\n\t\"./Celebration.png\": 379,\n\t\"./Communications.png\": 380,\n\t\"./Economics.png\": 381,\n\t\"./Education.png\": 382,\n\t\"./Family.png\": 383,\n\t\"./Foundational.png\": 384,\n\t\"./Government.png\": 385,\n\t\"./ReaderLogo.png\": 412,\n\t\"./Religion.png\": 386,\n\t\"./SVB-Discuss-together.png\": 387,\n\t\"./SVB-Read-together.png\": 388,\n\t\"./SVOriginalLanguagesLogo.png\": 361,\n\t\"./VerbViewLogo.png\": 389,\n\t\"./angelic.png\": 413,\n\t\"./demonic.png\": 414,\n\t\"./god.png\": 415,\n\t\"./other.png\": 416,\n\t\"./pluralBlack.png\": 417,\n\t\"./pluralBlue.png\": 418,\n\t\"./pluralGreen.png\": 419,\n\t\"./pluralGrey.png\": 420,\n\t\"./singleBlackMale.png\": 421,\n\t\"./singleBlueFemale.png\": 422,\n\t\"./singleBlueMale.png\": 423,\n\t\"./singleGreenFemale.png\": 424,\n\t\"./singleGreenMale.png\": 425,\n\t\"./singleGreyMale.png\": 426\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 360;","module.exports = __webpack_public_path__ + \"static/SVOriginalLanguagesLogo-0eb106a393f3a2ec8a5d4e7995dbf998.png\";","module.exports = __webpack_public_path__ + \"static/Celebration-2c9ec1357f30421505bee054e0e82eeb.png\";","module.exports = __webpack_public_path__ + \"static/Communications-0bf260c2a8a26669d65be3987c7869c9.png\";","module.exports = __webpack_public_path__ + \"static/Economics-19650faf9e095f37bb714b06ed1142a3.png\";","module.exports = __webpack_public_path__ + \"static/Education-f8fc9f170534746838fd44f56d07182f.png\";","module.exports = __webpack_public_path__ + \"static/Family-1e9e99a1b1f8bea9c877685d76763247.png\";","module.exports = __webpack_public_path__ + \"static/Foundational-b52df7354ececc9f918dc19b5085f0ac.png\";","module.exports = __webpack_public_path__ + \"static/Government-d2f7040273a32db2b509da594f423b6f.png\";","module.exports = __webpack_public_path__ + \"static/Religion-ec14c054570f8236824435380d78b2be.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Discuss-together-ea87a32e2fe039e84980badd5ee97a5a.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Read-together-c3869d4d71bf839bdd9a7b8be1078625.png\";","module.exports = __webpack_public_path__ + \"static/VerbViewLogo-5a8e4e8b2ba5866885e9c2179c015d41.png\";","module.exports = __webpack_public_path__ + \"static/ReaderLogo-a6650fa8b6e59d748d87973f6b3dfbee.png\";","module.exports = __webpack_public_path__ + \"static/angelic-f8a2e0d46d262d79e4b1f706ff519695.png\";","module.exports = __webpack_public_path__ + \"static/demonic-f7120d82b566cd18940023ab6cca9723.png\";","module.exports = __webpack_public_path__ + \"static/god-14bb10213e5bf26fdbc920aacc58cfae.png\";","module.exports = __webpack_public_path__ + \"static/other-aa41e41e8f574445db6d3f6ce07e2c27.png\";","module.exports = __webpack_public_path__ + \"static/pluralBlack-7f9368599c2db2e381133151051af7f7.png\";","module.exports = __webpack_public_path__ + \"static/pluralBlue-e2cb2f4777e273dfe9ce78069afeb16b.png\";","module.exports = __webpack_public_path__ + \"static/pluralGreen-8dfc91402fc6fd599139bcf43bf4c1db.png\";","module.exports = __webpack_public_path__ + \"static/pluralGrey-219f7759ec1dd4eb79d4de0c300e1a8c.png\";","module.exports = __webpack_public_path__ + \"static/singleBlackMale-f63e77b57287aa3bb9740cd21fb6ac05.png\";","module.exports = __webpack_public_path__ + \"static/singleBlueFemale-68dc87f973f1566ea6f39ccf3bc0738d.png\";","module.exports = __webpack_public_path__ + \"static/singleBlueMale-5f79947b8156b7f4c18fe2848dd2323a.png\";","module.exports = __webpack_public_path__ + \"static/singleGreenFemale-775894f052aca50c6a9bb1f816a5ce2e.png\";","module.exports = __webpack_public_path__ + \"static/singleGreenMale-936c271aabba545d9f2942a4a7401ac5.png\";","module.exports = __webpack_public_path__ + \"static/singleGreyMale-b1386196af3c6c6cc3c2eb302fa0cf33.png\";","var map = {\n\t\"./H062.json\": 528,\n\t\"./H067.json\": 529,\n\t\"./H318.json\": 530,\n\t\"./H619.json\": 531\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 527;"],"sourceRoot":""}