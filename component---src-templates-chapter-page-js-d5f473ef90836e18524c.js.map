{"version":3,"sources":["webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./src/images/SVB-Read-together.png","webpack:///./src/images/SVB-Discuss-together.png"],"names":["SourceName","props","receivedAppContext","useContext","AppContext","react_default","a","createElement","className","styles","sourceName","onClick","updateSourceDialog","open","sourceDialog","content","data","useStyles","makeStyles","theme","typography","padding","spacing","fontSize","color","paper","background","width","maxWidth","Leaf","_useState","useState","anchorEl","setAnchorEl","classes","chapter","marks","find","mark","type","undefined","verse","footnote","bibleRef","classNames","leaf","join","handleClickAway","Boolean","id","book","style","display","displayRef","text","event","currentTarget","Popper","transition","placement","_ref","TransitionProps","ClickAwayListener","onClickAway","Fade","Object","assign","timeout","Paper","Typography","InterlinearLeaf","updateDialog","obj","newDialog","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","Fragment","key","word_ID","whitespace","dialog","interlinearinterlinear","interlinearStrongs","StrongNumber","interlinearTranslation","language","IT","ETCBCgloss","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","backgroundColor","extendedStrongNumber","Inlines","prose","leaves","map","interlinear","Leaf_InterlinearLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","source","speechbubblehebrew","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","push","length","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","Subtitle","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","NarratorText","main","justifyContent","flexWrap","textAlign","marginBottom","maxHeight","card","margin","leftCard","marginRight","top5","flex","cardTitle","textDecoration","fontWeight","top5List","cardContent","lineHeight","red","green","blue","topSources","topWords","colorComparison","createColorData","keys","pop","values","labels","datasets","Math","round","total","hoverBackgroundColor","chartOptions","responsive","maintainAspectRatio","layout","left","right","top","bottom","legend","position","boxWidth","SegmentData","Card","CardHeader","title","disableTypography","CardContent","chart","es","colors","options","sourcesArray","val","words","sort","b","top5Sources","count","forEach","name","getTopSources","sources","repeatedWords","segmentDataContainer","header","paddingTop","reference","discuss","borderTop","footer","& p","images","readImage","borderBottom","questions","__webpack_exports__","segment","pageContext","anchorElRead","setAnchorElRead","_useState2","anchorElDiscuss","setAnchorElDiscuss","openRead","openDiscuss","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","currentYear","Date","getFullYear","components_SegmentData_SegmentData","src","ReadTogether","alt","_ref2","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","DiscussTogether","_ref3","components_Introduction_Introduction","document","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-templates-chapter-page-js-d5f473ef90836e18524c.js","sourcesContent":["import React, { useContext } from 'react'\nimport styles from './SourceName.module.css'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SourceName = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    return (\n    <p className={styles.sourceName}\n    onClick={() => receivedAppContext.updateSourceDialog({open: !receivedAppContext.sourceDialog.open, content: props.data})}\n    >{props.sourceName}</p>\n)}\n\nexport default SourceName;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\n\nconst InterlinearLeaf = (props) => {\n\n    const receivedAppContext = useContext(AppContext);\n    const updateDialog = (obj) => {\n        receivedAppContext.newDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => updateDialog({open: !receivedAppContext.dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(!word_metadata.data.StrongNumber) ? '-' : word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => updateDialog({open: !receivedAppContext.dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                    style={(word_metadata.data.StrongNumber === 'H4487') ? {backgroundColor: 'yellow'} : null}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber : word_metadata.data.extendedStrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            {props.content.map(block => {\n                switch (block.type) {\n                    case 'speech':\n                        return <Paragraph content={block.nodes} />\n                    case 'subtitle':\n                        return <Subtitle content={block.nodes} />\n                    case 'bulleted-list':\n                        return <BulletedList content={block.nodes} />\n                    case 'table':\n                        return <p style={{color: 'red'}}>TABLE WILL BE HERE!</p>\n                        // <Table content={block.nodes} />\n                    default:\n                        return null\n                }\n            })}\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'rgba(58, 76, 125, 0.07)'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Main Character(s)', 'Everyone Else'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title=\"Color Comparison\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut data={createColorData(props.colors)} options={chartOptions} />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Top Sources (words)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]} ${classes.topWords}`} >{source.name} ({source.words})</p>)}\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Top Repeated Words\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useEffect, useContext, useState } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport ReadTogether from '../images/SVB-Read-together.png'\nimport DiscussTogether from '../images/SVB-Discuss-together.png'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  paper: {\n      background: '#3A4C7D',\n      width: '75vw'\n  },\n  segmentDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingTop: '5px'\n  },\n  title: {\n    fontSize: '150%',\n    fontWeight: ' bold',\n    textDecoration: 'underline',\n    width: '100%',\n    margin: 0,\n    textAlign: 'center'\n  },\n  reference: {\n    margin: 0,\n    fontSize: '60%',\n    color: 'grey'\n  },\n  discuss: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n    borderTop: '0.25px lightgrey solid',\n  },\n  footer: {\n    textAlign: 'center',\n    fontSize: '60%',\n    margin: '10px 0 30px 0',\n    '& p': {\n      margin: 0\n    }\n  },\n  images: {\n    width: '200px',\n    margin: '10px auto',\n  },\n  readImage: {\n    marginBottom: '20px',\n    borderBottom: '0.25px lightgrey solid',\n  },\n  content: {\n    margin: '0 0 10px 0',\n    padding: '0 0 10px 0'\n  },\n  questions: {\n    textAlign: 'left',\n    margin: 0,\n    '& p': {\n      margin: '10px 0',\n    }\n  }\n}))\n\n\nexport default ({pageContext: {segment}}) => {\n  const classes = useStyles();\n  const receivedAppContext = useContext(AppContext);\n  const [anchorElRead, setAnchorElRead] = useState(null);\n  const [anchorElDiscuss, setAnchorElDiscuss] = useState(null);\n  function handleClickRead(event) {\n    setAnchorElRead(anchorElRead ? null : event.currentTarget);\n  }\n  function handleClickDiscuss(event) {\n    setAnchorElDiscuss(anchorElDiscuss ? null : event.currentTarget);\n  }\n  const openRead = Boolean(anchorElRead);\n  const openDiscuss = Boolean(anchorElDiscuss);\n  \n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <p className={classes.title}>Title</p>\n        <p className={classes.reference}>Reference</p>\n      </div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(segment.content) ? (\n        <div>\n          <div className={classes.segmentDataContainer}>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          <div className={`${classes.images} ${classes.readImage}`} onClick={handleClickRead}>\n            <img src={ReadTogether} alt=\"Read Together\" />\n            <Popper id=\"footnote\" open={openRead} anchorEl={anchorElRead} transition placement=\"bottom\">\n                {({ TransitionProps }) => (\n                <Fade {...TransitionProps} timeout={350}>\n                    <Paper className={classes.paper}>\n                    <Typography className={classes.typography}>Each person reads a color aloud</Typography>\n                    </Paper>\n                </Fade>\n                )}\n            </Popper>\n          </div>\n          <div className={classes.content}>\n            {segment.content.map(block => {\n              if (block.data.color === 'black') {\n                return (<Narrator \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              } else {\n                return (<SpeechBubble \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              }\n            })}\n          </div>\n          <div className={classes.discuss}>\n            <div className={classes.images} onClick={handleClickDiscuss}>\n              <img src={DiscussTogether} alt=\"Discuss Together\" />\n              <Popper id=\"footnote\" open={openDiscuss} anchorEl={anchorElDiscuss} transition placement=\"bottom\">\n                {({ TransitionProps }) => (\n                <Fade {...TransitionProps} timeout={350}>\n                    <Paper className={classes.paper}>\n                    <Typography className={classes.typography}>Discuss the questions with others</Typography>\n                    </Paper>\n                </Fade>\n                )}\n              </Popper>\n            </div>\n            <p className={classes.title}>Title</p>\n            <div className={classes.questions}>\n              <p>Question #1: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #2: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #3: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #4: this is a really, really, really, really, really, really, really, really, really long question</p>\n            </div>\n          </div>\n          <div className={classes.footer}>\n            <p>copyright info of version</p>\n            <p>© {currentYear} SourceView LLC.</p>\n          </div>\n        </div>\n    ) : (\n        <Introduction content={segment.document.nodes} />\n      )}\n    </div>\n  )}","module.exports = __webpack_public_path__ + \"static/SVB-Read-together-c3869d4d71bf839bdd9a7b8be1078625.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Discuss-together-ea87a32e2fe039e84980badd5ee97a5a.png\";"],"sourceRoot":""}