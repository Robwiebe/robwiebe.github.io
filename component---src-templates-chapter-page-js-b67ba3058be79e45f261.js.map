{"version":3,"sources":["webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/templates/ChapterPage.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/contextAPI/dialog-context.js","webpack:///./src/components/Layout/header.js","webpack:///./src/components/Layout/navButtons.js","webpack:///./src/components/WordDataTable/WordDataTable.js","webpack:///./src/components/Layout/layout.js"],"names":["Leaf","props","chapter","marks","find","mark","type","undefined","verse","classNames","styles","leaf","join","bibleRef","react_default","a","createElement","reference","data","book","className","text","InterlinearLeaf","dialog","useContext","DialogContext","updateDialog","obj","newDialog","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","Fragment","key","word_ID","whitespace","onClick","open","content","interlinearinterlinear","interlinearStrongs","StrongNumber","interlinearTranslation","IT","lineBreak","SourceName","sourceName","SpeechBubble","Interlinear","language","components_SourceName_SourceName","sourceData","source","speechbubble","color","leaves","map","Leaf_InterlinearLeaf","components_Leaf_Leaf","NarratorText","__webpack_exports__","_ref","segment","pageContext","prevURL","version","nextURL","contentJSON","JSON","parse","layout","document","nodes","block","SVBData","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","style","background","height","textAlign","position","top","zIndex","width","gatsby_browser_entry","to","textDecoration","defaultProps","NavButtons","classNamesLeft","button","left","classNamesRight","right","prev","fontSize","next","Table","dialogTable","rowData","row","leftCell","rightCell","book_id","chapter_id","verse_id","Layout","_useState","useState","dialog_context","Provider","value","header","site","siteMetadata","title","margin","maxWidth","padding","paddingTop","marginTop","primereact_dialog","visible","contentStyle","overflowY","baseZIndex","modal","onHide","WordDataTable","entries","navButtons","_755544856","node"],"mappings":"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","file":"component---src-templates-chapter-page-js-b67ba3058be79e45f261.js","sourcesContent":["import React from 'react'\nimport styles from './Leaf.module.css'\n\nconst Leaf = (props) => {\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    // Create Bible references\n    let bibleRef = (verse) ? props.marks.find(mark => mark.type === 'reference') : undefined\n       if (bibleRef !== undefined) {\n        //  console.log(`bibleRef => ${bibleRef.data.book} ${bibleRef.data.chapter}:${bibleRef.data.verse}`)\n         return <span reference={`${bibleRef.data.book}.${bibleRef.data.chapter}.${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n     } \n     // If not a verse, don't create a reference\n     else {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport DialogContext from '../../contextAPI/dialog-context'\nimport styles from './InterlinearLeaf.module.css'\n\nconst InterlinearLeaf = (props) => {\n    // This controls the popup for the word information\n    const dialog = useContext(DialogContext);\n    const updateDialog = (obj) => {\n        dialog.newDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span reference={`${bibleRef.data.book}.${bibleRef.data.chapter}.${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => updateDialog({open: !dialog.dialog.open, content: word_metadata.data})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{word_metadata.data.IT}</span>\n                </span>\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}></span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}></span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.interlinearLeaf} \n                    onClick={() => updateDialog({open: !dialog.dialog.open, content: word_metadata.data})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{word_metadata.data.IT}</span>\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React from 'react'\nimport styles from './SourceName.module.css'\n\nconst SourceName = (props) => (\n    <p className={styles.sourceName}>{props.sourceName}</p>\n)\n\nexport default SourceName;","import React from 'react'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\n\nconst SpeechBubble = (props) => {\n    // const hebrew = props.language === 'HBR'\n    const Interlinear = (props.language === 'GRK') ? true : false\n    return (\n        <div>\n            <SourceName sourceName={props.sourceData.source} />\n            <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n            {props.leaves.map(leaf => {\n                if (Interlinear) {\n                    return <InterlinearLeaf \n                    marks={leaf.marks}\n                    text={leaf.text}/>\n                } else {\n                    return <Leaf \n                    marks={leaf.marks}\n                    text={leaf.text}/>\n                }\n            })}\n            </div>\n        </div>\n    )\n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport SourceName from '../SourceName/SourceName'\n\nconst NarratorText = (props) => {\n    // const hebrew = props.language === 'HBR'\n    const Interlinear = (props.language === 'GRK') ? true : false\n    return (\n        <div>\n            <SourceName sourceName={props.sourceData.source} />\n            <div>\n            {props.leaves.map(leaf => {\n                if (Interlinear) {\n                    return <InterlinearLeaf \n                    marks={leaf.marks}\n                    text={leaf.text}/>\n                } else {\n                    return <Leaf \n                    marks={leaf.marks}\n                    text={leaf.text}/>\n                }\n            })}\n            </div>\n        </div>\n)}\n\nexport default NarratorText;","import React from 'react'\n// import { graphql } from \"gatsby\"\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport Layout from \"../components/Layout/layout\"\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nexport default ({pageContext: {segment}}) => {\n  \n  const prevURL = `/Reader/${segment.language}/${segment.version}/${segment.book}/${segment.chapter -1}`\n  const nextURL = `/Reader/${segment.language}/${segment.version}/${segment.book}/${segment.chapter +1}`\n\n  // convert string into JSON\n  const contentJSON = JSON.parse(segment.content)\n\n  return (\n    <Layout prevURL={prevURL} nextURL={nextURL}>\n    \n        {contentJSON.document.nodes.map(block => {\n        const SVBData = {\n          color: block.data.color,\n          source: block.data.source\n        }\n        if (SVBData.color === 'black') {\n          return (<Narrator \n            sourceData={SVBData}\n            leaves={block.nodes[0].leaves}\n            language={segment.language} />\n            )\n        } else {\n          return (<SpeechBubble \n            sourceData={SVBData}\n            leaves={block.nodes[0].leaves}\n            language={segment.language} />\n            )\n        }\n      })}\n    </Layout>\n  )}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nconst DialogContext = React.createContext({open: false, content: {}})\n\nexport default DialogContext;","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `grey`,\n      height: '50px',\n      textAlign: 'center',\n      // marginBottom: `1.45rem`,\n      position: 'fixed',\n      top: '0',\n      zIndex: '2',\n      width: '100%'\n    }}\n  >\n    <div\n      // style={{\n      //   margin: `0 auto`,\n      //   maxWidth: 960,\n      //   padding: `1.45rem 1.0875rem`,\n      // }}\n    >\n      <Link\n        to=\"/\"\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        {siteTitle}\n      </Link>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport styles from './navButtons.module.css'\nimport { Link } from \"gatsby\"\n\nconst NavButtons = (props) => {\n    const classNamesLeft = [styles.button, styles.left].join(' ')\n    const classNamesRight = [styles.button, styles.right].join(' ')\n    return (\n        <React.Fragment>\n            <Link to={props.prev} className={classNamesLeft}><i className=\"pi pi-chevron-left\" style={{fontSize: '0.5em'}}></i></Link>\n            <Link to={props.next} className={classNamesRight}><i className=\"pi pi-chevron-right\" style={{fontSize: '0.5em'}}></i></Link>\n        </React.Fragment>\n    )\n}\n\nexport default NavButtons;","import React from 'react'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => (<table className={styles.dialogTable}>\n            {props.rowData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n        </table>)\n\nexport default Table;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport NavButtons from \"./navButtons\"\nimport \"./layout.module.css\"\n\nimport DialogContext from '../../contextAPI/dialog-context'\nimport {Dialog} from 'primereact/dialog';\nimport WordDataTable from '../WordDataTable/WordDataTable'\n\nconst Layout = ({ children, nextURL, prevURL }) => {\n\n  // This controls the popup for the word information\n  const [ dialog, updateDialog ] = useState({open: false, content: {}})\n  const newDialog = (obj) => {\n    updateDialog(obj)\n  }\n  \n  return (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <DialogContext.Provider value={{dialog: dialog, newDialog: newDialog}}>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            marginTop: '50px'\n          }}\n        >\n          <main>{children}</main>\n          {(dialog.open === true) ? (\n                <Dialog header={`WORD INFO : ${dialog.content.StrongNumber}`} visible={dialog.open} style={{width: '75vw', height: '70vw'}} contentStyle={{height: '200px', overflowY: 'auto'}}baseZIndex={300} modal={true} onHide={() => updateDialog({open: false, content: {}})}>\n                    <WordDataTable rowData={Object.entries(dialog.content)} />\n                </Dialog> \n            ) : null}\n        </div>\n        <NavButtons next={nextURL} prev={prevURL}/>\n        </DialogContext.Provider>\n      </>\n    )}\n  />\n)}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}