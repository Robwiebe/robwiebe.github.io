{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_contextAPI_AppContext__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_images_SVLogo_jpeg__WEBPACK_IMPORTED_MODULE_3__","_images_SVLogo_jpeg__WEBPACK_IMPORTED_MODULE_3___default","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_7__","useStyles","makeStyles","theme","typography","padding","spacing","fontSize","color","icons","display","height","width","margin","flexDirection","flexWrap","marginBottom","SVLogo","position","flex","slogan","fontStyle","textAlign","selectLanguage","justifyContent","languageButton","IndexPage","classes","receivedAppContext","useContext","AppContext","language","version","book","segment","updateLanguage","updateVersion","updateBook","updateSegmentID","navigate","a","createElement","title","className","src","alt","variant","size","onClick","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"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","file":"component---src-pages-index-js-d122ea12e56fd6ac414d.js","sourcesContent":["import React, { useContext } from \"react\"\nimport AppContext from '../contextAPI/AppContext'\nimport { navigate } from \"gatsby\"\nimport SVLogo from '../images/SVLogo.jpeg'\nimport SEO from \"../components/seo\"\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n  \nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  icons: {\n    display: 'flex',\n    height: 'fit-content',\n    width: '100%',\n    margin: '0 auto',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    marginBottom: '20px',\n  },\n  SVLogo: {\n    position: 'relative',\n    width: '200px',\n    height: '200px',\n    flex: '1',\n    margin: '0 auto'\n  },\n  slogan: {\n    fontStyle: 'italic',\n    textAlign: 'center'\n  },\n  selectLanguage: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    width: '100%',\n    flexWrap: 'wrap'\n  },\n  languageButton: {\n    margin: '2px',\n    width: 'fit-content'\n  }\n}))\n\nconst IndexPage = () => {\n  const classes = useStyles()\n  const receivedAppContext = useContext(AppContext)\n  const selectLanguage = (language, version, book, segment) => {\n    receivedAppContext.updateLanguage(language)\n    receivedAppContext.updateVersion(version)\n    receivedAppContext.updateBook(book)\n    receivedAppContext.updateSegmentID(segment);\n    navigate(`/reader`)\n  }\n\nreturn (\n  <div>\n    <SEO title=\"Home\" />\n    <div className={classes.icons}>\n      <img src={SVLogo} className={classes.SVLogo} alt=\"SourceView Bible Logo\" />\n      <Typography variant=\"h5\" className={classes.slogan} >A Fresh Perspective on the Ancient Scriptures</Typography>\n    </div>\n    {/* <Divider /> */}\n    <div className={classes.icons}>\n      {/* <img src={OLLogo} className={classes.SVLogo} alt=\"SV Languages Logo\"/> */}\n      <div className={classes.selectLanguage}>\n        <Button size=\"small\" color=\"secondary\" variant=\"contained\" className={classes.languageButton} onClick={() => selectLanguage('ENG', 'NLT', 'Mat','S266')} >English</Button>\n        <Button size=\"small\" color=\"secondary\" variant=\"contained\" className={classes.languageButton} onClick={() => selectLanguage('HBR', 'WLC', 'Rut','I008')} >OT Hebrew</Button>\n        <Button size=\"small\" color=\"secondary\" variant=\"contained\" className={classes.languageButton} onClick={() => selectLanguage('GRK', 'GNA', 'Luk','I042')} >NT Greek</Button>\n      </div>\n    </div>\n    {/* <p onClick={() => {\n      receivedAppContext.updateLanguage(\"GRK\")\n      receivedAppContext.updateVersion(\"GNA\")\n      navigate(\"/GRK/GNA/I042\")}}\n    >GREEK</p>\n    <p onClick={() => {\n      receivedAppContext.updateLanguage(\"HBR\")\n      receivedAppContext.updateVersion(\"WLC\")\n      navigate(\"/HBR/WLC/I032\")}}\n    >HEBREW</p>\n    <p onClick={() => {\n      receivedAppContext.updateLanguage(\"ENG\")\n      receivedAppContext.updateVersion(\"NLT\")\n      navigate(\"/ENG/NLT/I040\")}}\n    >ENGLISH: NLT</p>\n    <p onClick={() => {\n      receivedAppContext.updateLanguage(\"ENG\")\n      receivedAppContext.updateVersion(\"WEB\")\n      navigate(\"/ENG/WEB/I042\")}}\n    >ENGLISH: WEB</p> */}\n  </div>\n)\n}\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}