{"version":3,"sources":["webpack:///./src/components/SourceViewInfo/SourceViewInfo.js","webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/WordDataTable/WordDataTable.js","webpack:///./src/components/VerbView/VerbView.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Leaf/SphereLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/IntroData/IntroData.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./src/images/Foundational.png","webpack:///./src/images/Celebration.png","webpack:///./src/images/Communications.png","webpack:///./src/images/Economics.png","webpack:///./src/images/Education.png","webpack:///./src/images/Family.png","webpack:///./src/images/Government.png","webpack:///./src/images/Religion.png","webpack:///./src/images/SVB-Read-together.png","webpack:///./src/images/SVB-Discuss-together.png"],"names":["SourceViewInfo","props","SVBData","content","color","recipList","unique_recipients","map","recip","react_default","a","createElement","className","styles","SVBInfoTable","row","leftCell","style","fontSize","middleCell","rightCell","cellTitle","source","length","recipient","time_period","narrator","sourceName","unique_sources","SourceName","_useState","useState","open","sourceDialog","updateSourceDialog","newSourceDialog","obj","onClick","data","Dialog","maxWidth","onClose","DialogTitle","DialogContent","dividers","components_SourceViewInfo_SourceViewInfo","useStyles","makeStyles","theme","typography","padding","spacing","paper","background","width","Leaf","receivedAppContext","useContext","AppContext","anchorEl","setAnchorEl","classes","chapter","marks","find","mark","type","undefined","verse","footnote","bibleRef","classNames","leaf","join","handleClick","event","currentTarget","handleClickAway","Boolean","id","book","display","displayRef","text","onMouseOver","onMouseLeave","Popper","transition","placement","_ref","TransitionProps","ClickAwayListener","onClickAway","Fade","Object","assign","timeout","Paper","Typography","Table","displayedData","language","IT","lexeme","transSBL","GoodrickKohlenbergerNumbers","LouwNidaNumbers","ETCBCgloss","HebrewLexeme","SBLstyleTransliteration","Heb_ref","book_id","chapter_id","verse_id","KJV_ref","morphologyDetail","dialogTable","VerbView","bookData","labels","datasets","label","backgroundColor","HBarHeight","verbView","title","es","hoverBackgroundColor","options","legend","position","height","maintainAspectRatio","closeButton","right","top","palette","grey","dialog","definition","fontWeight","InterlinearLeaf","updateDialog","newDialog","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","dictionary","version","require","Fragment","key","word_ID","whitespace","interlinearinterlinear","interlinearStrongs","StrongNumber","interlinearTranslation","extendedStrongNumber","strongs_def","WordDataTable","components_VerbView_VerbView","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","highlightColors","CEL","COM","ECO","EDU","FAM","GOV","REL","logo","marginRight","flex","whiteSpace","verticalAlign","dialogRef","textAlign","marginBottom","dialogHeader","justifyContent","SphereLeaf","_useState2","keyPassage","sphere","keyPassageNum","doubleHighlight","parseInt","push","styledClasses","c","indexOf","highlight","KeyPassages","spheres","boxShadow","SPH","src","Foundational","Celebration","Communication","Economics","Education","Family","Government","Religion","getSphereLogo","mainSphere","questions","Q1","Q2","Q3","Q4","Inlines","prose","leaves","interlinear","Leaf_InterlinearLeaf","showSpheres","Leaf_SphereLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","speechbubblehebrew","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","Subtitle","main","flexWrap","maxHeight","card","margin","leftCard","top5","cardTitle","textDecoration","top5List","cardContent","lineHeight","border","red","green","blue","topSources","topWords","colorComparison","segmentBarChart","percentageOfVerses","segments","keys","OTNTData","totals","verses","original","quotes","allusions","forEach","segment","total","console","log","chartOptions","responsive","layout","left","bottom","boxWidth","bibleBookOrder","bibleBookList","BookBarChartOptions","scales","xAxes","stacked","yAxes","getNumOfVerses","ref","verseRef","split","numOfVerses","startingVerse","createBookBarDataObj","LukData","barData","Array","from","quoteRef","bookRef","allusionRef","books","sort","b","borderColor","borderWidth","hoverBorderColor","SegmentBarChartOptions","SegmentData","segmentIDs","Card","CardHeader","testament","disableTypography","CardContent","chart","pieData","seg","SegmentRefs","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","segmentID","IntroData","NarratorText","createColorData","pop","values","Math","round","colors","sourcesArray","val","words","top5Sources","count","name","getTopSources","sources","repeatedWords","segmentDataContainer","header","paddingTop","reference","discuss","borderTop","footer","& p","images","readImage","borderBottom","imgCaption","__webpack_exports__","_ref$pageContext","pageContext","QuestionsRefs","QRef1","questionRef","updateQuestionRef","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","currentYear","Date","getFullYear","SegmentTitles","components_SegmentData_SegmentData","ReadTogether","alt","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","DiscussTogether","QuestionsData","Button","variant","QRef2","QRef3","components_Introduction_Introduction","document","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-templates-chapter-page-js-c331a5be3c2560f13394.js","sourcesContent":["import React from 'react'\nimport styles from './SourceViewInfo.module.css'\n\nconst SourceViewInfo = (props) => {\n    const SVBData = props.content\n    const color = () => {\n        switch (SVBData.color) {\n            case 'blue':\n                return 'darkblue'\n            case 'green':\n                return '#006400'\n            case 'red':\n                return '#d60000'\n            case 'black':\n                return 'black'\n            default:\n                return 'black'\n        } \n    }\n\n    if (SVBData.color !== 'black') {\n        let recipList = ``\n        SVBData.unique_recipients.map(recip => {\n            recipList = (recipList !== '') ? recipList + `, ${recip}` : recipList + `${recip}`\n        })\n        return (\n            <div>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><i className={`pi pi-user`} style={{'fontSize': '3em'}}></i></td>\n                            <td className={styles.middleCell}><i className={`pi pi-arrow-circle-right`} style={{'fontSize': '3em', 'color': color()}}></i></td>\n                            <td className={styles.rightCell}><i className={`pi pi-users`} style={{'fontSize': '3em'}}></i></td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><span className={styles.cellTitle}>SOURCE(S)</span><br />{SVBData.source}</td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}><span className={styles.cellTitle}>RECIPIENT(S)</span><br />{(SVBData.unique_recipients.length === 1) ? SVBData.recipient : recipList}</td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    } else {\n        return (<div className={styles.narrator}>\n                <i className={`pi pi-user`} style={{'fontSize': '3em'}}></i>\n                <p className={styles.cellTitle}>SOURCE</p>\n                <p className={styles.sourceName}>{`${SVBData.source} (${SVBData.unique_sources[0]})`}</p>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SourceViewInfo;","import React, { useContext, useState } from 'react'\nimport styles from './SourceName.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport SourceViewInfo from '../SourceViewInfo/SourceViewInfo'\n\nconst SourceName = (props) => {\n    // const receivedAppContext = useContext(AppContext)\n    \n    // This controls the popup for the source information\n    const [ sourceDialog, updateSourceDialog ] = useState({open: false, content: {}})\n    const newSourceDialog = (obj) => {\n        updateSourceDialog(obj)\n    }\n    return (\n    <p className={styles.sourceName}\n    onClick={() => newSourceDialog({open: !sourceDialog.open, content: props.data})}\n    >\n        {props.sourceName}\n        {(sourceDialog.open === true) ? (\n            <Dialog \n                maxWidth='lg'\n                open={sourceDialog.open}\n                onClose={() => newSourceDialog({open: false, content: {}})}>\n                    <DialogTitle>SourceView Info</DialogTitle>\n                    <DialogContent dividers>\n                    <SourceViewInfo content={sourceDialog.content}/>  \n                    </DialogContent>\n            </Dialog> \n        ) : null}\n    </p>\n)}\n\nexport default SourceName;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => {\n        const receivedAppContext = useContext(AppContext)\n        const displayedData = (receivedAppContext.language === 'GRK') ? [\n                ['Gloss', props.content.IT],\n                ['Lemma', props.content.lexeme],\n                ['SBL Transliteration', props.content.transSBL],\n                ['GK #', props.content.GoodrickKohlenbergerNumbers],\n                ['LouwNida #', props.content.LouwNidaNumbers]\n         ] : [\n                ['Gloss', props.content.ETCBCgloss],\n                ['Lemma', props.content.HebrewLexeme],\n                ['SBL Transliteration', props.content.SBLstyleTransliteration],\n                ['Hebrew Reference', `${props.content.Heb_ref.book_id} ${props.content.Heb_ref.chapter_id}:${props.content.Heb_ref.verse_id}`],\n                ['KJV Reference', `${props.content.KJV_ref.book_id} ${props.content.KJV_ref.chapter_id}:${props.content.KJV_ref.verse_id}`],\n                ['Morph Details', props.content.morphologyDetail]\n         ]\n        return (\n        <table className={styles.dialogTable}><tbody>\n                {displayedData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n                </tbody>\n        </table>\n        )\n}\n\nexport default Table;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './VerbView.module.css'\n// import {Chart} from 'primereact/chart';\nimport { Doughnut } from 'react-chartjs-2';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst VerbView = () => {\n    const receivedAppContext = useContext(AppContext)\n\n    // -------DOUGHNUT CHART------- //\n    const occurrenceData = {\n        labels: ['God (6)','Others (22)'],\n        datasets: [\n        {\n            data: [6, 22],\n            backgroundColor: [\n                \"#FF6384\",\n                \"#36A2EB\"\n            ],\n            hoverBackgroundColor: [\n                \"#FF6384\",\n                \"#36A2EB\"\n            ]\n        }]    \n    };\n    const options = {\n        title: {\n            display: true,\n            text: 'OT Verb H311 מנא – mana’',\n            fontSize: 16\n        },\n        legend: {\n            position: 'top'\n        }\n    }\n    \n    // -------BAR CHART------- //\n    const bookData = {\n        labels: ['Gen', 'Num', '2Sa', '1Ki', '2Ki', '1Ch', '2Ch', 'Job', 'Psa', 'Ecc', 'Isa', 'Jer', 'Dan', 'Jon'],\n        datasets: [\n            {\n                label: 'God',\n                backgroundColor: '#42A5F5',\n                data: [0,0,0,0,0,0,0,0,2,0,2,0,0,4]\n            },\n            {\n                label: 'Others',\n                backgroundColor: '#9CCC65',\n                data: [2,1,1,3,1,4,1,1,1,1,0,1,6,0]\n            }\n        ]    \n    };\n\n    const HBarHeight = bookData.labels.length * 3\n\n    const bookDataOptions = {\n        title: {\n            display: true,\n            text: 'Occurrences in books',\n            fontSize: 16\n        },\n        legend: {\n            position: 'bottom'\n        },\n        maintainAspectRatio: false\n    }\n    return (\n    <div className={styles.verbView}>\n        <hr />\n        <p className={styles.title}>VerbView</p>\n        <Doughnut \n            data={occurrenceData} \n            options={options} \n        />\n        <hr />\n        <HorizontalBar \n            data={bookData}  \n            width={50}\n            height={HBarHeight}\n            options={bookDataOptions}\n        />\n    </div>\n    )\n}\n\nexport default VerbView;","import React, { useContext, useState } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport WordDataTable from '../WordDataTable/WordDataTable'\nimport VerbView from '../VerbView/VerbView'\nimport theme from '../../theme'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n    dialog: {\n      width: '75vw',\n      height: '75vh'\n    },\n    definition: {\n      fontWeight: 'bold'\n    }\n  });\n\nconst InterlinearLeaf = (props) => {\n    const classes = useStyles();\n    const receivedAppContext = useContext(AppContext);\n    \n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        updateDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    const dictionary = (receivedAppContext.version === 'GNA') ? require('../../data/strongsGreekDictionary.json') : (receivedAppContext.version === 'WLC') ? require('../../data/strongsHebrewDictionary.json') : null\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(!word_metadata.data.StrongNumber) ? '-' : word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n                {(dialog.open === true) ? (\n                    <Dialog \n                    maxWidth='lg'\n                        open={dialog.open} \n                        onClose={() => newDialog({open: false, content: {}})}>\n                        <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? dialog.content.StrongNumber : dialog.content.extendedStrongNumber}`}</DialogTitle>\n                        <DialogContent dividers>\n                            <p className={classes.definition}>{`DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                            <WordDataTable />\n                            {(dialog.content.StrongNumber === 'H4487') ? (<VerbView />) : null}\n                        </DialogContent>\n                    </Dialog> \n                ) : null}\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                    style={(word_metadata.data.StrongNumber === 'H4487') ? {backgroundColor: 'yellow'} : null}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber : word_metadata.data.extendedStrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                    {(dialog.open === true) ? (\n                        <Dialog \n                        maxWidth='lg'\n                            open={dialog.open} \n                            onClose={() => newDialog({open: false, content: {}})}>\n                            <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? dialog.content.StrongNumber : dialog.content.extendedStrongNumber}`}</DialogTitle>\n                            <DialogContent dividers>\n                                <p className={classes.definition}>{`DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                                <WordDataTable content={dialog.content}/>\n                                {(dialog.content.StrongNumber === 'H4487') ? (<VerbView />) : null}\n                            </DialogContent>\n                        </Dialog> \n                    ) : null}\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext, useState } from 'react'\nimport KeyPassages from './../../data/KeyPassages.json'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Foundational from './../../images/Foundational.png'\nimport Celebration from './../../images/Celebration.png'\nimport Communication from './../../images/Communications.png'\nimport Economics from './../../images/Economics.png'\nimport Education from './../../images/Education.png'\nimport Family from './../../images/Family.png'\nimport Government from './../../images/Government.png'\nimport Religion from './../../images/Religion.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst highlightColors = {\n    CEL: '#f9d7fb',\n    COM: '#eed7fb',\n    ECO: '#fbe9d7',\n    EDU: '#d7fbf8',\n    FAM: '#fbcaca',\n    GOV: '#fafbca',\n    REL: '#d8fbca',\n}\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    },\n    logo: {\n        height: '30px',\n        width: '30px',\n        marginRight: '20px',\n        flex: '0 0 30px'\n    },\n    leaf: {\n        whiteSpace: 'pre-wrap',\n        height: '25px',\n    },\n    chapter: {\n        fontWeight: 'bold'\n    },\n    verse: {\n        verticalAlign: 'top',\n        position: 'relative',\n        top: '-0.3em',\n        fontSize: '60%',\n        backgroundColor: 'transparent'\n    },\n    dialogRef: {\n        color: 'grey',\n        fontSize: '80%',\n        textAlign: \"center\",\n        marginBottom: '-15px'\n    },\n    dialogHeader: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginBottom: '-10px'\n    }\n  }));\n\nconst SphereLeaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        updateDialog(obj)\n    }\n\n    // Create CSS styles from marks\n    const keyPassage = (props.marks) ? props.marks.find(mark => mark.type === 'keyPassage') : undefined\n    const sphere = (keyPassage) ? keyPassage.data.id.substring(0.3) : null\n    const keyPassageNum = (keyPassage) ? keyPassage.data.id.substring(4,6) : null\n    const doubleHighlight = parseInt(keyPassageNum) > 46\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    let classNames = []\n    if (verse !== undefined) {\n        classNames.push(classes.verse)\n    }\n    if (chapter !== undefined) {\n        classNames.push(classes.chapter)\n    }\n\n    let styledClasses = ''\n\n    classNames.map(c => {\n        if (classNames.indexOf(c) === 0) {\n            styledClasses = `${c}`\n        } else {\n            styledClasses = styledClasses + `, ${c}`\n        }\n    })\n\n    let highlight = ''\n    if (keyPassage && doubleHighlight) {\n        highlight = `repeating-linear-gradient(${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]}, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]} 49.9%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 50.1%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 100%)`\n    } else if (keyPassage && !doubleHighlight) {\n        highlight = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else {\n        highlight = ''\n    }\n\n    let backgroundColor = '' \n    if (keyPassage && !doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else if (keyPassage && doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]\n    } else {\n        backgroundColor = ''\n    }\n\n    function getSphereLogo(SPH) {\n        const sphere = SPH.substring(0,3)\n        switch (sphere) {\n            case 'FOU':\n                return <img src={Foundational} className={classes.logo} />\n            case 'CEL':\n                return <img src={Celebration} className={classes.logo} />\n            case 'COM':\n                return <img src={Communication} className={classes.logo} />\n            case 'ECO':\n                return <img src={Economics} className={classes.logo} />\n            case 'EDU':\n                return <img src={Education} className={classes.logo} />\n            case 'FAM':\n                return <img src={Family} className={classes.logo} />\n            case 'GOV':\n                return <img src={Government} className={classes.logo} />\n            case 'REL':\n                return <img src={Religion} className={classes.logo} />\n        }\n    }\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return (\n            <span style={{\n                background: highlight,\n                boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n                whiteSpace: 'pre-wrap',\n                height: '25px',\n            }}\n            onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n            >\n            <span \n                id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`}\n                className={styledClasses} \n                style={{\n                    display: (receivedAppContext.displayRef) ? '' : 'none',\n                    background: highlight,\n                    boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : ''\n                }}\n                >\n                    {props.text}{(chapter)?'':'\\u00A0'}\n                </span></span>)\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span style={{\n            background: highlight,\n            boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n            whiteSpace: 'pre-wrap',\n            height: '25px',\n        }}\n        onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n        >\n            {footnote ? (\n                <span className={styledClasses} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                        {({ TransitionProps }) => (\n                            <ClickAwayListener onClickAway={handleClickAway}>\n                                <Fade {...TransitionProps} timeout={350}>\n                                    <Paper className={classes.paper}>\n                                    <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                    </Paper>\n                                </Fade>\n                            </ClickAwayListener>\n                        )}\n                    </Popper>\n                </span>\n            ) : <span className={styledClasses}>{props.text}</span>}\n            {(dialog.open === true) ? (\n                <Dialog \n                maxWidth='lg'\n                    open={dialog.open} \n                    onClose={() => newDialog({open: false, content: {}})}>\n                    <DialogTitle>\n                        <div className={classes.dialogHeader}>\n                            {getSphereLogo(sphere)}\n                            <p className={classes.dialogRef}>{dialog.content.mainSphere} #{keyPassage.data.id.substring(4,6)}</p>\n                        </div>\n                        {dialog.content.title}\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <p>Let's Think About This:</p>\n                        <ul>\n                            <li>{dialog.content.questions.Q1}</li>\n                            <li>{dialog.content.questions.Q2}</li>\n                            <li>{dialog.content.questions.Q3}</li>\n                            <li>{dialog.content.questions.Q4}</li>\n                        </ul>\n                    </DialogContent>\n                </Dialog> \n            ) : null}\n        </span>\n        )\n     }\n     \n    }\n\nexport default SphereLeaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport SphereLeaf from '../Leaf/SphereLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showSpheres) {\n                        return <SphereLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showSpheres) {\n                        return <SphereLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut, Bar, HorizontalBar } from 'react-chartjs-2'\nimport OTNTData from '../../../data/OTNTData.json'\nimport SegmentRefs from '../../../data/SegmentTitles.json'\nimport LukData from '../../../data/Luk(OTNT).json'\nimport bibleBookList from '../../../data/BookChapterList.json'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { relative } from 'path';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '500px',\n    height: 'fit-content',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: '5px',\n    fontSize: '11px',\n    lineHeight: '13px',\n    position: 'relative',\n    width: '100%'\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n    maxHeight: '150px'\n  },\n  segmentBarChart: {\n    flex: '1 1 300px',\n    height: 'fit-content'\n  }\n})\n\n// ---------------------- //\n// PIE CHART DATA\n// ---------------------- //\n\nconst percentageOfVerses = () => {\n  const segments = Object.keys(OTNTData)\n  let totals = {\n    verses: 0,\n    original: 0,\n    quotes: 0,\n    allusions: 0\n  }\n  segments.forEach(segment => {\n    totals.verses += OTNTData[segment].verses;\n    totals.quotes += OTNTData[segment].quotes;\n    totals.allusions += OTNTData[segment].allusions;\n    totals.original += (OTNTData[segment].total - OTNTData[segment].verses);\n  })\n  console.log(' PERCENTAGE TOTALS:',totals);\n  return totals\n}\n\nconst createPieChartData = (obj) => {\n  return {\n    labels: [\"Quotes\",\"Allusions\",\"Original\"],\n    datasets: [{\n      data: [percentageOfVerses().quotes, percentageOfVerses().allusions, percentageOfVerses().original],\n      backgroundColor: [\n        'rgb(209, 0, 209)',\n        'rgb(255, 238, 4)',\n        'lightgrey',\n        ],\n      hoverBackgroundColor: [\n        'purple',\n        'rgb(184, 171, 0)',\n        'grey'\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\n// ---------------------- //\n// BOOK BAR CHART DATA\n// ---------------------- //\n\n\nconst bibleBookOrder = Object.keys(bibleBookList)\n\nconst BookBarChartOptions = {\n  scales: {\n    xAxes: [{ stacked: true }],\n    yAxes: [{ stacked: true }],\n  },\n  maintainAspectRatio: true,\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 20\n    },\n    display: false\n  },\n};\n\nconst getNumOfVerses = (ref) => {\n  const verseRef = ref.split(':')[1]\n  let numOfVerses = 1\n  if (verseRef.search('-') !== -1) {\n    // console.log(verseRef)\n    const startingVerse = parseInt(verseRef.split('-')[0])\n    const endingVerse = parseInt(verseRef.split('-')[1])\n    numOfVerses = endingVerse - startingVerse + 1;\n  }\n  console.log('number of verses: ', numOfVerses)\n  return numOfVerses\n}\n\nconst createBookBarDataObj = () => {\n\n  // Compile Bar Data from JSON\n\n  const verses = Object.keys(LukData);\n  let barData = {}\n  verses.forEach(ref => {\n    // console.log(ref,\": ___________________\")\n    const quotes = (LukData[ref].quotes !== undefined) ? Array.from(LukData[ref].quotes) : null\n    const allusions = (LukData[ref].allusions) ? LukData[ref].allusions : null\n    if (quotes) {\n      quotes.forEach(quoteRef => {\n        // console.log('QuoteRef: ', quoteRef)\n        const numOfVerses = getNumOfVerses(quoteRef)\n        console.log(typeof numOfVerses)\n        const bookRef = quoteRef.substring(0,3)\n        if (!barData[bookRef]) {\n          barData[bookRef] = {}\n          barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n          console.log('TEST',barData[bookRef].quotes)\n        } else {\n          barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n          console.log('TEST',barData[bookRef].quotes)\n        }\n      })\n    }\n    if (allusions) {\n      allusions.forEach(allusionRef => {\n        // console.log('AllusionRef: ', allusionRef)\n        const numOfVerses = getNumOfVerses(allusionRef)\n        const bookRef = allusionRef.substring(0,3)\n        if (!barData[bookRef]) {\n          barData[bookRef] = {\n            allusions: numOfVerses\n          }\n        } else {\n          barData[bookRef].allusions += numOfVerses\n        }\n      })\n    }\n  })\n  console.log(barData)\n\n  // distribute Bar Data from JSON\n  let books = Object.keys(barData);\n  books.sort(function(a, b) {\n    return bibleBookOrder.indexOf(a) - bibleBookOrder.indexOf(b);\n  });\n\n  const bookData = {\n    labels: [],\n    quotes: [],\n    allusions: []\n  }\n  books.forEach(book => {\n    bookData.labels.push(book)\n    bookData.quotes.push((barData[book].quotes) ? barData[book].quotes : 0)\n    bookData.allusions.push((barData[book].allusions) ? barData[book].allusions : 0)\n\n  })\n\n  return {\n    labels: bookData.labels,\n    datasets: [\n      {\n        label: 'Quotes',\n        data: bookData.quotes,\n        backgroundColor: 'rgb(209, 0, 209)',\n        borderColor: 'purple',\n        borderWidth: 1,\n        hoverBackgroundColor: 'purple',\n        hoverBorderColor: 'purple',\n      },\n      {\n        label: 'Allusions',\n        data: bookData.allusions,\n        backgroundColor: 'rgb(255, 238, 4)',\n        borderColor: 'rgb(184, 171, 0)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgb(184, 171, 0)',\n        hoverBorderColor: 'rgb(184, 171, 0)',\n      }\n    ],\n  };\n}\n\n// ---------------------- //\n// SEGMENT BAR CHART DATA\n// ---------------------- //\n\nconst SegmentBarChartOptions = {\n  scales: {\n    xAxes: [{ stacked: true }],\n    yAxes: [{ stacked: true }],\n  },\n  maintainAspectRatio: true,\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 20\n    },\n    display: false\n  },\n};\n\nconst createSegmentBarDataObj = () => {\n  const segmentIDs = Object.keys(OTNTData);\n  let barData = {\n    quotes: [],\n    allusions: [],\n    original: [],\n    labels: []\n  }\n  segmentIDs.forEach(seg => {\n    barData.quotes.push((OTNTData[seg].quotes) ? OTNTData[seg].quotes : 0)\n    barData.allusions.push((OTNTData[seg].allusions) ? OTNTData[seg].allusions : 0)\n    barData.original.push(OTNTData[seg].total - OTNTData[seg].verses)\n    barData.labels.push(SegmentRefs[seg].ref)\n  })\n\n  return {\n    labels: barData.labels,\n    datasets: [\n      {\n        label: 'Quotes',\n        data: barData.quotes,\n        backgroundColor: 'rgb(209, 0, 209)',\n        borderColor: 'purple',\n        borderWidth: 1,\n        hoverBackgroundColor: 'purple',\n        hoverBorderColor: 'purple',\n      },\n      {\n        label: 'Allusions',\n        data: barData.allusions,\n        backgroundColor: 'rgb(255, 238, 4)',\n        borderColor: 'rgb(184, 171, 0)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgb(184, 171, 0)',\n        hoverBorderColor: 'rgb(184, 171, 0)',\n      },\n      {\n        label: 'Original',\n        data: barData.original,\n        backgroundColor: 'lightgrey',\n        borderColor: 'grey',\n        borderWidth: 1,\n        hoverBackgroundColor: 'grey',\n        hoverBorderColor: 'grey',\n      }\n    ],\n  };\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title={(props.testament === 'NT') ? 'Quotes and Allusions from OT' : 'Quotes and Allusions used in NT'} disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut \n              data={createPieChartData(props.pieData)} \n              options={chartOptions} \n              height={null}\n              width={null}\n            />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card} ${classes.segmentBarChart}`}>\n          <CardHeader title=\"Original, Quotes and Allusions (verses)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n            <HorizontalBar\n              data={createSegmentBarDataObj()}\n              width={40}\n              height={35}\n              options={SegmentBarChartOptions}\n            />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.segmentBarChart}`}>\n          <CardHeader title=\"Books with Quotes and Allusions\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n            <HorizontalBar\n              data={createBookBarDataObj()}\n              width={40}\n              height={60}\n              options={BookBarChartOptions}\n            />\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\nimport IntroData from './IntroData/IntroData'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            <div>\n                {props.content.map(block => {\n                    switch (block.type) {\n                        case 'speech':\n                            return <Paragraph content={block.nodes} />\n                        case 'subtitle':\n                            return <Subtitle content={block.nodes} />\n                        case 'bulleted-list':\n                            return <BulletedList content={block.nodes} />\n                        case 'table':\n                            return <p style={{color: 'red'}}>TABLE WILL BE HERE!</p>\n                            // <Table content={block.nodes} />\n                        default:\n                            return null\n                    }\n                })}\n            </div>\n            {(props.segmentID === 'I042') && <div><IntroData/></div>}\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Main Character(s)', 'Everyone Else'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title=\"Color Comparison\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut \n              data={createColorData(props.colors)} \n              options={chartOptions} \n              height={null}\n              width={null}\n              />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Top Sources (words)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]} ${classes.topWords}`} >{source.name} ({source.words})</p>)}\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Top Repeated Words\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useEffect, useContext, useState } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport ReadTogether from '../images/SVB-Read-together.png'\nimport DiscussTogether from '../images/SVB-Discuss-together.png'\nimport SegmentTitles from '../data/SegmentTitles.json'\nimport QuestionsRefs from '../data/QuestionsRefs.json'\nimport QuestionsData from '../data/QuestionsData(Eng).json'\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  paper: {\n      background: '#3A4C7D',\n      width: '75vw'\n  },\n  segmentDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingTop: '5px'\n  },\n  title: {\n    fontSize: '150%',\n    fontWeight: ' bold',\n    textDecoration: 'underline',\n    width: '100%',\n    margin: 0,\n    textAlign: 'center'\n  },\n  reference: {\n    margin: 0,\n    fontSize: '60%',\n    color: 'grey'\n  },\n  discuss: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n    borderTop: '0.25px lightgrey solid',\n  },\n  footer: {\n    textAlign: 'center',\n    fontSize: '60%',\n    margin: '10px 0 30px 0',\n    '& p': {\n      margin: 0\n    }\n  },\n  images: {\n    width: '200px',\n    margin: '10px auto',\n  },\n  readImage: {\n    marginBottom: '20px',\n    borderBottom: '0.25px lightgrey solid',\n  },\n  content: {\n    margin: '0 0 10px 0',\n    padding: '0 0 10px 0'\n  },\n  questions: {\n    textAlign: 'left',\n    margin: '30px 0',\n    '& p': {\n      margin: '10px 0',\n    }\n  },\n  imgCaption: {\n    color: 'grey',\n    fontSize: '70%',\n    margin: '-20px 0 0 0',\n    textAlign: 'center'\n  }\n}))\n\n\nexport default ({pageContext: {segment, book, segmentID}}) => {\n  const classes = useStyles();\n  // figure out solution for introductions without QRefs \n  const [ questionRef, updateQuestionRef ] = useState((segmentID[0] === 'S') ? QuestionsRefs[segmentID].QRef1 : '')\n  const receivedAppContext = useContext(AppContext);\n  const NTBooks = [\"Tit\", \"Rev\", \"Jam\", \"3Jn\", \"Heb\", \"2Co\", \"Luk\", \"Mat\", \"2Ti\", \"2Th\", \"1Pe\", \"Gal\", \"2Pe\", \"Joh\", \"Php\", \"1Ti\", \"Phm\", \"Mar\", \"Eph\", \"Act\", \"1Co\", \"Col\", \"Jud\", \"Rom\", \"1Jn\", \"2Jn\", \"1Th\"]\n  const isNT = (NTBooks.indexOf(book) !== -1) ? true : false\n  \n  function changeQuestions () {\n    if (questionRef === QuestionsRefs[segmentID].QRef1) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef2)\n    } else if (questionRef === QuestionsRefs[segmentID].QRef2) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef3)\n    } else if (questionRef === QuestionsRefs[segmentID].QRef3) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef1)\n    }\n  }\n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <p className={classes.title}>{SegmentTitles[segmentID].title}</p>\n        {(segmentID[0] === 'S') ? <p className={classes.reference}>{(SegmentTitles[segmentID].book.length > 1) ?\n           `${SegmentTitles[segmentID].book[0]} ${SegmentTitles[segmentID].ref.split('-')[0]} - ${SegmentTitles[segmentID].book[1]} ${SegmentTitles[segmentID].ref.split('-')[1]}`\n          : `${SegmentTitles[segmentID].book[0]} ${SegmentTitles[segmentID].ref}`}</p> : null}\n      </div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(segmentID[0] === 'S') ? (\n        <div>\n          <div className={classes.segmentDataContainer}>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          <div className={`${classes.images} ${classes.readImage}`}>\n            <img src={ReadTogether} alt=\"Read Together\" />\n            <p className={classes.imgCaption}>Each person reads a color aloud</p>\n          </div>\n          <div className={classes.content}>\n            {segment.content.map(block => {\n              if (block.data.color === 'black') {\n                return (<Narrator \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              } else {\n                return (<SpeechBubble \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              }\n            })}\n          </div>\n          <div className={classes.discuss}>\n            <div className={classes.images}>\n              <img src={DiscussTogether} alt=\"Discuss Together\" />\n              <p className={classes.imgCaption}>Discuss the questions with others</p>\n            </div>\n            <p className={classes.title}>{QuestionsData[questionRef].title}</p>\n            <div className={classes.questions}>\n              <p>{QuestionsData[questionRef].Q1}</p>\n              <p>{QuestionsData[questionRef].Q2}</p>\n              <p>{QuestionsData[questionRef].Q3}</p>\n              <p>{QuestionsData[questionRef].Q4}</p>\n            </div>\n            <Button color='secondary' variant=\"contained\" onClick={() => changeQuestions()}>Change Questions</Button>\n          </div>\n          <div className={classes.footer}>\n            <p>Copyright info of version</p>\n            <p>© {currentYear} SourceView LLC.</p>\n          </div>\n        </div>\n    ) : (\n        <Introduction \n          content={segment.content.document.nodes} \n          segmentID={segmentID}\n        />\n      )}\n    </div>\n  )}","module.exports = __webpack_public_path__ + \"static/Foundational-b52df7354ececc9f918dc19b5085f0ac.png\";","module.exports = __webpack_public_path__ + \"static/Celebration-2c9ec1357f30421505bee054e0e82eeb.png\";","module.exports = __webpack_public_path__ + \"static/Communications-0bf260c2a8a26669d65be3987c7869c9.png\";","module.exports = __webpack_public_path__ + \"static/Economics-19650faf9e095f37bb714b06ed1142a3.png\";","module.exports = __webpack_public_path__ + \"static/Education-f8fc9f170534746838fd44f56d07182f.png\";","module.exports = __webpack_public_path__ + \"static/Family-1e9e99a1b1f8bea9c877685d76763247.png\";","module.exports = __webpack_public_path__ + \"static/Government-d2f7040273a32db2b509da594f423b6f.png\";","module.exports = __webpack_public_path__ + \"static/Religion-ec14c054570f8236824435380d78b2be.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Read-together-c3869d4d71bf839bdd9a7b8be1078625.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Discuss-together-ea87a32e2fe039e84980badd5ee97a5a.png\";"],"sourceRoot":""}