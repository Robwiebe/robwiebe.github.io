{"version":3,"sources":["webpack:///./src/components/SourceViewInfo/SourceViewInfo.js","webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/WordDataTable/WordDataTable.js","webpack:///./src/components/VerbView/VerbView.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./src/images/SVB-Read-together.png","webpack:///./src/images/SVB-Discuss-together.png"],"names":["SourceViewInfo","props","SVBData","content","color","recipList","unique_recipients","map","recip","react_default","a","createElement","className","styles","SVBInfoTable","row","leftCell","style","fontSize","middleCell","rightCell","cellTitle","source","length","recipient","time_period","narrator","sourceName","unique_sources","SourceName","_useState","useState","open","sourceDialog","updateSourceDialog","newSourceDialog","obj","onClick","data","Dialog","maxWidth","onClose","DialogTitle","DialogContent","dividers","components_SourceViewInfo_SourceViewInfo","useStyles","makeStyles","theme","typography","padding","spacing","paper","background","width","Leaf","receivedAppContext","useContext","AppContext","anchorEl","setAnchorEl","classes","chapter","marks","find","mark","type","undefined","verse","footnote","bibleRef","classNames","leaf","join","handleClick","event","currentTarget","handleClickAway","Boolean","id","book","display","displayRef","text","onMouseOver","onMouseLeave","Popper","transition","placement","_ref","TransitionProps","ClickAwayListener","onClickAway","Fade","Object","assign","timeout","Paper","Typography","Table","displayedData","language","IT","lexeme","transSBL","GoodrickKohlenbergerNumbers","LouwNidaNumbers","ETCBCgloss","HebrewLexeme","SBLstyleTransliteration","Heb_ref","book_id","chapter_id","verse_id","KJV_ref","morphologyDetail","dialogTable","VerbView","bookData","labels","datasets","label","backgroundColor","HBarHeight","verbView","title","es","hoverBackgroundColor","options","legend","position","height","maintainAspectRatio","closeButton","right","top","palette","grey","dialog","definition","fontWeight","InterlinearLeaf","updateDialog","newDialog","console","log","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","dictionary","version","require","Fragment","key","word_ID","whitespace","interlinearinterlinear","interlinearStrongs","StrongNumber","interlinearTranslation","extendedStrongNumber","strongs_def","WordDataTable","components_VerbView_VerbView","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","Inlines","prose","leaves","interlinear","Leaf_InterlinearLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","speechbubblehebrew","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","push","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","Subtitle","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","NarratorText","main","justifyContent","flexWrap","textAlign","marginBottom","maxHeight","card","margin","leftCard","marginRight","top5","flex","cardTitle","textDecoration","top5List","cardContent","lineHeight","red","green","blue","topSources","topWords","colorComparison","createColorData","keys","pop","values","Math","round","total","chartOptions","responsive","layout","left","bottom","boxWidth","SegmentData","Card","CardHeader","disableTypography","CardContent","chart","colors","sourcesArray","val","words","sort","b","top5Sources","count","forEach","name","getTopSources","sources","repeatedWords","segmentDataContainer","header","paddingTop","reference","discuss","borderTop","footer","& p","images","readImage","borderBottom","questions","imgCaption","__webpack_exports__","segment","pageContext","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","currentYear","Date","getFullYear","components_SegmentData_SegmentData","src","ReadTogether","alt","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","DiscussTogether","components_Introduction_Introduction","document","module","exports","__webpack_require__","p"],"mappings":"8MAmEeA,EAhEQ,SAACC,GACpB,IAAMC,EAAUD,EAAME,QAgBtB,GAAsB,UAAlBD,EAAQE,MAAmB,CAC3B,IAAIC,EAAS,GAIb,OAHAH,EAAQI,kBAAkBC,IAAI,SAAAC,GAC1BH,EAA2B,KAAdA,EAAoBA,EAAS,KAAQG,EAAUH,EAAS,GAAMG,IAG3EC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAOC,cACrBL,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,KAClBN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,UAAUP,EAAAC,EAAAC,cAAA,KAAGC,UAAS,aAAgBK,MAAO,CAACC,SAAY,UAChFT,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOM,YAAYV,EAAAC,EAAAC,cAAA,KAAGC,UAAS,2BAA8BK,MAAO,CAACC,SAAY,MAAOd,MA1BjH,WACV,OAAQF,EAAQE,OACZ,IAAK,OACD,MAAO,WACX,IAAK,QACD,MAAO,UACX,IAAK,MACD,MAAO,UACX,IAAK,QAEL,QACI,MAAO,SAeqHA,OAChHK,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOO,WAAWX,EAAAC,EAAAC,cAAA,KAAGC,UAAS,cAAiBK,MAAO,CAACC,SAAY,WAEtFT,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,KAClBN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,UAAUP,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOQ,WAAxB,aAAmDZ,EAAAC,EAAAC,cAAA,WAAOT,EAAQoB,QAClGb,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOM,aACtBV,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOO,WAAWX,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOQ,WAAxB,gBAAsDZ,EAAAC,EAAAC,cAAA,WAA6C,IAArCT,EAAQI,kBAAkBiB,OAAgBrB,EAAQsB,UAAYnB,IAEjKI,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,KAClBN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,UAAtB,4BACAP,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOM,aACtBV,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOO,WAAYlB,EAAQuB,YAAY,QAO1E,OAAQhB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOa,UACvBjB,EAAAC,EAAAC,cAAA,KAAGC,UAAS,aAAgBK,MAAO,CAACC,SAAY,SAChDT,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOQ,WAArB,UACAZ,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOc,YAAgBzB,EAAQoB,OAA7C,KAAwDpB,EAAQ0B,eAAe,GAA/E,KACAnB,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAOC,cACrBL,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,KAClBN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,UAAtB,4BACAP,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOM,aACtBV,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOO,WAAYlB,EAAQuB,YAAY,SCvBnEI,EA3BI,SAAC5B,GAAU,IAAA6B,EAImBC,mBAAS,CAACC,MAAM,EAAO7B,QAAS,KAArE8B,EAJkBH,EAAA,GAIJI,EAJIJ,EAAA,GAKpBK,EAAkB,SAACC,GACrBF,EAAmBE,IAEvB,OACA3B,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOc,WACrBU,QAAS,kBAAMF,EAAgB,CAACH,MAAOC,EAAaD,KAAM7B,QAASF,EAAMqC,SAEpErC,EAAM0B,YACiB,IAAtBM,EAAaD,KACXvB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACIC,SAAS,KACTR,KAAMC,EAAaD,KACnBS,QAAS,kBAAMN,EAAgB,CAACH,MAAM,EAAO7B,QAAS,OAClDM,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,wBACAjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAeC,UAAQ,GACvBnC,EAAAC,EAAAC,cAACkC,EAAD,CAAgB1C,QAAS8B,EAAa9B,YAG9C,kICpBN2C,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,WAAY,CACVC,QAASF,EAAMG,QAAQ,GACvBjC,SAAU,QACVd,MAAO,SAETgD,MAAO,CACHC,WAAY,UACZC,MAAO,cACPd,SAAU,WAuDHe,EAnDF,SAACtD,GAEV,IAAMuD,EAAqBC,qBAAWC,KAFlB5B,EAGYC,mBAAS,MAAlC4B,EAHa7B,EAAA,GAGH8B,EAHG9B,EAAA,GAId+B,EAAUf,IAGVgB,EAAW7D,EAAM8D,MAAS9D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,YAAdA,EAAKC,YAAsBC,EAC9EC,EAASnE,EAAM8D,MAAS9D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,UAAdA,EAAKC,YAAoBC,EAC1EE,EAAYpE,EAAM8D,MAAS9D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,aAAdA,EAAKC,YAAuBC,EAChFG,EAAYF,GAASN,EAAW7D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,cAAdA,EAAKC,YAAwBC,EACtFI,OAAwBJ,IAAVC,QAAmCD,IAAZL,EAAyB,MAAcK,IAAZL,EAAuBjD,IAAOiD,QAAQ,KAAOM,EAAOvD,IAAOuD,MAAM,KAAMvD,IAAO2D,MAAMC,KAAK,KAAO5D,IAAO2D,KAE7K,SAASE,EAAYC,GACjBf,EAAYD,EAAW,KAAOgB,EAAMC,eAGxC,SAASC,IACLjB,EAAY,MAGhB,IAAM5B,EAAO8C,QAAQnB,GAErB,OAAIS,GAASN,EACFrD,EAAAC,EAAAC,cAAA,QAAMoE,GAAOT,EAAShC,KAAK0C,KAAnB,IAA2BV,EAAShC,KAAKwB,QAAzC,IAAoDQ,EAAShC,KAAK8B,MAASxD,UAA2B,OAAf2D,EAAuBA,EAAa,GAAItD,MAAO,CAACgE,QAAUzB,EAAmB0B,WAAc,GAAK,SAAUjF,EAAMkF,KAAOrB,EAAS,GAAG,KAIjOrD,EAAAC,EAAAC,cAAA,YACH0D,EACG5D,EAAAC,EAAAC,cAAA,QAAMC,UAA2B,OAAf2D,EAAuBA,EAAa,GAAIlC,QAASqC,EAAaU,YAAaV,EAAaW,aAAcX,GACnHzE,EAAMkF,KACP1E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAQP,GAAG,WAAW/C,KAAMA,EAAM2B,SAAUA,EAAU4B,YAAU,EAACC,UAAU,OAClE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAH,OACGjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAmBC,YAAaf,GAC5BpE,EAAAC,EAAAC,cAACkF,EAAA,EAADC,OAAAC,OAAA,GAAUL,EAAV,CAA2BM,QAAS,MAChCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOrF,UAAWiD,EAAQT,OAC1B3C,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAYtF,UAAWiD,EAAQZ,YAAaoB,EAAS/B,KAAK+B,gBAOlF5D,EAAAC,EAAAC,cAAA,QAAMC,UAA2B,OAAf2D,EAAuBA,EAAa,IAAKtE,EAAMkF,qDCxClEgB,EAxBD,SAAClG,GACP,IACMmG,EAAiD,QAD5B3C,qBAAWC,KACI2C,SAAsB,CACxD,CAAC,QAASpG,EAAME,QAAQmG,IACxB,CAAC,QAASrG,EAAME,QAAQoG,QACxB,CAAC,sBAAuBtG,EAAME,QAAQqG,UACtC,CAAC,OAAQvG,EAAME,QAAQsG,6BACvB,CAAC,aAAcxG,EAAME,QAAQuG,kBAChC,CACG,CAAC,QAASzG,EAAME,QAAQwG,YACxB,CAAC,QAAS1G,EAAME,QAAQyG,cACxB,CAAC,sBAAuB3G,EAAME,QAAQ0G,yBACtC,CAAC,mBAAuB5G,EAAME,QAAQ2G,QAAQC,QAA9C,IAAyD9G,EAAME,QAAQ2G,QAAQE,WAA/E,IAA6F/G,EAAME,QAAQ2G,QAAQG,UACnH,CAAC,gBAAoBhH,EAAME,QAAQ+G,QAAQH,QAA3C,IAAsD9G,EAAME,QAAQ+G,QAAQF,WAA5E,IAA0F/G,EAAME,QAAQ+G,QAAQD,UAChH,CAAC,gBAAiBhH,EAAME,QAAQgH,mBAExC,OACA1G,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAOuG,aAAa3G,EAAAC,EAAAC,cAAA,aAC7ByF,EAAc7F,IAAI,SAAAQ,GAAG,OAAKN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,KAAKN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,UAAWD,EAAI,IAAQN,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOO,WAA+B,iBAAXL,EAAI,GAAoBA,EAAI,GAAGgG,QAAvC,IAAkDhG,EAAI,GAAGiG,WAAzD,IAAuEjG,EAAI,GAAGkG,SAAWlG,EAAI,qCCgEnOsG,EA/EE,WACc5D,qBAAWC,KAAtC,IA8BM4D,EAAW,CACbC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpGC,SAAU,CACN,CACIC,MAAO,MACPC,gBAAiB,UACjBpF,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAErC,CACImF,MAAO,SACPC,gBAAiB,UACjBpF,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAKvCqF,EAAsC,EAAzBL,EAASC,OAAOhG,OAanC,OACAd,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO+G,UACnBnH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOgH,OAArB,YACApH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACIxF,KA7De,CACnBiF,OAAQ,CAAC,UAAU,eACnBC,SAAU,CACV,CACIlF,KAAM,CAAC,EAAG,IACVoF,gBAAiB,CACb,UACA,WAEJK,qBAAsB,CAClB,UACA,cAmDJC,QA/CQ,CACZH,MAAO,CACH5C,SAAS,EACTE,KAAM,2BACNjE,SAAU,IAEd+G,OAAQ,CACJC,SAAU,UA0CdzH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACIxF,KAAMgF,EACNhE,MAAO,GACP6E,OAAQR,EACRK,QAxBgB,CACpBH,MAAO,CACH5C,SAAS,EACTE,KAAM,uBACNjE,SAAU,IAEd+G,OAAQ,CACJC,SAAU,UAEdE,qBAAqB,gBCtDvBtF,EAAYC,YAAW,CACzBsF,YAAa,CACXH,SAAU,WACVI,MAAOtF,IAAMG,QAAQ,GACrBoF,IAAKvF,IAAMG,QAAQ,GACnB/C,MAAO4C,IAAMwF,QAAQC,KAAK,MAE5BC,OAAQ,CACNpF,MAAO,OACP6E,OAAQ,QAEVQ,WAAY,CACVC,WAAY,UAkHHC,EA9GS,SAAC5I,GACrB,IAAM4D,EAAUf,IACVU,EAAqBC,qBAAWC,KAFP5B,EAKEC,mBAAS,CAACC,MAAM,EAAO7B,QAAS,KAAzDuI,EALuB5G,EAAA,GAKfgH,EALehH,EAAA,GAMzBiH,EAAY,SAAC3G,GACf4G,QAAQC,IAAI,8BAA+BP,GAC3CI,EAAa1G,IAIX0B,EAAW7D,EAAM8D,MAAS9D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,YAAdA,EAAKC,YAAsBC,EAC9EC,EAASnE,EAAM8D,MAAS9D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,UAAdA,EAAKC,YAAoBC,EAC1EG,EAAYF,GAASN,EAAW7D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,cAAdA,EAAKC,YAAwBC,EAGtFI,OAAwBJ,IAAVC,QAAmCD,IAAZL,EACvC,CACKA,EAAWjD,IAAOiD,QAAU,KAC5BM,EAASvD,IAAOuD,MAAQ,MAE5BK,KAAK,KAAO5D,IAAOqI,gBAGxB,GAAI9E,GAASN,EACT,OAAOrD,EAAAC,EAAAC,cAAA,QAAMoE,GAAOT,EAAShC,KAAK0C,KAAnB,IAA2BV,EAAShC,KAAKwB,QAAzC,IAAoDQ,EAAShC,KAAK8B,MAASxD,UAA2B,OAAf2D,EAAuBA,EAAa,GAAKtD,MAAO,CAACgE,QAAUzB,EAAmB0B,WAAc,GAAK,SAAUjF,EAAMkF,KAAOrB,EAAS,GAAG,KAI9O,IAAMqF,EAAiBlJ,EAAM8D,MAAS9D,EAAM8D,MAAMC,KAAK,SAAAC,GAAI,MAAkB,kBAAdA,EAAKC,YAA4BC,EAGhG,IAAKgF,EACD,OAAO1I,EAAAC,EAAAC,cAAA,QAAMC,UAA2B,OAAf2D,EAAuBA,EAAa,IAAKtE,EAAMkF,MAI5E,IAAIiE,EAAUnJ,EAAMkF,KAAKkE,OAAO,MAE1BC,GAAsB,IAAbF,EAAiBnJ,EAAMkF,KAAKoE,UAAU,EAAEH,GAAU,KAC3DI,GAAsB,IAAbJ,EAAiBnJ,EAAMkF,KAAKoE,UAAUH,GAAW,KAE1DK,EAA6C,QAA/BjG,EAAmBkG,QAAqBC,EAAQ,KAA4E,QAA/BnG,EAAmBkG,QAAqBC,EAAQ,KAA6C,KAE9M,OAAIP,GAAW,EAEP3I,EAAAC,EAAAC,cAACF,EAAAC,EAAMkJ,SAAP,KACInJ,EAAAC,EAAAC,cAAA,QACIkJ,IAAKV,EAAc7G,KAAKwH,QACxBlJ,UAAWC,IAAOkJ,WAClB1H,QAAS,kBAAM0G,EAAU,CAAC/G,MAAO0G,EAAO1G,KAAM7B,QAAS2F,OAAOC,OAAOoD,EAAc7G,KAAM,CAAC6C,KAAMlF,EAAMkF,WAEtG1E,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAAU,OAAQlJ,UAAWC,IAAOmJ,wBAAyBV,GAC3F7I,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAAU,SAAUlJ,UAAWC,IAAOoJ,oBAAuBd,EAAc7G,KAAK4H,aAAsBf,EAAc7G,KAAK4H,aAAzB,KAC9HzJ,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAAU,QAASlJ,UAAWC,IAAOsJ,wBAA0D,QAAhC3G,EAAmB6C,SAAsB8C,EAAc7G,KAAKgE,GAAK6C,EAAc7G,KAAKqE,cAEnK,IAAhB+B,EAAO1G,KACLvB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACAC,SAAS,KACLR,KAAM0G,EAAO1G,KACbS,QAAS,kBAAMsG,EAAU,CAAC/G,MAAM,EAAO7B,QAAS,OAChDM,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAiBgG,EAAOvI,QAAQgF,KAAhC,OAA2E,KAAhCuD,EAAOvI,QAAQ+J,aAAuBxB,EAAOvI,QAAQ+J,aAAexB,EAAOvI,QAAQiK,uBAC9H3J,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAeC,UAAQ,GACnBnC,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQ8E,YAAtB,eAAkDlI,EAAAC,EAAAC,cAAA,UAAM8I,EAAWf,EAAOvI,QAAQ+J,cAAiBT,EAAWf,EAAOvI,QAAQ+J,cAAcG,YAAc,QACzJ5J,EAAAC,EAAAC,cAAC2J,EAAD,MACkC,UAAhC5B,EAAOvI,QAAQ+J,aAA6BzJ,EAAAC,EAAAC,cAAC4J,EAAD,MAAgB,OAGtE,KACGf,EACH/I,EAAAC,EAAAC,cAACF,EAAAC,EAAMkJ,SAAP,KACInJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO2J,YACvB/J,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAASlJ,UAAWC,IAAOkJ,YACrDtJ,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAAU,OAAQlJ,UAAWC,IAAOmJ,wBAAyBR,KAJxF/I,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO2J,aAatC/J,EAAAC,EAAAC,cAAA,QACIkJ,IAAKV,EAAc7G,KAAKwH,QACxBlJ,UAA4C,QAAhC4C,EAAmB6C,SAAsBxF,IAAO4J,qBAAuB5J,IAAO6J,sBAC1FrI,QAAS,kBAAM0G,EAAU,CAAC/G,MAAO0G,EAAO1G,KAAM7B,QAAS2F,OAAOC,OAAOoD,EAAc7G,KAAM,CAAC6C,KAAMlF,EAAMkF,UACtGlE,MAA4C,UAApCkI,EAAc7G,KAAK4H,aAA4B,CAACxC,gBAAiB,UAAY,MAErFjH,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAAU,OAAQlJ,UAAWC,IAAOmJ,wBAAyB/J,EAAMkF,MACjG1E,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAAU,SAAUlJ,UAAWC,IAAOoJ,oBAA0D,KAApCd,EAAc7G,KAAK4H,aAAuBf,EAAc7G,KAAK4H,aAAef,EAAc7G,KAAK8H,sBACzL3J,EAAAC,EAAAC,cAAA,QAAMkJ,IAAKV,EAAc7G,KAAKwH,QAAU,QAASlJ,UAAWC,IAAOsJ,wBAA0D,QAAhC3G,EAAmB6C,SAAsB8C,EAAc7G,KAAKgE,GAAK6C,EAAc7G,KAAKqE,aAC/J,IAAhB+B,EAAO1G,KACLvB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACAC,SAAS,KACLR,KAAM0G,EAAO1G,KACbS,QAAS,kBAAMsG,EAAU,CAAC/G,MAAM,EAAO7B,QAAS,OAChDM,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KAAiBgG,EAAOvI,QAAQgF,KAAhC,OAA2E,KAAhCuD,EAAOvI,QAAQ+J,aAAuBxB,EAAOvI,QAAQ+J,aAAexB,EAAOvI,QAAQiK,uBAC9H3J,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAeC,UAAQ,GACnBnC,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQ8E,YAAtB,eAAkDlI,EAAAC,EAAAC,cAAA,UAAM8I,EAAWf,EAAOvI,QAAQ+J,cAAiBT,EAAWf,EAAOvI,QAAQ+J,cAAcG,YAAc,QACzJ5J,EAAAC,EAAAC,cAAC2J,EAAD,CAAenK,QAASuI,EAAOvI,UACG,UAAhCuI,EAAOvI,QAAQ+J,aAA6BzJ,EAAAC,EAAAC,cAAC4J,EAAD,MAAgB,OAGtE,OCtFTI,EAvCC,SAAC1K,GACb,IAAMuD,EAAqBC,qBAAWC,KACtC,MAAmB,UAAfzD,EAAMiE,KAEFzD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO+J,OAClB3K,EAAM4K,OAAOtK,IAAI,SAAAiE,GACd,OAAIhB,EAAmBsH,YACZrK,EAAAC,EAAAC,cAACoK,EAAD,CACPhH,MAAOS,EAAKT,MACZoB,KAAMX,EAAKW,OAEJ1E,EAAAC,EAAAC,cAACqK,EAAD,CACPjH,MAAOS,EAAKT,MACZoB,KAAMX,EAAKW,UAKL,WAAflF,EAAMiE,KAETzD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOoK,QAClBhL,EAAM4K,OAAOtK,IAAI,SAAAiE,GACd,OAAIhB,EAAmBsH,YACZrK,EAAAC,EAAAC,cAACoK,EAAD,CACPhH,MAAOS,EAAKT,MACZoB,KAAMX,EAAKW,OAEJ1E,EAAAC,EAAAC,cAACqK,EAAD,CACPjH,MAAOS,EAAKT,MACZoB,KAAMX,EAAKW,UAMpB,MCKA+F,EAxCM,SAACjL,GAGlB,MAAoC,QAFTwD,qBAAWC,KAEf2C,SAEf5F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOsK,QACnB1K,EAAAC,EAAAC,cAACyK,EAAD,CACIzJ,WAAY1B,EAAMoL,WAAW/J,OAC7BgB,KAAMrC,EAAMoL,aAEhB5K,EAAAC,EAAAC,cAAA,OAAKC,UAAW,CAACC,IAAOyK,mBAAoBzK,IAAOZ,EAAMoL,WAAWjL,QAAQqE,KAAK,MAChFxE,EAAMsL,QAAQhL,IAAI,SAAAiL,GACf,OAAO/K,EAAAC,EAAAC,cAAC8K,EAAD,CACPvH,KAAMsH,EAAOtH,KACb2G,OAAQW,EAAOE,YAOvBjL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyK,EAAD,CACIzJ,WAAY1B,EAAMoL,WAAW/J,OAC7BgB,KAAMrC,EAAMoL,aAEhB5K,EAAAC,EAAAC,cAAA,OAAKC,UAAW,CAACC,IAAO8K,aAAc9K,IAAOZ,EAAMoL,WAAWjL,QAAQqE,KAAK,MAC1ExE,EAAMsL,QAAQhL,IAAI,SAAAiL,GACf,OAAO/K,EAAAC,EAAAC,cAAC8K,EAAD,CACPvH,KAAMsH,EAAOtH,KACb2G,OAAQW,EAAOE,wCCXpBE,EAtBG,SAAC3L,GACf,OACIQ,EAAAC,EAAAC,cAAA,SACKV,EAAME,QAAQ,GAAG0K,OAAOtK,IAAI,SAAAiE,GACzB,IAAID,EAAa,GAYb,OAXAC,EAAKT,QACDS,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,SAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,QAEhBrH,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,WAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,UAEhBrH,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,cAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,cAGbpL,EAAAC,EAAAC,cAAA,QAAMC,UAAY2D,EAAWhD,OAAS,EAAKgD,EAAWhE,IAAI,SAAA0D,GAAI,OAAIpD,IAAOoD,KAAOQ,KAAK,KAAO,IAAKD,EAAKW,4BChB3H2G,EAAW,SAAC7L,GACd,OAAQQ,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOkL,UACxB9L,EAAME,QAAQ,GAAG0K,OAAOtK,IAAI,SAAAiE,GACzB,IAAID,EAAa,GAYjB,OAXIC,EAAKT,QACDS,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,SAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,QAEhBrH,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,WAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,UAEhBrH,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,cAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,cAGjBpL,EAAAC,EAAAC,cAAA,QAAMC,UAAY2D,EAAWhD,OAAS,EAAKgD,EAAWhE,IAAI,SAAA0D,GAAI,OAAIpD,IAAOoD,KAAOQ,KAAK,KAAO,IAAKD,EAAKW,UAe1G6G,EAVM,SAAC/L,GAClB,OACIQ,EAAAC,EAAAC,cAAA,MAAIM,MAAO,CAACgL,UAAW,SAClBhM,EAAME,QAAQI,IAAI,SAAA2L,GACf,OAAOzL,EAAAC,EAAAC,cAACwL,EAAD,CAAUhM,QAAS+L,EAAKR,uCCFhCU,GAtBE,SAACnM,GACd,OACIQ,EAAAC,EAAAC,cAAA,SACKV,EAAME,QAAQ,GAAG0K,OAAOtK,IAAI,SAAAiE,GACzB,IAAID,EAAa,CAAC,YAYd,OAXAC,EAAKT,QACDS,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,SAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,QAEhBrH,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,WAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,UAEhBrH,EAAKT,MAAMC,KAAK,SAAAC,GAAI,MAAkB,cAAdA,EAAKC,QAC7BK,EAAWsH,KAAK,cAGbpL,EAAAC,EAAAC,cAAA,QAAMC,UAAY2D,EAAWhD,OAAS,EAAKgD,EAAWhE,IAAI,SAAA0D,GAAI,OAAIpD,IAAOoD,KAAOQ,KAAK,KAAO,IAAKD,EAAKW,UCUlHkH,GAtBM,SAACpM,GAClB,OACIQ,EAAAC,EAAAC,cAAA,WACKV,EAAME,QAAQI,IAAI,SAAA+L,GACf,OAAQA,EAAMpI,MACV,IAAK,SACD,OAAOzD,EAAAC,EAAAC,cAAC4L,EAAD,CAAWpM,QAASmM,EAAMZ,QACrC,IAAK,WACD,OAAOjL,EAAAC,EAAAC,cAAC6L,GAAD,CAAUrM,QAASmM,EAAMZ,QACpC,IAAK,gBACD,OAAOjL,EAAAC,EAAAC,cAAC8L,EAAD,CAActM,QAASmM,EAAMZ,QACxC,IAAK,QACD,OAAOjL,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAACb,MAAO,QAAlB,uBAEX,QACI,OAAO,+BCoBhBsM,GApCM,SAACzM,GAGlB,MAAoC,QAFTwD,qBAAWC,KAEf2C,SAEf5F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOsK,QACnB1K,EAAAC,EAAAC,cAACyK,EAAD,CACIzJ,WAAY1B,EAAMoL,WAAW/J,OAC7BgB,KAAMrC,EAAMoL,aAEhB5K,EAAAC,EAAAC,cAAA,WACCV,EAAMsL,QAAQhL,IAAI,SAAAiL,GACf,OAAO/K,EAAAC,EAAAC,cAAC8K,EAAD,CACPvH,KAAMsH,EAAOtH,KACb2G,OAAQW,EAAOE,YAMvBjL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyK,EAAD,CACIzJ,WAAY1B,EAAMoL,WAAW/J,OAC7BgB,KAAMrC,EAAMoL,aAEhB5K,EAAAC,EAAAC,cAAA,WACCV,EAAMsL,QAAQhL,IAAI,SAAAiL,GACf,OAAO/K,EAAAC,EAAAC,cAAC8K,EAAD,CACPvH,KAAMsH,EAAOtH,KACb2G,OAAQW,EAAOE,0FC3B7B5I,GAAYC,YAAW,CAC3B4J,KAAM,CACJ1H,QAAS,OACT2H,eAAgB,SAChBC,SAAU,OACVC,UAAW,SACXC,aAAc,MACdC,UAAW,eAEbC,KAAM,CACJD,UAAW,QACXE,OAAQ,OAEVC,SAAU,CACRC,YAAa,OAEfC,KAAM,CACJC,KAAM,EACNR,UAAW,SACX5L,SAAU,MACVgC,QAAS,GAEXqK,UAAW,CACTL,OAAQ,IACRM,eAAgB,YAChB5E,WAAY,OACZ1H,SAAU,MACVgC,QAAS,OAEXuK,SAAU,CACRvK,QAAS,MACTgK,OAAQ,GAEVQ,YAAa,CACXR,OAAQ,EACRhK,QAAS,EACThC,SAAU,OACVyM,WAAY,QAEdjG,gBAAiB,CACfA,gBAAiB,2BAEnBkG,IAAK,CACHxN,MAAO,WAETyN,MAAO,CACLzN,MAAO,WAET0N,KAAM,CACJ1N,MAAO,YAET2N,WAAY,CACVT,KAAM,WAERU,SAAU,CACRV,KAAM,WAERW,gBAAiB,CACfX,KAAM,eAsCJY,GAAkB,SAAC9L,GACR0D,OAAOqI,KAAK/L,GACpBgM,MACP,IAAMC,EAASvI,OAAOuI,OAAOjM,GAE7B,OADAiM,EAAOD,MACA,CACL7G,OAAQ,CAAC,WAAY,MAAO,oBAAqB,iBACjDC,SAAU,CAAC,CACTlF,KAAM,CACNgM,KAAKC,MAAOF,EAAO,GAAKjM,EAAIoM,MAAS,KACrCF,KAAKC,MAAOF,EAAO,GAAKjM,EAAIoM,MAAS,KACrCF,KAAKC,MAAOF,EAAO,GAAKjM,EAAIoM,MAAS,KACrCF,KAAKC,MAAOF,EAAO,GAAKjM,EAAIoM,MAAS,MAErC9G,gBAAiB,CACf,OACA,UACA,UACA,sBAEFK,qBAAsB,CACpB,QACA,UACA,UACA,gBAMF0G,GAAe,CACnBC,YAAY,EACZtG,qBAAqB,EACrBuG,OAAQ,CACNzL,QAAS,CACP0L,KAAM,GACNtG,MAAO,GACPC,IAAK,EACLsG,OAAQ,KAGZ5G,OAAQ,CACNC,SAAU,QACVX,OAAQ,CACNrG,SAAU,EACV4N,SAAU,MAmCDC,GA7BK,SAAC9O,GACjB,IAAM4D,EAAUf,KAChB,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQ8I,MACtBlM,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAMpO,UAAciD,EAAQ6D,gBAAb,IAAgC7D,EAAQoJ,KAAxC,IAAgDpJ,EAAQoK,iBACrExN,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CAAYpH,MAAM,mBAAmBqH,kBAAkB,OAAOtO,UAAWiD,EAAQ0J,YACjF9M,EAAAC,EAAAC,cAACwO,GAAA,EAAD,CAAavO,UAAciD,EAAQ6J,YAAb,IAA4B7J,EAAQuL,OACxD3O,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAUxF,KAAM4L,GAAgBjO,EAAMoP,QAASrH,QAASyG,OAG5DhO,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAMpO,UAAciD,EAAQwJ,KAAb,IAAqBxJ,EAAQsJ,SAA7B,IAAyCtJ,EAAQ6D,gBAAjD,IAAoE7D,EAAQoJ,KAA5E,KAAqFpJ,EAAQkK,YAC1GtN,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CAAYpH,MAAM,sBAAsBqH,kBAAkB,OAAOtO,UAAWiD,EAAQ0J,YACpF9M,EAAAC,EAAAC,cAACwO,GAAA,EAAD,CAAavO,UAAWiD,EAAQ6J,aAjGpB,SAACtL,GACnB,IACIkN,EADgBxJ,OAAOqI,KAAK/L,GACD7B,IAAI,SAAAoB,GAC/B,MAAO,CACHkI,IAAKlI,EACL4N,IAAKnN,EAAIT,GAAY6N,MACrBpP,MAAOgC,EAAIT,GAAYvB,SAI/BkP,EAAeA,EAAaG,KAAK,SAAU/O,EAAGgP,GAC1C,OAAIhP,EAAE6O,IAAMG,EAAEH,KACF,EACD7O,EAAE6O,IAAMG,EAAEH,IACV,EACA7O,EAAE6O,MAAQG,EAAEH,IACZ,OADJ,IAIX,IAAMI,EAAc,GAChBC,EAAQ,EAWZ,OAVAN,EAAaO,QAAQ,SAAAvO,GACE,iBAAfA,EAAOuI,KAA0B+F,EAAQ,IACzCD,EAAY9D,KAAK,CACfiE,KAAMxO,EAAOuI,IACb2F,MAAOlO,EAAOiO,IACdnP,MAAOkB,EAAOlB,QAEhBwP,GAAS,KAGVD,EAmEAI,CAAc9P,EAAM+P,SAASzP,IAAI,SAAAe,GAAM,OAAIb,EAAAC,EAAAC,cAAA,KAAGC,UAAciD,EAAQ4J,SAAb,IAAyB5J,EAAQvC,EAAOlB,OAAxC,IAAkDyD,EAAQmK,UAAc1M,EAAOwO,KAA3F,KAAmGxO,EAAOkO,MAA1G,SAG9C/O,EAAAC,EAAAC,cAACqO,GAAA,EAAD,CAAMpO,UAAciD,EAAQwJ,KAAb,IAAqBxJ,EAAQ6D,gBAA7B,IAAgD7D,EAAQoJ,KAAxD,IAAgEpJ,EAAQmK,UACnFvN,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CAAYpH,MAAM,qBAAqBqH,kBAAkB,OAAOtO,UAAWiD,EAAQ0J,YACnF9M,EAAAC,EAAAC,cAACwO,GAAA,EAAD,CAAavO,UAAWiD,EAAQ6J,aAChCjN,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQ4J,UAAWxN,EAAMgQ,cAAc,IACrDxP,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQ4J,UAAWxN,EAAMgQ,cAAc,IACrDxP,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQ4J,UAAWxN,EAAMgQ,cAAc,IACrDxP,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQ4J,UAAWxN,EAAMgQ,cAAc,IACrDxP,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQ4J,UAAWxN,EAAMgQ,cAAc,kDCtK3DnN,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,WAAY,CACVC,QAASF,EAAMG,QAAQ,GACvBjC,SAAU,QACVd,MAAO,SAETgD,MAAO,CACHC,WAAY,UACZC,MAAO,QAEX4M,qBAAsB,CACpBjL,QAAS,OACT2H,eAAgB,SAChBM,OAAQ,SACRhK,QAAS,UAEXiN,OAAQ,CACNlL,QAAS,OACT2H,eAAgB,SAChBC,SAAU,OACVuD,WAAY,OAEdvI,MAAO,CACL3G,SAAU,OACV0H,WAAY,QACZ4E,eAAgB,YAChBlK,MAAO,OACP4J,OAAQ,EACRJ,UAAW,UAEbuD,UAAW,CACTnD,OAAQ,EACRhM,SAAU,MACVd,MAAO,QAETkQ,QAAS,CACPrL,QAAS,QACT6H,UAAW,SACXI,OAAQ,SACRhK,QAAS,SACTqN,UAAW,0BAEbC,OAAQ,CACN1D,UAAW,SACX5L,SAAU,MACVgM,OAAQ,gBACRuD,MAAO,CACLvD,OAAQ,IAGZwD,OAAQ,CACNpN,MAAO,QACP4J,OAAQ,aAEVyD,UAAW,CACT5D,aAAc,OACd6D,aAAc,0BAEhBzQ,QAAS,CACP+M,OAAQ,aACRhK,QAAS,cAEX2N,UAAW,CACT/D,UAAW,OACXI,OAAQ,EACRuD,MAAO,CACLvD,OAAQ,WAGZ4D,WAAY,CACV1Q,MAAO,OACPc,SAAU,MACVgM,OAAQ,cACRJ,UAAW,aAKAiE,EAAA,iBAAAtL,GAA8B,IAAduL,EAAcvL,EAA5BwL,YAAcD,QACvBnN,EAAUf,KACVU,EAAqBC,qBAAWC,KAEtCwN,oBAAU,WACR,QAAsB/M,WAAXgN,QAE2B,KAAhC3N,EAAmB4N,SAAiB,CACtC,IAAMrM,EAAE,IAAOvB,EAAmB4N,SAClCC,IAAgBtM,EAAI,CAChBuM,QAAS,GACTC,KAAM,YACNC,SAAU,OAEdhO,EAAmBiO,eAAe,MAGrC,IAEH,IAAMC,GAAc,IAAIC,MAAOC,cAE/B,OACEnR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQsM,QACtB1P,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQgE,OAAtB,SACApH,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQwM,WAAtB,cAGAW,EAAQ7Q,QACRM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQqM,sBACtBzP,EAAAC,EAAAC,cAACkR,GAAD,CACExC,OAAQ2B,EAAQ3B,OAChBW,QAASgB,EAAQhB,QACjBC,cAAee,EAAQf,iBAG3BxP,EAAAC,EAAAC,cAAA,OAAKC,UAAciD,EAAQ6M,OAAb,IAAuB7M,EAAQ8M,WAC3ClQ,EAAAC,EAAAC,cAAA,OAAKmR,IAAKC,KAAcC,IAAI,kBAC5BvR,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQiN,YAAtB,oCAEFrQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQ1D,SACrB6Q,EAAQ7Q,QAAQI,IAAI,SAAA+L,GACnB,MAAyB,UAArBA,EAAMhK,KAAKlC,MACLK,EAAAC,EAAAC,cAACsR,GAAD,CACN5G,WAAYiB,EAAMhK,KAClBiJ,QAASe,EAAMZ,QAGTjL,EAAAC,EAAAC,cAACuR,EAAD,CACN7G,WAAYiB,EAAMhK,KAClBiJ,QAASe,EAAMZ,WAKvBjL,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQyM,SACtB7P,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQ6M,QACtBjQ,EAAAC,EAAAC,cAAA,OAAKmR,IAAKK,KAAiBH,IAAI,qBAC/BvR,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQiN,YAAtB,sCAEFrQ,EAAAC,EAAAC,cAAA,KAAGC,UAAWiD,EAAQgE,OAAtB,SACApH,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQgN,WACtBpQ,EAAAC,EAAAC,cAAA,wHACAF,EAAAC,EAAAC,cAAA,wHACAF,EAAAC,EAAAC,cAAA,wHACAF,EAAAC,EAAAC,cAAA,0HAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWiD,EAAQ2M,QACtB/P,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,cAAM+Q,EAAN,sBAIJjR,EAAAC,EAAAC,cAACyR,GAAD,CAAcjS,QAAS6Q,EAAQqB,SAAS3G,w6iqFCrKhD4G,EAAAC,QAAiBC,EAAAC,EAAuB,qFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"component---src-templates-chapter-page-js-71c5ec47abb35d4acf6a.js","sourcesContent":["import React from 'react'\nimport styles from './SourceViewInfo.module.css'\n\nconst SourceViewInfo = (props) => {\n    const SVBData = props.content\n    const color = () => {\n        switch (SVBData.color) {\n            case 'blue':\n                return 'darkblue'\n            case 'green':\n                return '#006400'\n            case 'red':\n                return '#d60000'\n            case 'black':\n                return 'black'\n            default:\n                return 'black'\n        } \n    }\n\n    if (SVBData.color !== 'black') {\n        let recipList = ``\n        SVBData.unique_recipients.map(recip => {\n            recipList = (recipList !== '') ? recipList + `, ${recip}` : recipList + `${recip}`\n        })\n        return (\n            <div>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><i className={`pi pi-user`} style={{'fontSize': '3em'}}></i></td>\n                            <td className={styles.middleCell}><i className={`pi pi-arrow-circle-right`} style={{'fontSize': '3em', 'color': color()}}></i></td>\n                            <td className={styles.rightCell}><i className={`pi pi-users`} style={{'fontSize': '3em'}}></i></td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><span className={styles.cellTitle}>SOURCE(S)</span><br />{SVBData.source}</td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}><span className={styles.cellTitle}>RECIPIENT(S)</span><br />{(SVBData.unique_recipients.length === 1) ? SVBData.recipient : recipList}</td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    } else {\n        return (<div className={styles.narrator}>\n                <i className={`pi pi-user`} style={{'fontSize': '3em'}}></i>\n                <p className={styles.cellTitle}>SOURCE</p>\n                <p className={styles.sourceName}>{`${SVBData.source} (${SVBData.unique_sources[0]})`}</p>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SourceViewInfo;","import React, { useContext, useState } from 'react'\nimport styles from './SourceName.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport SourceViewInfo from '../SourceViewInfo/SourceViewInfo'\n\nconst SourceName = (props) => {\n    // const receivedAppContext = useContext(AppContext)\n    \n    // This controls the popup for the source information\n    const [ sourceDialog, updateSourceDialog ] = useState({open: false, content: {}})\n    const newSourceDialog = (obj) => {\n        updateSourceDialog(obj)\n    }\n    return (\n    <p className={styles.sourceName}\n    onClick={() => newSourceDialog({open: !sourceDialog.open, content: props.data})}\n    >\n        {props.sourceName}\n        {(sourceDialog.open === true) ? (\n            <Dialog \n                maxWidth='lg'\n                open={sourceDialog.open}\n                onClose={() => newSourceDialog({open: false, content: {}})}>\n                    <DialogTitle>SourceView Info</DialogTitle>\n                    <DialogContent dividers>\n                    <SourceViewInfo content={sourceDialog.content}/>  \n                    </DialogContent>\n            </Dialog> \n        ) : null}\n    </p>\n)}\n\nexport default SourceName;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => {\n        const receivedAppContext = useContext(AppContext)\n        const displayedData = (receivedAppContext.language === 'GRK') ? [\n                ['Gloss', props.content.IT],\n                ['Lemma', props.content.lexeme],\n                ['SBL Transliteration', props.content.transSBL],\n                ['GK #', props.content.GoodrickKohlenbergerNumbers],\n                ['LouwNida #', props.content.LouwNidaNumbers]\n         ] : [\n                ['Gloss', props.content.ETCBCgloss],\n                ['Lemma', props.content.HebrewLexeme],\n                ['SBL Transliteration', props.content.SBLstyleTransliteration],\n                ['Hebrew Reference', `${props.content.Heb_ref.book_id} ${props.content.Heb_ref.chapter_id}:${props.content.Heb_ref.verse_id}`],\n                ['KJV Reference', `${props.content.KJV_ref.book_id} ${props.content.KJV_ref.chapter_id}:${props.content.KJV_ref.verse_id}`],\n                ['Morph Details', props.content.morphologyDetail]\n         ]\n        return (\n        <table className={styles.dialogTable}><tbody>\n                {displayedData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n                </tbody>\n        </table>\n        )\n}\n\nexport default Table;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './VerbView.module.css'\n// import {Chart} from 'primereact/chart';\nimport { Doughnut } from 'react-chartjs-2';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst VerbView = () => {\n    const receivedAppContext = useContext(AppContext)\n\n    // -------DOUGHNUT CHART------- //\n    const occurrenceData = {\n        labels: ['God (6)','Others (22)'],\n        datasets: [\n        {\n            data: [6, 22],\n            backgroundColor: [\n                \"#FF6384\",\n                \"#36A2EB\"\n            ],\n            hoverBackgroundColor: [\n                \"#FF6384\",\n                \"#36A2EB\"\n            ]\n        }]    \n    };\n    const options = {\n        title: {\n            display: true,\n            text: 'OT Verb H311 מנא – mana’',\n            fontSize: 16\n        },\n        legend: {\n            position: 'top'\n        }\n    }\n    \n    // -------BAR CHART------- //\n    const bookData = {\n        labels: ['Gen', 'Num', '2Sa', '1Ki', '2Ki', '1Ch', '2Ch', 'Job', 'Psa', 'Ecc', 'Isa', 'Jer', 'Dan', 'Jon'],\n        datasets: [\n            {\n                label: 'God',\n                backgroundColor: '#42A5F5',\n                data: [0,0,0,0,0,0,0,0,2,0,2,0,0,4]\n            },\n            {\n                label: 'Others',\n                backgroundColor: '#9CCC65',\n                data: [2,1,1,3,1,4,1,1,1,1,0,1,6,0]\n            }\n        ]    \n    };\n\n    const HBarHeight = bookData.labels.length * 3\n\n    const bookDataOptions = {\n        title: {\n            display: true,\n            text: 'Occurrences in books',\n            fontSize: 16\n        },\n        legend: {\n            position: 'bottom'\n        },\n        maintainAspectRatio: false\n    }\n    return (\n    <div className={styles.verbView}>\n        <hr />\n        <p className={styles.title}>VerbView</p>\n        <Doughnut \n            data={occurrenceData} \n            options={options} \n        />\n        <hr />\n        <HorizontalBar \n            data={bookData}  \n            width={50}\n            height={HBarHeight}\n            options={bookDataOptions}\n        />\n    </div>\n    )\n}\n\nexport default VerbView;","import React, { useContext, useState } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport WordDataTable from '../WordDataTable/WordDataTable'\nimport VerbView from '../VerbView/VerbView'\nimport theme from '../../theme'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n    dialog: {\n      width: '75vw',\n      height: '75vh'\n    },\n    definition: {\n      fontWeight: 'bold'\n    }\n  });\n\nconst InterlinearLeaf = (props) => {\n    const classes = useStyles();\n    const receivedAppContext = useContext(AppContext);\n    \n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        console.log('dialog opening or closing: ', dialog)\n        updateDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    const dictionary = (receivedAppContext.version === 'GNA') ? require('../../data/strongsGreekDictionary.json') : (receivedAppContext.version === 'WLC') ? require('../../data/strongsHebrewDictionary.json') : null\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(!word_metadata.data.StrongNumber) ? '-' : word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n                {(dialog.open === true) ? (\n                    <Dialog \n                    maxWidth='lg'\n                        open={dialog.open} \n                        onClose={() => newDialog({open: false, content: {}})}>\n                        <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? dialog.content.StrongNumber : dialog.content.extendedStrongNumber}`}</DialogTitle>\n                        <DialogContent dividers>\n                            <p className={classes.definition}>{`DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                            <WordDataTable />\n                            {(dialog.content.StrongNumber === 'H4487') ? (<VerbView />) : null}\n                        </DialogContent>\n                    </Dialog> \n                ) : null}\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                    style={(word_metadata.data.StrongNumber === 'H4487') ? {backgroundColor: 'yellow'} : null}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber : word_metadata.data.extendedStrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                    {(dialog.open === true) ? (\n                        <Dialog \n                        maxWidth='lg'\n                            open={dialog.open} \n                            onClose={() => newDialog({open: false, content: {}})}>\n                            <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? dialog.content.StrongNumber : dialog.content.extendedStrongNumber}`}</DialogTitle>\n                            <DialogContent dividers>\n                                <p className={classes.definition}>{`DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                                <WordDataTable content={dialog.content}/>\n                                {(dialog.content.StrongNumber === 'H4487') ? (<VerbView />) : null}\n                            </DialogContent>\n                        </Dialog> \n                    ) : null}\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            {props.content.map(block => {\n                switch (block.type) {\n                    case 'speech':\n                        return <Paragraph content={block.nodes} />\n                    case 'subtitle':\n                        return <Subtitle content={block.nodes} />\n                    case 'bulleted-list':\n                        return <BulletedList content={block.nodes} />\n                    case 'table':\n                        return <p style={{color: 'red'}}>TABLE WILL BE HERE!</p>\n                        // <Table content={block.nodes} />\n                    default:\n                        return null\n                }\n            })}\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'rgba(58, 76, 125, 0.07)'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Main Character(s)', 'Everyone Else'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title=\"Color Comparison\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut data={createColorData(props.colors)} options={chartOptions} />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Top Sources (words)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]} ${classes.topWords}`} >{source.name} ({source.words})</p>)}\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Top Repeated Words\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useEffect, useContext } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport ReadTogether from '../images/SVB-Read-together.png'\nimport DiscussTogether from '../images/SVB-Discuss-together.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  paper: {\n      background: '#3A4C7D',\n      width: '75vw'\n  },\n  segmentDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingTop: '5px'\n  },\n  title: {\n    fontSize: '150%',\n    fontWeight: ' bold',\n    textDecoration: 'underline',\n    width: '100%',\n    margin: 0,\n    textAlign: 'center'\n  },\n  reference: {\n    margin: 0,\n    fontSize: '60%',\n    color: 'grey'\n  },\n  discuss: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n    borderTop: '0.25px lightgrey solid',\n  },\n  footer: {\n    textAlign: 'center',\n    fontSize: '60%',\n    margin: '10px 0 30px 0',\n    '& p': {\n      margin: 0\n    }\n  },\n  images: {\n    width: '200px',\n    margin: '10px auto',\n  },\n  readImage: {\n    marginBottom: '20px',\n    borderBottom: '0.25px lightgrey solid',\n  },\n  content: {\n    margin: '0 0 10px 0',\n    padding: '0 0 10px 0'\n  },\n  questions: {\n    textAlign: 'left',\n    margin: 0,\n    '& p': {\n      margin: '10px 0',\n    }\n  },\n  imgCaption: {\n    color: 'grey',\n    fontSize: '70%',\n    margin: '-20px 0 0 0',\n    textAlign: 'center'\n  }\n}))\n\n\nexport default ({pageContext: {segment}}) => {\n  const classes = useStyles();\n  const receivedAppContext = useContext(AppContext);\n  \n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <p className={classes.title}>Title</p>\n        <p className={classes.reference}>Reference</p>\n      </div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(segment.content) ? (\n        <div>\n          <div className={classes.segmentDataContainer}>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          <div className={`${classes.images} ${classes.readImage}`}>\n            <img src={ReadTogether} alt=\"Read Together\" />\n            <p className={classes.imgCaption}>Each person reads a color aloud</p>\n          </div>\n          <div className={classes.content}>\n            {segment.content.map(block => {\n              if (block.data.color === 'black') {\n                return (<Narrator \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              } else {\n                return (<SpeechBubble \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              }\n            })}\n          </div>\n          <div className={classes.discuss}>\n            <div className={classes.images}>\n              <img src={DiscussTogether} alt=\"Discuss Together\" />\n              <p className={classes.imgCaption}>Discuss the questions with others</p>\n            </div>\n            <p className={classes.title}>Title</p>\n            <div className={classes.questions}>\n              <p>Question #1: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #2: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #3: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #4: this is a really, really, really, really, really, really, really, really, really long question</p>\n            </div>\n          </div>\n          <div className={classes.footer}>\n            <p>copyright info of version</p>\n            <p>© {currentYear} SourceView LLC.</p>\n          </div>\n        </div>\n    ) : (\n        <Introduction content={segment.document.nodes} />\n      )}\n    </div>\n  )}","module.exports = __webpack_public_path__ + \"static/SVB-Read-together-c3869d4d71bf839bdd9a7b8be1078625.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Discuss-together-ea87a32e2fe039e84980badd5ee97a5a.png\";"],"sourceRoot":""}