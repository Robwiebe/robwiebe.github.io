{"version":3,"sources":["webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es7.object.values.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_strict-method.js"],"names":["SourceName","props","receivedAppContext","useContext","AppContext","react_default","a","createElement","className","styles","sourceName","onClick","updateSourceDialog","open","sourceDialog","content","data","Leaf","chapter","marks","find","mark","type","undefined","verse","bibleRef","classNames","leaf","join","id","book","style","display","displayRef","text","InterlinearLeaf","updateDialog","obj","newDialog","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","Fragment","key","word_ID","whitespace","dialog","Object","assign","interlinearinterlinear","interlinearStrongs","StrongNumber","interlinearTranslation","language","IT","ETCBCgloss","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","backgroundColor","extendedStrongNumber","Inlines","prose","leaves","map","interlinear","Leaf_InterlinearLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","source","speechbubblehebrew","color","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","push","length","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","Subtitle","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","NarratorText","Card_Card","forwardRef","ref","classes","_props$raised","raised","other","objectWithoutProperties_default","Paper","extends_default","clsx_m","root","elevation","esm_Card_Card","withStyles","overflow","name","CardHeader_CardHeader","action","avatar","classNameProp","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","Typography","variant","esm_CardHeader_CardHeader","alignItems","padding","flex","marginRight","alignSelf","marginTop","CardContent_CardContent","esm_CardContent_CardContent","&:last-child","paddingBottom","useStyles","makeStyles","main","justifyContent","wrap","textAlign","marginBottom","maxHeight","chart","leftCard","top5","fontSize","top5Title","margin","textDecoration","fontWeight","top5List","cardContent","lineHeight","red","green","blue","createColorData","keys","pop","values","labels","datasets","Math","round","total","hoverBackgroundColor","chartOptions","responsive","maintainAspectRatio","layout","left","right","top","bottom","legend","position","boxWidth","SegmentData","console","log","colors","es","options","sourcesArray","val","words","sort","b","top5Sources","count","forEach","getTopSources","sources","repeatedWords","__webpack_exports__","_ref","segment","pageContext","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","components_SegmentData_SegmentData","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","components_Introduction_Introduction","document","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","$export","$values","S","it","getKeys","toIObject","isEnum","module","exports","isEntries","O","i","result","call","aFunction","toObject","fails","$sort","test","P","F","comparefn","method","arg"],"mappings":"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","file":"component---src-templates-chapter-page-js-5dddb1647a6ba967c17f.js","sourcesContent":["import React, { useContext } from 'react'\nimport styles from './SourceName.module.css'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SourceName = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    return (\n    <p className={styles.sourceName}\n    onClick={() => receivedAppContext.updateSourceDialog({open: !receivedAppContext.sourceDialog.open, content: props.data})}\n    >{props.sourceName}</p>\n)}\n\nexport default SourceName;","import React, { useContext } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // If not a verse, don't create a reference\n     else {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\n\nconst InterlinearLeaf = (props) => {\n\n    const receivedAppContext = useContext(AppContext);\n    const updateDialog = (obj) => {\n        receivedAppContext.newDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => updateDialog({open: !receivedAppContext.dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(!word_metadata.data.StrongNumber) ? '-' : word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => updateDialog({open: !receivedAppContext.dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                    style={(word_metadata.data.StrongNumber === 'H4487') ? {backgroundColor: 'yellow'} : null}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber : word_metadata.data.extendedStrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            {props.content.map(block => {\n                switch (block.type) {\n                    case 'speech':\n                        return <Paragraph content={block.nodes} />\n                    case 'subtitle':\n                        return <Subtitle content={block.nodes} />\n                    case 'bulleted-list':\n                        return <BulletedList content={block.nodes} />\n                    case 'table':\n                        return <p style={{color: 'red'}}>TABLE WILL BE HERE!</p>\n                        // <Table content={block.nodes} />\n                    default:\n                        return null\n                }\n            })}\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classNameProp),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    wrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: '140px',\n  },\n  chart: {\n    // maxHeight: '120px',\\\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: 'small',\n    padding: 0\n  },\n  top5Title: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '11px',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: '#eeeeee'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Main Character(s)', 'Everyone Else'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 12,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n  console.log(props)\n  console.log(createColorData(props.colors))\n    const classes = useStyles();\n    return (\n      <div>\n        <div className={classes.main}>\n          <Card className={classes.backgroundColor}>\n            <CardHeader title=\"Color Comparison\" disableTypography=\"true\" className={classes.top5Title}/>\n            <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n              <Doughnut data={createColorData(props.colors)} options={chartOptions} />\n            </CardContent>\n          </Card>\n        </div>\n        <div className={classes.main}>\n          <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor}`}>\n            <CardHeader title=\"Top 5 Sources (words)\" disableTypography=\"true\" className={classes.top5Title}/>\n            <CardContent className={classes.cardContent}>\n            {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]}`} >{source.name} ({source.words})</p>)}\n            </CardContent>\n          </Card>\n          <Card className={`${classes.top5} ${classes.backgroundColor}`}>\n              <CardHeader title=\"Top 5 Repeated Words\" disableTypography=\"true\" className={classes.top5Title}/>\n              <CardContent className={classes.cardContent}>\n              <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n              <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n              <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n              <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n              <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useEffect, useContext } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nexport default ({pageContext: {segment}}) => {\n  const receivedAppContext = useContext(AppContext);\n  \n  // let scrollData = location.state\n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  return (\n    <div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(segment.content) ? (\n        <div>\n          <div>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          {segment.content.map(block => {\n            // const SVBData = {\n            //   color: block.data.color,\n            //   source: block.data.source\n            // }\n            if (block.data.color === 'black') {\n              return (<Narrator \n                sourceData={block.data}\n                inlines={block.nodes} />\n                )\n            } else {\n              return (<SpeechBubble \n                sourceData={block.data}\n                inlines={block.nodes} />\n                )\n            }\n          })}\n        </div>\n    ) : (\n        <Introduction content={segment.document.nodes} />\n      )}\n    </div>\n  )}","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n"],"sourceRoot":""}