{"version":3,"sources":["webpack:///./src/components/SourceViewInfo/SourceViewInfo.js","webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/WordDataTable/WordDataTable.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Leaf/SphereLeaf.js","webpack:///./src/components/Leaf/VerbLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Table/TableCell.js","webpack:///./src/components/Introduction/Table/TableRow.js","webpack:///./src/components/Introduction/Table/TableHeader.js","webpack:///./src/components/Introduction/Table/Table.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/IntroData/IntroData.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/components/WordDataTable/VerbWordDataTable.js","webpack:///./src/components/VerbView/VerbCharts.js","webpack:///./src/components/Dialogs/VerbViewDialog.js","webpack:///./src/components/SegmentData/OTNTData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./src/images/Foundational.png","webpack:///./src/images/Celebration.png","webpack:///./src/images/Communications.png","webpack:///./src/images/Economics.png","webpack:///./src/images/Education.png","webpack:///./src/images/Family.png","webpack:///./src/images/Government.png","webpack:///./src/images/Religion.png","webpack:///./src/images/SVB-Read-together.png","webpack:///./src/images/SVB-Discuss-together.png","webpack:///./src/images/VerbViewLogo.png","webpack:///./src/data/Verbs sync ^\\.\\/.*\\.json$"],"names":["SourceViewInfo","props","SVBData","content","color","recipList","unique_recipients","map","recip","react_default","a","createElement","className","styles","SVBInfoTable","row","leftCell","style","fontSize","middleCell","rightCell","cellTitle","source","length","recipient","time_period","narrator","sourceName","unique_sources","SourceName","_useState","useState","open","sourceDialog","updateSourceDialog","newSourceDialog","obj","onClick","data","Dialog","maxWidth","onClose","DialogTitle","DialogContent","dividers","components_SourceViewInfo_SourceViewInfo","useStyles","makeStyles","theme","typography","padding","spacing","paper","background","width","Leaf","receivedAppContext","useContext","AppContext","anchorEl","setAnchorEl","classes","chapter","marks","find","mark","type","undefined","verse","footnote","bibleRef","classNames","leaf","join","handleClick","event","currentTarget","handleClickAway","Boolean","id","book","display","displayRef","text","onMouseOver","onMouseLeave","Popper","transition","placement","_ref","TransitionProps","ClickAwayListener","onClickAway","Fade","Object","assign","timeout","Paper","Typography","Table","displayedData","language","IT","lexeme","transSBL","GoodrickKohlenbergerNumbers","LouwNidaNumbers","ETCBCgloss","HebrewLexeme","SBLstyleTransliteration","Heb_ref","book_id","chapter_id","verse_id","KJV_ref","morphologyDetail","dialogTable","closeButton","position","right","top","palette","grey","dialog","height","definition","fontWeight","InterlinearLeaf","updateDialog","newDialog","interlinearLeaf","word_metadata","newLine","search","text1","substring","text2","dictionary","version","require","strongsNumberOnly","StrongNumber","extendedStrongNumber","gloss","Fragment","key","word_ID","whitespace","interlinearinterlinear","interlinearStrongs","interlinearTranslation","strongs_def","WordDataTable","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","highlightColors","CEL","COM","ECO","EDU","FAM","GOV","REL","logo","marginRight","flex","whiteSpace","verticalAlign","backgroundColor","dialogRef","textAlign","marginBottom","dialogHeader","justifyContent","SphereLeaf","_useState2","keyPassage","sphere","keyPassageNum","doubleHighlight","parseInt","push","styledClasses","c","indexOf","highlight","KeyPassages","spheres","boxShadow","SPH","src","Foundational","Celebration","Communication","Economics","Education","Family","Government","Religion","getSphereLogo","mainSphere","title","questions","Q1","Q2","Q3","Q4","GodVerb","SharedVerb","VerbViewData","verbViewDialog","VerbView","Inlines","prose","leaves","interlinear","Leaf_InterlinearLeaf","showSpheres","Leaf_SphereLeaf","showVerbs","VerbLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","speechbubblehebrew","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","table","borderCollapse","borderSpacing","border","tableTR","borderBottom","borderRight","tableTD","borderTop","paddingLeft","paddingRight","TableRow","Array","from","cell","TableCell","tableTH","shift","TableHeader","Table_TableRow","Subtitle","main","flexWrap","maxHeight","card","margin","leftCard","top5","cardTitle","textDecoration","top5List","cardContent","lineHeight","paddingBottom","red","green","blue","topSources","topWords","colorComparison","segmentBarChart","chartholder","bookChart","segChart","piechart","introSubtitle","percentageOfVerses","segments","keys","OTNTData","totals","verses","original","quotes","allusions","forEach","segment","total","chartOptions","responsive","maintainAspectRatio","layout","left","bottom","legend","labels","boxWidth","bibleBookOrder","bibleBookList","BookBarChartOptions","scales","xAxes","stacked","yAxes","getNumOfVerses","ref","verseRef","split","numOfVerses","startingVerse","createBookBarDataObj","LukData","barData","quoteRef","bookRef","allusionRef","books","sort","b","bookData","datasets","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","SegmentBarChartOptions","SegmentData","segmentIDs","root","Card","CardHeader","testament","disableTypography","CardContent","es","pieData","options","seg","SegmentRefs","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","Introduction_Table_Table","segmentID","IntroData","NarratorText","createColorData","pop","values","Math","round","chart","colors","sourcesArray","val","words","top5Sources","count","name","getTopSources","sources","repeatedWords","occurrences","byBook","blackButton","redButton","greenButton","blueButton","selected","roles","marginTop","roleSelectButton","showReferences","VerbCharts","_occurrenceOptions","_SourceRoleOptions","refColor","updateRefColor","showRefs","updateShowRefs","verbFile","fileRef","occurrenceData","verbRef","NumGodVerbs","NumSharedVerbs","NumOthersVerbs","occurrenceOptions","bookCounts","VerbByBookData","OthersVerb","GodVerbs","SharedVerbs","OthersVerbs","console","log","HBarHeight","groupedReferencesByColor","all","GodRefs","black","filter","countGroupedRefs","SourceRoleData","SourceRoleOptions","Divider","Button","variant","refButton","size","VerbViewDialog","verbDialog","refNum","DJHVerb","strongLength","newVerbDialog","VerbViewLogo","alt","VerbWordDataTable","VerbView_VerbCharts","segmentRefData","SegmentQueries","getRefsWithinSegment","splitRef","chapVerseSplit","newQueryObj","starting_book","starting_chapter","starting_verse","ending_book","ending_chapter","ending_verse","isRefInSegment","OTNTRefData","segmentDataContainer","header","paddingTop","reference","discuss","footer","& p","images","readImage","imgCaption","groupIcons","opacity","furtherDiscovery","__webpack_exports__","_ref$pageContext","pageContext","updateVerbDialog","QuestionsRefs","QRef1","questionRef","updateQuestionRef","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","currentYear","Date","getFullYear","SegmentTitles","components_SegmentData_SegmentData","ReadTogether","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","Dialogs_VerbViewDialog","DiscussTogether","QuestionsData","QRef2","QRef3","SegmentData_OTNTData","components_Introduction_Introduction","document","module","exports","__webpack_require__","p","./H067.json","./H619.json","webpackContext","req","webpackContextResolve","e","Error","code","resolve"],"mappings":"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","file":"component---src-templates-chapter-page-js-eb90f112f5ba9030518e.js","sourcesContent":["import React from 'react'\nimport styles from './SourceViewInfo.module.css'\n\nconst SourceViewInfo = (props) => {\n    const SVBData = props.content\n    const color = () => {\n        switch (SVBData.color) {\n            case 'blue':\n                return 'darkblue'\n            case 'green':\n                return '#006400'\n            case 'red':\n                return '#d60000'\n            case 'black':\n                return 'black'\n            default:\n                return 'black'\n        } \n    }\n\n    if (SVBData.color !== 'black') {\n        let recipList = ``\n        SVBData.unique_recipients.map(recip => {\n            recipList = (recipList !== '') ? recipList + `, ${recip}` : recipList + `${recip}`\n        })\n        return (\n            <div>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><i className={`pi pi-user`} style={{'fontSize': '3em'}}></i></td>\n                            <td className={styles.middleCell}><i className={`pi pi-arrow-circle-right`} style={{'fontSize': '3em', 'color': color()}}></i></td>\n                            <td className={styles.rightCell}><i className={`pi pi-users`} style={{'fontSize': '3em'}}></i></td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><span className={styles.cellTitle}>SOURCE(S)</span><br />{SVBData.source}</td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}><span className={styles.cellTitle}>RECIPIENT(S)</span><br />{(SVBData.unique_recipients.length === 1) ? SVBData.recipient : recipList}</td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    } else {\n        return (<div className={styles.narrator}>\n                <i className={`pi pi-user`} style={{'fontSize': '3em'}}></i>\n                <p className={styles.cellTitle}>SOURCE</p>\n                <p className={styles.sourceName}>{`${SVBData.source} (${SVBData.unique_sources[0]})`}</p>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SourceViewInfo;","import React, { useContext, useState } from 'react'\nimport styles from './SourceName.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport SourceViewInfo from '../SourceViewInfo/SourceViewInfo'\n\nconst SourceName = (props) => {\n    // const receivedAppContext = useContext(AppContext)\n    \n    // This controls the popup for the source information\n    const [ sourceDialog, updateSourceDialog ] = useState({open: false, content: {}})\n    const newSourceDialog = (obj) => {\n        updateSourceDialog(obj)\n    }\n    return (\n    <p className={styles.sourceName}\n    onClick={() => newSourceDialog({open: !sourceDialog.open, content: props.data})}\n    >\n        {props.sourceName}\n        {(sourceDialog.open === true) ? (\n            <Dialog \n                maxWidth='lg'\n                open={sourceDialog.open}\n                onClose={() => newSourceDialog({open: false, content: {}})}>\n                    <DialogTitle>SourceView Info</DialogTitle>\n                    <DialogContent dividers>\n                    <SourceViewInfo content={sourceDialog.content}/>  \n                    </DialogContent>\n            </Dialog> \n        ) : null}\n    </p>\n)}\n\nexport default SourceName;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, styles.leaf].join(' ') : styles.leaf\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => {\n        const receivedAppContext = useContext(AppContext)\n        const displayedData = (receivedAppContext.language === 'GRK') ? [\n                ['Gloss', props.content.IT],\n                ['Lemma', props.content.lexeme],\n                ['SBL Transliteration', props.content.transSBL],\n                ['GK #', props.content.GoodrickKohlenbergerNumbers],\n                ['LouwNida #', props.content.LouwNidaNumbers]\n         ] : [\n                ['Gloss', props.content.ETCBCgloss],\n                ['Lemma', props.content.HebrewLexeme],\n                ['SBL Transliteration', props.content.SBLstyleTransliteration],\n                ['Hebrew Reference', `${props.content.Heb_ref.book_id} ${props.content.Heb_ref.chapter_id}:${props.content.Heb_ref.verse_id}`],\n                ['English Reference', `${props.content.KJV_ref.book_id} ${props.content.KJV_ref.chapter_id}:${props.content.KJV_ref.verse_id}`],\n                ['Morphological Details', props.content.morphologyDetail]\n         ]\n        return (\n        <table className={styles.dialogTable}><tbody>\n                {displayedData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n                </tbody>\n        </table>\n        )\n}\n\nexport default Table;","import React, { useContext, useState } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport WordDataTable from '../WordDataTable/WordDataTable'\nimport theme from '../../theme'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n    dialog: {\n      width: '75vw',\n      height: '75vh'\n    },\n    definition: {\n      fontWeight: 'bold'\n    }\n  });\n\nconst InterlinearLeaf = (props) => {\n    const classes = useStyles();\n    const receivedAppContext = useContext(AppContext);\n    \n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        updateDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    const dictionary = (receivedAppContext.version === 'GNA') ? require('../../data/strongsGreekDictionary.json') : (receivedAppContext.version === 'WLC') ? require('../../data/strongsHebrewDictionary.json') : null\n\n    const strongsNumberOnly = (!word_metadata.data.StrongNumber) ? '-' : (word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber.substring(1,5) : word_metadata.data.extendedStrongNumber.substring(1,5)\n    const gloss = (word_metadata.data.ETCBCgloss === '[object marker]' || \n        word_metadata.data.ETCBCgloss === '[relative]' ||\n        word_metadata.data.ETCBCgloss === '[interrogative]' ||\n        word_metadata.data.ETCBCgloss === '[uncertain]' ) ? '-' : (receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{strongsNumberOnly}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{gloss}</span>\n                </span>\n                {(dialog.open === true) ? (\n                    <Dialog \n                    maxWidth='lg'\n                        open={dialog.open} \n                        onClose={() => newDialog({open: false, content: {}})}>\n                        <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.StrongNumber.substring(1,5)}` : `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.extendedStrongNumber.substring(1,5)}`}`}</DialogTitle>\n                        <DialogContent dividers>\n                            <p className={classes.definition}>{`STRONG'S DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                            <WordDataTable />\n                        </DialogContent>\n                    </Dialog> \n                ) : null}\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{strongsNumberOnly}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{gloss}</span>\n                    {(dialog.open === true) ? (\n                        <Dialog \n                        maxWidth='lg'\n                            open={dialog.open} \n                            onClose={() => newDialog({open: false, content: {}})}>\n                            <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.StrongNumber.substring(1,5)}` : `Strong's ${(receivedAppContext.language === 'HBR') ? 'OT' : 'NT'} #${dialog.content.extendedStrongNumber.substring(1,5)}`}`}</DialogTitle>\n                            <DialogContent dividers>\n                                <p className={classes.definition}>{`STRONG'S DEFINITION:  `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                                <WordDataTable content={dialog.content}/>\n                            </DialogContent>\n                        </Dialog> \n                    ) : null}\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext, useState } from 'react'\nimport KeyPassages from './../../data/KeyPassages.json'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Foundational from './../../images/Foundational.png'\nimport Celebration from './../../images/Celebration.png'\nimport Communication from './../../images/Communications.png'\nimport Economics from './../../images/Economics.png'\nimport Education from './../../images/Education.png'\nimport Family from './../../images/Family.png'\nimport Government from './../../images/Government.png'\nimport Religion from './../../images/Religion.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst highlightColors = {\n    CEL: '#f9d7fb',\n    COM: '#eed7fb',\n    ECO: '#fbe9d7',\n    EDU: '#d7fbf8',\n    FAM: '#fbcaca',\n    GOV: '#fafbca',\n    REL: '#d8fbca',\n}\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    },\n    logo: {\n        height: '30px',\n        width: '30px',\n        marginRight: '20px',\n        flex: '0 0 30px'\n    },\n    leaf: {\n        whiteSpace: 'pre-wrap',\n        height: '25px',\n    },\n    chapter: {\n        fontWeight: 'bold'\n    },\n    verse: {\n        verticalAlign: 'top',\n        position: 'relative',\n        top: '-0.3em',\n        fontSize: '60%',\n        backgroundColor: 'transparent'\n    },\n    dialogRef: {\n        color: 'grey',\n        fontSize: '80%',\n        textAlign: \"center\",\n        marginBottom: '-15px'\n    },\n    dialogHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '-10px'\n    }\n  }));\n\nconst SphereLeaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        updateDialog(obj)\n    }\n\n    // Create CSS styles from marks\n    const keyPassage = (props.marks) ? props.marks.find(mark => mark.type === 'keyPassage') : undefined\n    const sphere = (keyPassage) ? keyPassage.data.id.substring(0.3) : null\n    const keyPassageNum = (keyPassage) ? keyPassage.data.id.substring(4,6) : null\n    const doubleHighlight = parseInt(keyPassageNum) > 46\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    let classNames = []\n    if (verse !== undefined) {\n        classNames.push(classes.verse)\n    }\n    if (chapter !== undefined) {\n        classNames.push(classes.chapter)\n    }\n\n    let styledClasses = ''\n\n    classNames.map(c => {\n        if (classNames.indexOf(c) === 0) {\n            styledClasses = `${c}`\n        } else {\n            styledClasses = styledClasses + `, ${c}`\n        }\n    })\n\n    let highlight = ''\n    if (keyPassage && doubleHighlight) {\n        highlight = `repeating-linear-gradient(${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]}, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]} 49.9%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 50.1%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 100%)`\n    } else if (keyPassage && !doubleHighlight) {\n        highlight = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else {\n        highlight = ''\n    }\n\n    let backgroundColor = '' \n    if (keyPassage && !doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else if (keyPassage && doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]\n    } else {\n        backgroundColor = ''\n    }\n\n    function getSphereLogo(SPH) {\n        const sphere = SPH.substring(0,3)\n        switch (sphere) {\n            case 'FOU':\n                return <img src={Foundational} className={classes.logo} />\n            case 'CEL':\n                return <img src={Celebration} className={classes.logo} />\n            case 'COM':\n                return <img src={Communication} className={classes.logo} />\n            case 'ECO':\n                return <img src={Economics} className={classes.logo} />\n            case 'EDU':\n                return <img src={Education} className={classes.logo} />\n            case 'FAM':\n                return <img src={Family} className={classes.logo} />\n            case 'GOV':\n                return <img src={Government} className={classes.logo} />\n            case 'REL':\n                return <img src={Religion} className={classes.logo} />\n        }\n    }\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return (\n            <span style={{\n                background: highlight,\n                boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n                whiteSpace: 'pre-wrap',\n                height: '25px',\n            }}\n            onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n            >\n            <span \n                id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`}\n                className={styledClasses} \n                style={{\n                    display: (receivedAppContext.displayRef) ? '' : 'none',\n                    background: highlight,\n                    boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : ''\n                }}\n                >\n                    {props.text}{(chapter)?'':'\\u00A0'}\n                </span></span>)\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span style={{\n            background: highlight,\n            boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n            whiteSpace: 'pre-wrap',\n            height: '25px',\n        }}\n        onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n        >\n            {footnote ? (\n                <span className={styledClasses} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                        {({ TransitionProps }) => (\n                            <ClickAwayListener onClickAway={handleClickAway}>\n                                <Fade {...TransitionProps} timeout={350}>\n                                    <Paper className={classes.paper}>\n                                    <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                    </Paper>\n                                </Fade>\n                            </ClickAwayListener>\n                        )}\n                    </Popper>\n                </span>\n            ) : <span className={styledClasses}>{props.text}</span>}\n            {(dialog.open === true) ? (\n                <Dialog \n                maxWidth='lg'\n                    open={dialog.open} \n                    onClose={() => newDialog({open: false, content: {}})}>\n                    <DialogTitle>\n                        <div className={classes.dialogHeader}>\n                            {getSphereLogo(sphere)}\n                            <p className={classes.dialogRef}>{dialog.content.mainSphere} #{keyPassage.data.id.substring(4,6)}</p>\n                        </div>\n                        {dialog.content.title}\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <p>Let's Think About This:</p>\n                        <ul>\n                            <li>{dialog.content.questions.Q1}</li>\n                            <li>{dialog.content.questions.Q2}</li>\n                            <li>{dialog.content.questions.Q3}</li>\n                            <li>{dialog.content.questions.Q4}</li>\n                        </ul>\n                    </DialogContent>\n                </Dialog> \n            ) : null}\n        </span>\n        )\n     }\n     \n    }\n\nexport default SphereLeaf;","import React, { useContext, useState } from 'react'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // Create CSS styles from marks\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const GodVerb = (props.marks) ? props.marks.find(mark => mark.type === 'God') : undefined\n    const SharedVerb = (props.marks) ? props.marks.find(mark => mark.type === 'Both') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    const classNames = (verse !== undefined || chapter !== undefined) ? [(chapter !== undefined)?styles.chapter:null, (verse)?styles.verse:null, (GodVerb || SharedVerb)?styles.GodVerb:null, styles.leaf].join(' ') : styles.leaf\n    const VerbViewData = GodVerb || SharedVerb\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''} style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    // if it's a GodVerb\n    else if (GodVerb || SharedVerb) {\n        return <span \n            className={(classNames !== null) ? classNames : ''} \n            onClick={() => props.verbViewDialog({open: true, content: Object.assign(word_metadata.data, {text: props.text}, { VerbView: VerbViewData.data })})}\n            style={(GodVerb || SharedVerb) ? {backgroundColor: 'yellow'} : null} >{props.text}</span>\n    }\n\n    // If not a verse, don't create a reference\n     else {\n        return (<span>\n            {footnote ? (\n                <span className={(classNames !== null) ? classNames : ''} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                            {({ TransitionProps }) => (\n                                <ClickAwayListener onClickAway={handleClickAway}>\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Paper className={classes.paper}>\n                                        <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                        </Paper>\n                                    </Fade>\n                                </ClickAwayListener>\n                            )}\n                    </Popper>\n                </span>\n            ) : <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport SphereLeaf from '../Leaf/SphereLeaf'\nimport VerbLeaf from '../Leaf/VerbLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showSpheres) {\n                        return <SphereLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showVerbs) {\n                        return <VerbLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}\n                        verbViewDialog={props.verbViewDialog} />\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showSpheres) {\n                        return <SphereLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else if (receivedAppContext.showVerbs) {\n                        return <VerbLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}\n                        verbViewDialog={props.verbViewDialog} />\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative',\n        fontSize: '80%'\n    },\n    text: {\n        paddingLeft: '0.5em',\n        paddingRight: '0.5em'\n    }\n  }))\n\nconst TableRow = (props) => {\n    const classes = useStyles()\n    const nodes = Array.from(props.content)\n    return (\n        <td className={classes.tableTD}>\n            {nodes.map(cell => <p className={classes.text}>{cell.nodes[0].leaves[0].text}</p>)}\n        </td>\n    )\n}\n\nexport default TableRow","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableCell from './TableCell'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative'\n    }\n  }))\n\nconst TableRow = (props) => {\n    const classes = useStyles()\n    const nodes = Array.from(props.content)\n    return (\n        <tr className={classes.tableTR}>\n            {nodes.map(cell => <TableCell content={cell.nodes}/>)}\n        </tr>\n    )\n}\n\nexport default TableRow","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableCell from './TableCell'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTH: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative'\n    }\n  }))\n\nconst TableRow = (props) => {\n    const classes = useStyles()\n    const nodes = Array.from(props.content)\n    return (\n        <tr className={classes.tableTH}>\n            {nodes.map(cell => <TableCell content={cell.nodes}/>)}\n        </tr>\n    )\n}\n\nexport default TableRow","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableRow from './TableRow'\nimport TableHeader from './TableHeader'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        position: 'relative',\n        width: '100%',\n        borderCollapse: 'collapse',\n        borderSpacing:0,\n        display:'table',\n        border: '1px solid #000',\n        boxShadow:'0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)',\n    },\n    tableTR: {\n        border: 'none',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n    },\n    tableTD: {\n        border: '1px solid black',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderRight: 'none',\n        padding: '.5em',\n        position: 'relative'\n    }\n  }))\n\nconst Table = (props) => {\n    const classes = useStyles()\n    let nodes = Array.from(props.content)\n    nodes.shift()\n    return (\n        <table className={classes.table}>\n          <tbody>\n            <TableHeader content={Array.from(props.content)[0].nodes}></TableHeader>\n            {nodes.map(row => <TableRow content={row.nodes}/>)}\n          </tbody>\n        </table>\n    )\n}\n\nexport default Table","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut, Bar, HorizontalBar } from 'react-chartjs-2'\nimport OTNTData from '../../../data/OTNTData.json'\nimport SegmentRefs from '../../../data/SegmentTitles.json'\nimport LukData from '../../../data/Luk(OTNT).json'\nimport bibleBookList from '../../../data/BookChapterList.json'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { relative } from 'path';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '75px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '500px',\n    height: 'fit-content',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    fontSize: '11px',\n    lineHeight: '13px',\n    position: 'relative',\n    width: '100%',\n    paddingBottom: 1\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n    maxHeight: '275px'\n  },\n  segmentBarChart: {\n    flex: '1 1 400px',\n    height: 'fit-content'\n  },\n  chartholder: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: '5px',\n    marginBottom: '50px'\n  },\n  bookChart: {\n    height: '500px'\n  },\n  segChart: {\n    height: '400px',\n  },\n  piechart: {\n    height: '300px'\n  },\n  introSubtitle: {\n    color: 'rgb(83, 152, 255)',\n    fontWeight: 'bold'\n  }\n})\n\n// ---------------------- //\n// PIE CHART DATA\n// ---------------------- //\n\nconst percentageOfVerses = () => {\n  const segments = Object.keys(OTNTData)\n  let totals = {\n    verses: 0,\n    original: 0,\n    quotes: 0,\n    allusions: 0\n  }\n  segments.forEach(segment => {\n    totals.verses += OTNTData[segment].verses;\n    totals.quotes += OTNTData[segment].quotes;\n    totals.allusions += OTNTData[segment].allusions;\n    totals.original += (OTNTData[segment].total - OTNTData[segment].verses);\n  })\n  return totals\n}\n\nconst createPieChartData = () => {\n  return {\n    labels: [\"Quotations\",\"Allusions\",\"Remainder\"],\n    datasets: [{\n      data: [percentageOfVerses().quotes, percentageOfVerses().allusions, percentageOfVerses().original],\n      backgroundColor: [\n        'rgb(209, 0, 209)',\n        'rgb(255, 238, 4)',\n        'lightgrey',\n        ],\n      hoverBackgroundColor: [\n        'purple',\n        'rgb(184, 171, 0)',\n        'grey'\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'top',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\n// ---------------------- //\n// BOOK BAR CHART DATA\n// ---------------------- //\n\n\nconst bibleBookOrder = Object.keys(bibleBookList)\n\nconst BookBarChartOptions = {\n  scales: {\n    xAxes: [{ stacked: true }],\n    yAxes: [{ stacked: true }],\n  },\n  maintainAspectRatio: false,\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 20\n    },\n    display: false\n  },\n};\n\nconst getNumOfVerses = (ref) => {\n  const verseRef = ref.split(':')[1]\n  let numOfVerses = 1\n  if (verseRef.search('-') !== -1) {\n    // console.log(verseRef)\n    const startingVerse = parseInt(verseRef.split('-')[0])\n    const endingVerse = parseInt(verseRef.split('-')[1])\n    numOfVerses = endingVerse - startingVerse + 1;\n  }\n  return numOfVerses\n}\n\nconst createBookBarDataObj = () => {\n\n  // Compile Bar Data from JSON\n\n  const verses = Object.keys(LukData);\n  let barData = {}\n  verses.forEach(ref => {\n    const quotes = (LukData[ref].quotes !== undefined) ? Array.from(LukData[ref].quotes) : null\n    const allusions = (LukData[ref].allusions) ? LukData[ref].allusions : null\n    if (quotes) {\n      quotes.forEach(quoteRef => {\n        const numOfVerses = getNumOfVerses(quoteRef)\n        const bookRef = quoteRef.substring(0,3)\n        if (!barData[bookRef]) {\n          barData[bookRef] = {}\n          barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n        } else {\n          barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n        }\n      })\n    }\n    if (allusions) {\n      allusions.forEach(allusionRef => {\n        const numOfVerses = getNumOfVerses(allusionRef)\n        const bookRef = allusionRef.substring(0,3)\n        if (!barData[bookRef]) {\n          barData[bookRef] = {\n            allusions: numOfVerses\n          }\n        } else {\n          barData[bookRef].allusions += numOfVerses\n        }\n      })\n    }\n  })\n\n  // distribute Bar Data from JSON\n  let books = Object.keys(barData);\n  books.sort(function(a, b) {\n    return bibleBookOrder.indexOf(a) - bibleBookOrder.indexOf(b);\n  });\n\n  const bookData = {\n    labels: [],\n    quotes: [],\n    allusions: []\n  }\n  books.forEach(book => {\n    bookData.labels.push(book)\n    bookData.quotes.push((barData[book].quotes) ? barData[book].quotes : 0)\n    bookData.allusions.push((barData[book].allusions) ? barData[book].allusions : 0)\n\n  })\n\n  return {\n    labels: bookData.labels,\n    datasets: [\n      {\n        label: 'Quotations',\n        data: bookData.quotes,\n        backgroundColor: 'rgb(209, 0, 209)',\n        borderColor: 'purple',\n        borderWidth: 1,\n        hoverBackgroundColor: 'purple',\n        hoverBorderColor: 'purple',\n      },\n      {\n        label: 'Allusions',\n        data: bookData.allusions,\n        backgroundColor: 'rgb(255, 238, 4)',\n        borderColor: 'rgb(184, 171, 0)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgb(184, 171, 0)',\n        hoverBorderColor: 'rgb(184, 171, 0)',\n      }\n    ],\n  };\n}\n\n// ---------------------- //\n// SEGMENT BAR CHART DATA\n// ---------------------- //\n\nconst SegmentBarChartOptions = {\n  scales: {\n    xAxes: [{ stacked: true }],\n    yAxes: [{ stacked: true }],\n  },\n  maintainAspectRatio: false,\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    },\n    display: false\n  },\n};\n\nconst createSegmentBarDataObj = () => {\n  const segmentIDs = Object.keys(OTNTData);\n  let barData = {\n    quotes: [],\n    allusions: [],\n    original: [],\n    labels: []\n  }\n  segmentIDs.forEach(seg => {\n    barData.quotes.push((OTNTData[seg].quotes) ? OTNTData[seg].quotes : 0)\n    barData.allusions.push((OTNTData[seg].allusions) ? OTNTData[seg].allusions : 0)\n    barData.original.push(OTNTData[seg].total - OTNTData[seg].verses)\n    barData.labels.push(SegmentRefs[seg].ref)\n  })\n\n  return {\n    labels: barData.labels,\n    datasets: [\n      {\n        label: 'Quotations',\n        data: barData.quotes,\n        backgroundColor: 'rgb(209, 0, 209)',\n        borderColor: 'purple',\n        borderWidth: 1,\n        hoverBackgroundColor: 'purple',\n        hoverBorderColor: 'purple',\n      },\n      {\n        label: 'Allusions',\n        data: barData.allusions,\n        backgroundColor: 'rgb(255, 238, 4)',\n        borderColor: 'rgb(184, 171, 0)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgb(184, 171, 0)',\n        hoverBorderColor: 'rgb(184, 171, 0)',\n      },\n      {\n        label: 'Remainder',\n        data: barData.original,\n        backgroundColor: 'lightgrey',\n        borderColor: 'grey',\n        borderWidth: 1,\n        hoverBackgroundColor: 'grey',\n        hoverBorderColor: 'grey',\n      }\n    ],\n  };\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.root}>\n        <p className={classes.introSubtitle}>Old and New Testament Relationships</p>\n        <div className={classes.main}>\n          <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n            <CardHeader title={(props.testament === 'NT') ? 'Quotations and Allusions from OT' : `Quotations and Allusions used in ${props.book}`} disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={`${classes.cardContent} ${classes.piechart}`}>\n              <div className={classes.chartholder}>\n                <Doughnut \n                  data={createPieChartData(props.pieData)} \n                  options={chartOptions} \n                  height={null}\n                  width={null}\n                />\n              </div>\n            </CardContent>\n          </Card>\n          <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card} ${classes.segmentBarChart}`}>\n            <CardHeader title=\"Quotations, Allusions and Remainder (verses)\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={`${classes.cardContent} ${classes.segChart}`}>\n              <div className={classes.chartholder}>\n                <HorizontalBar\n                  data={createSegmentBarDataObj()}\n                  width={40}\n                  height={35}\n                  options={SegmentBarChartOptions}\n                />\n              </div>\n            </CardContent>\n          </Card>\n          <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.segmentBarChart}`}>\n            <CardHeader title=\"Books with Quotations and Allusions\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={`${classes.cardContent} ${classes.bookChart}`}>\n              <div className={classes.chartholder}>\n                <HorizontalBar\n                  data={createBookBarDataObj()}\n                  width={40}\n                  height={60}\n                  options={BookBarChartOptions}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n)}\n\nexport default SegmentData;","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\nimport IntroData from './IntroData/IntroData'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            <div>\n                {props.content.map(block => {\n                    switch (block.type) {\n                        case 'speech':\n                            return <Paragraph content={block.nodes} />\n                        case 'subtitle':\n                            return <Subtitle content={block.nodes} />\n                        case 'bulleted-list':\n                            return <BulletedList content={block.nodes} />\n                        case 'table':    \n                            return <Table content={block.nodes}/>\n                        default:\n                            return null\n                    }\n                })}\n            </div>\n            {(props.segmentID === 'I042') && <div><IntroData book={props.book}/></div>}\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}\n                    verbViewDialog={props.verbViewDialog}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px',\n    lineHeight: '150%'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Lead Character(s)', 'Other Character(s)'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title=\"Source Role Comparison\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut \n              data={createColorData(props.colors)} \n              options={chartOptions} \n              height={null}\n              width={null}\n              />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Most Frequent Sources\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]} ${classes.topWords}`} >{source.name} ({source.words})</p>)}\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Most Frequent Words\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => {\n        const receivedAppContext = useContext(AppContext)\n        const displayedData = (receivedAppContext.language === 'GRK') ? [\n                ['Lemma', props.content.lexeme],\n                ['SBL Transliteration', props.content.transSBL]\n         ] : [\n                ['Lemma', props.content.HebrewLexeme],\n                ['SBL Transliteration', props.content.SBLstyleTransliteration]\n         ]\n        return (\n        <table className={styles.dialogTable}><tbody>\n                {displayedData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n                </tbody>\n        </table>\n        )\n}\n\nexport default Table;","import React, { useState } from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  // main: {\n  //   display: 'flex',\n  //   justifyContent: 'center',\n  //   flexWrap: 'wrap',\n  //   textAlign: 'center',\n  //   marginBottom: '75px',\n  //   maxHeight: 'fit-content',\n  // },\n  occurrences: {\n    height: '300px',\n    width: '100%',\n    // margin: '0 auto',\n    position: 'relative'\n  },\n  byBook: {\n    height: '600px',\n    width: '100%',\n    // margin: '0 auto',\n    position: 'relative'\n  },\n  chartholder: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: '5px',\n    // marginBottom: '50px'\n  },\n  blackButton: {\n    color: 'black',\n    backgroundColor: 'rgb(201, 201, 201)',\n    borderColor: 'black',\n    margin: '2px'\n  },\n  redButton: {\n    color: '#d60000',\n    backgroundColor: '#ffadad',\n    borderColor: '#d60000',\n    margin: '2px'\n  },\n  greenButton: {\n    color: '#006400',\n    backgroundColor: '#b9f8b9',\n    borderColor: '#006400',\n    margin: '2px'\n  },\n  blueButton: {\n    color: 'darkblue',\n    backgroundColor: 'rgb(142, 227, 255)',\n    borderColor: 'darkblue',\n    margin: '2px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  selected: {\n    fontWeight: 'bold',\n    textDecoration: 'underline'\n  },\n  roles: {\n    width: '100%',\n    height: 'auto',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '10px'\n  },\n  roleSelectButton: {\n    padding: '2px'\n  },\n  showReferences: {\n    margin:'5px',\n    padding: '5px',\n    textAlign: 'center'\n  }\n})\n\nconst VerbCharts = (props) => {\n  const classes = useStyles()\n  const [ refColor, updateRefColor ] = useState('')\n  const [ showRefs, updateShowRefs ] = useState(false)\n  const verbFile = require(`../../data/Verbs/${props.fileRef}.json`)\n\n  // ------- OCCURRENCES DOUGHNUT CHART------- //\n  const occurrenceData = {\n      labels: [`GodVerb (${verbFile[props.verbRef].NumGodVerbs})`,`SharedVerb (${verbFile[props.verbRef].NumSharedVerbs})` ,`OthersVerb (${verbFile[props.verbRef].NumOthersVerbs})`],\n      datasets: [\n      {\n          data: [verbFile[props.verbRef].NumGodVerbs, verbFile[props.verbRef].NumSharedVerbs, verbFile[props.verbRef].NumOthersVerbs],\n          backgroundColor: [\n              \"#ffadad\",\n              \"rgb(174, 145, 209)\",\n              \"rgb(142, 227, 255)\"\n          ],\n          hoverBackgroundColor: [\n              \"#d60000\",\n              \"rgb(111, 28, 212)\",\n              \"darkblue\"\n          ]\n      }] \n  };\n  const occurrenceOptions = {\n    title: {\n      display: true,\n      text: 'Occurrences',\n      fontSize: 16\n    },\n    legend: {\n      position: 'top'\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 0,\n        bottom: 50\n      }\n    },\n    legend: {\n      position: 'top',\n      labels: {\n        fontSize: 9,\n        boxWidth: 40\n      }\n      // display: false\n    },\n  }\n  \n  // -------BOOK BAR CHART------- //\n  const books = Object.keys(verbFile[props.verbRef].bookCounts)\n  const VerbByBookData = () => {\n    let data = {\n      GodVerb: [],\n      SharedVerb: [],\n      OthersVerb: []\n    }\n    books.forEach(book => {\n      data.GodVerb.push(verbFile[props.verbRef].bookCounts[book].GodVerbs)\n      data.SharedVerb.push(verbFile[props.verbRef].bookCounts[book].SharedVerbs)\n      data.OthersVerb.push(verbFile[props.verbRef].bookCounts[book].OthersVerbs)\n      console.log(book, data)\n    })\n    return data\n  }\n  \n  const bookData = {\n      labels: books,\n      datasets: [\n          {\n              label: 'GodVerbs',\n              backgroundColor: '#ffadad',\n              hoverBackgroundColor: '#d60000',\n              data: VerbByBookData().GodVerb\n          },\n          {\n              label: 'SharedVerbs',\n              backgroundColor: 'rgb(174, 145, 209)',\n              hoverBackgroundColor: 'rgb(111, 28, 212)',\n              data: VerbByBookData().SharedVerb\n          },\n          {\n              label: 'Others',\n              backgroundColor: 'rgb(142, 227, 255)',\n              hoverBackgroundColor: 'darkblue',\n              data: VerbByBookData().OthersVerb\n          }\n      ]    \n  };\n\n  const HBarHeight = bookData.labels.length * 3\n\n  const bookDataOptions = {\n      title: {\n          display: true,\n          text: 'Occurrences per book',\n          fontSize: 16\n      },\n      legend: {\n          position: 'top'\n      },\n      scales: {\n        xAxes: [{ stacked: true }],\n        yAxes: [{ stacked: true }],\n      },\n      maintainAspectRatio: false,\n      responsive: true\n  }\n\n  // ------- OCCURRENCES DOUGHNUT CHART------- //\n\n// group the references into colors\nconst groupedReferencesByColor = () => {\n  const all = verbFile[props.verbRef].GodRefs\n  const black = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'black')\n  const red = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'red')\n  const green = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'green')\n  const blue = verbFile[props.verbRef].GodRefs.filter(ref => ref.color === 'blue')\n  return {\n    black,\n    red,\n    green,\n    blue,\n    all\n  }\n}\n// count groups\nconst countGroupedRefs = () => {\n  return {\n    black: groupedReferencesByColor().black.length,\n    red: groupedReferencesByColor().red.length,\n    green: groupedReferencesByColor().green.length,\n    blue: groupedReferencesByColor().blue.length\n  }\n}\n\n  const SourceRoleData = {\n    labels: [`Narrator`,`God` ,`Lead Character(s)`, `Other Character(s)`],\n    datasets: [\n    {\n        data: [countGroupedRefs().black, countGroupedRefs().red, countGroupedRefs().green, countGroupedRefs().blue],\n        backgroundColor: [\n          'grey',\n          '#ffadad',\n          '#b9f8b9',\n          'rgb(142, 227, 255)',\n          ],\n        hoverBackgroundColor: [\n          'black',\n          '#d60000',\n          '#006400',\n          'darkblue',\n          ]\n    }]    \n};\nconst SourceRoleOptions = {\n  title: {\n    display: true,\n    text: 'Source Role Comparison',\n    fontSize: 16\n  },\n  legend: {\n    position: 'top',\n  },\n  maintainAspectRatio: false,\n  responsive: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'top',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\n  return (\n  <div className={classes.main}>\n      <Divider />\n      <div className={classes.occurrences}>\n        <div className={classes.chartholder}>\n          <Doughnut \n              data={occurrenceData} \n              options={occurrenceOptions}\n              height={10}\n              width={10}\n          />\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.byBook}>\n        <div className={classes.chartholder}>\n          <HorizontalBar \n              data={bookData}  \n              width={50}\n              height={HBarHeight}\n              options={bookDataOptions}\n          />\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.occurrences}>\n        <div className={classes.chartholder}>\n          <Doughnut \n              data={SourceRoleData} \n              options={SourceRoleOptions}\n              height={10}\n              width={10}\n          />\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.showReferences}>\n        <Button color='primary' variant={(showRefs) ? \"outlined\" : \"contained\"} onClick={() => updateShowRefs(!showRefs)}>{(showRefs) ? \"Hide References\" : \"Show References\"}</Button>\n        {(showRefs) ? (\n          <div className={classes.roles}>\n            <span className={`${classes.black} ${classes.roleSelectButton} ${(refColor === 'all') && classes.selected}`} onClick={() => updateRefColor('all')}>All</span>\n            <span className={`${classes.black} ${classes.roleSelectButton} ${(refColor === 'black') && classes.selected}`} onClick={() => updateRefColor('black')}>Black</span>\n            <span className={`${classes.red} ${classes.roleSelectButton} ${(refColor === 'red') && classes.selected}`} onClick={() => updateRefColor('red')}>Red</span>\n            <span className={`${classes.green} ${classes.roleSelectButton} ${(refColor === 'green') && classes.selected}`} onClick={() => updateRefColor('green')}>Green</span>\n            <span className={`${classes.blue} ${classes.roleSelectButton} ${(refColor === 'blue') && classes.selected}`} onClick={() => updateRefColor('blue')}>Blue</span>\n            \n          </div>\n        ) : null}\n      </div>\n      <Divider />\n      {(refColor !== '' && showRefs) ? groupedReferencesByColor()[refColor].map(refButton => <Button size=\"small\" className={classes[`${refButton.color}Button`]} key={refButton.ref}>{refButton.ref}</Button>) : null}\n  </div>\n  )\n}\n\nexport default VerbCharts;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport VerbWordDataTable from '../../components/WordDataTable/VerbWordDataTable'\nimport VerbViewLogo from '../../images/VerbViewLogo.png'\nimport VerbCharts from '../../components/VerbView/VerbCharts'\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n  \nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  definition: {\n    fontWeight: 'bold'\n  },\n  dialogRef: {\n    color: 'grey',\n    fontSize: '80%',\n    textAlign: \"center\",\n    marginBottom: '-15px'\n  },\n  dialogHeader: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: '-10px'\n  },\n  logo: {\n    height: '30px',\n    width: 'auto'\n  }\n}))\n\nconst getVerbRef = (ref) => {\n  if (ref.length === 4) {\n    return ref\n  } else if (ref.length === 3) {\n    return `${ref.substring(0,1)}0${ref.substring(1,3)}`\n  } else if (ref.length === 2) {\n    return `${ref.substring(0,1)}00${ref.substring(1,2)}`\n  }\n}\n\nconst VerbViewDialog = (props) => {\n  const classes = useStyles();\n  const testament = (props.verbDialog.content.VerbView.refNum.substring(0,1) === 'G') ? 'NT' : 'OT'\n  const dictionary = (testament === 'NT') ? require(`../../data/strongsGreekDictionary.json`) : (testament === 'OT') ? require(`../../data/strongsHebrewDictionary.json`) : null\n  const DJHVerb = getVerbRef(props.verbDialog.content.VerbView.refNum)\n  const strongLength = props.verbDialog.content.StrongNumber.length\n  return (\n    <Dialog \n      maxWidth='lg'\n      open={props.verbDialog.open} \n      onClose={() => props.newVerbDialog({open: false, content: {}})}>\n      <DialogTitle>\n        <div className={classes.dialogHeader}>\n            <img src={VerbViewLogo} className={classes.logo} alt=\"VerbViewLogo\" />\n            <Typography variant=\"h4\" className={classes.title}>VerbView</Typography>\n        </div>\n        {`${props.verbDialog.content.text} : ${props.verbDialog.content.VerbView.refNum}`}\n      </DialogTitle>\n      <DialogContent dividers>\n          <p className={classes.definition}>{`STRONG'S ${testament} #${props.verbDialog.content.StrongNumber.substring(1,strongLength)} DEFINITION:  `}<em>{(dictionary[props.verbDialog.content.StrongNumber]) ? dictionary[props.verbDialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n          <VerbWordDataTable content={props.verbDialog.content}/>\n          <VerbCharts fileRef={DJHVerb} verbRef={props.verbDialog.content.VerbView.refNum} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default VerbViewDialog;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut, HorizontalBar } from 'react-chartjs-2'\nimport OTNTRefData from '../../data/OTNTData.json'\nimport LukData from '../../data/Luk(OTNT).json'\nimport bibleBookList from '../../data/BookChapterList.json'\nimport SegmentQueries from '../../data/SegmentQueriesArray.json'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '75px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '500px',\n    height: 'fit-content',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    fontSize: '11px',\n    lineHeight: '13px',\n    position: 'relative',\n    width: '100%',\n    paddingBottom: 1\n  },\n  backgroundColor: {\n    backgroundColor: 'white',\n    border: 'solid grey 1px'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n    maxHeight: '275px'\n  },\n  segmentBarChart: {\n    flex: '1 1 400px',\n    height: 'fit-content'\n  },\n  chartholder: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: '5px',\n    marginBottom: '50px'\n  },\n  bookChart: {\n    height: '500px'\n  },\n  segChart: {\n    height: '400px',\n  },\n  piechart: {\n    height: '300px'\n  },\n  introSubtitle: {\n    color: 'rgb(83, 152, 255)',\n    fontWeight: 'bold'\n  }\n})\n\nconst OTNTData = (props) => {\n  const classes = useStyles();\n\n  // ---------------------- //\n  // PIE CHART DATA\n  // ---------------------- //\n\n  // const percentageOfVerses = () => {\n  //   const segments = Object.keys(OTNTData)\n  //   let totals = {\n  //     verses: 0,\n  //     original: 0,\n  //     quotes: 0,\n  //     allusions: 0\n  //   }\n  //   segments.forEach(segment => {\n  //     totals.verses += OTNTData[segment].verses;\n  //     totals.quotes += OTNTData[segment].quotes;\n  //     totals.allusions += OTNTData[segment].allusions;\n  //     totals.original += (OTNTData[segment].total - OTNTData[segment].verses);\n  //   })\n  //   return totals\n  // }\n\n  const createPieChartData = () => {\n    return {\n      labels: [\"Quotations\",\"Allusions\",\"Remainder\"],\n      datasets: [{\n        data: [OTNTRefData[props.segmentID].quotes, OTNTRefData[props.segmentID].allusions, (OTNTRefData[props.segmentID].total - OTNTRefData[props.segmentID].allusions - OTNTRefData[props.segmentID].quotes)],\n        backgroundColor: [\n          'rgb(209, 0, 209)',\n          'rgb(255, 238, 4)',\n          'lightgrey',\n          ],\n        hoverBackgroundColor: [\n          'purple',\n          'rgb(184, 171, 0)',\n          'grey'\n          ]\n      }]\n    }\n  }\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 0,\n        bottom: 50\n      }\n    },\n    legend: {\n      position: 'top',\n      labels: {\n        fontSize: 9,\n        boxWidth: 40\n      }\n      // display: false\n    },\n  }\n\n  // ---------------------- //\n  // BOOK BAR CHART DATA\n  // ---------------------- //\n\n\n  const bibleBookOrder = Object.keys(bibleBookList)\n\n  const BookBarChartOptions = {\n    scales: {\n      xAxes: [{ stacked: true }],\n      yAxes: [{ stacked: true }],\n    },\n    maintainAspectRatio: false,\n    legend: {\n      position: 'right',\n      labels: {\n        fontSize: 9,\n        boxWidth: 20\n      },\n      display: false\n    },\n  };\n\n  const getNumOfVerses = (ref) => {\n    const verseRef = ref.split(':')[1]\n    let numOfVerses = 1\n    if (verseRef.search('-') !== -1) {\n      const startingVerse = parseInt(verseRef.split('-')[0])\n      const endingVerse = parseInt(verseRef.split('-')[1])\n      numOfVerses = endingVerse - startingVerse + 1;\n    }\n    return numOfVerses\n  }\n\n  const segmentRefData = SegmentQueries.filter(seg => seg.segment === props.segmentID)[0]\n\n  const isRefInSegment = (book, chapter, verse) => {\n    const newQueryObj = {\n      starting_book: segmentRefData.starting_book,\n      starting_chapter: parseInt(segmentRefData.starting_chapter),\n      starting_verse: parseInt(segmentRefData.starting_verse),\n      ending_book: segmentRefData.ending_book,\n      ending_chapter: parseInt(segmentRefData.ending_chapter),\n      ending_verse: parseInt(segmentRefData.ending_verse)\n    }\n\n    if (newQueryObj.starting_book !== newQueryObj.ending_book) {\n      // deal with crossover segments\n      console.log('must deal with crossover segments')\n    }\n\n    if (book === segmentRefData.starting_book) {\n      const numOfChapters = newQueryObj.ending_chapter - newQueryObj.starting_chapter + 1;\n      const isOneChapter = (newQueryObj.starting_chapter === newQueryObj.ending_chapter) ? true : false;\n      \n      // if there's more than one chapter\n      if (numOfChapters > 1) {\n        // if it's in the first chapter\n        if (chapter === newQueryObj.starting_chapter) {\n          // if the verse is or is after the first segment verse\n          if (verse >= newQueryObj.starting_verse) {\n            return true\n          } else {\n            return false\n          }\n        } \n\n        // if it's in a middle chapter\n        else if (chapter > newQueryObj.starting_chapter && chapter < newQueryObj.ending_chapter) {\n          return true\n        } \n\n        // if it's in the last chapter\n        else if (chapter === newQueryObj.ending_chapter) {\n          // if the verse is or is after the first segment verse\n          if (verse <= newQueryObj.ending_verse) {\n            return true\n          } else {\n            return false\n          }\n        }\n      }\n      // if there's only one chapter\n      else if (isOneChapter) {\n        if (chapter === newQueryObj.starting_chapter && chapter === newQueryObj.ending_chapter) {\n          // if the verse is within the segment verses\n          if (verse >= newQueryObj.starting_verse && verse <= newQueryObj.ending_verse) {\n            return true\n          } else {\n            return false\n          }\n        } else {\n          return false\n        }\n      }\n    } else {\n      return false\n    }\n  }\n\n  const getRefsWithinSegment = () => {\n    const allRefsInSegment = Object.values(LukData).filter(ref => {\n      const splitRef = ref.ref.split(' ')\n      const book = splitRef[0]\n      const chapVerseSplit = splitRef[1].split(':')\n      const chapter = parseInt(chapVerseSplit[0])\n      const verse = parseInt(chapVerseSplit[1].split('-')[0])\n      return isRefInSegment(book, chapter, verse)\n    //   if (isRefInSegment(book, chapter, verse), book, chapter, verse) {\n    //     return true\n    //   }\n    })\n    return allRefsInSegment\n  }\n\n  const createBookBarDataObj = () => {\n\n    // Compile Bar Data from JSON\n\n    const verses = getRefsWithinSegment().map(ref => ref.ref);\n    let barData = {}\n    verses.forEach(ref => {\n      const quotes = (LukData[ref].quotes !== undefined) ? Array.from(LukData[ref].quotes) : null\n      const allusions = (LukData[ref].allusions) ? LukData[ref].allusions : null\n      if (quotes) {\n        quotes.forEach(quoteRef => {\n          const numOfVerses = getNumOfVerses(quoteRef)\n          const bookRef = quoteRef.substring(0,3)\n          if (!barData[bookRef]) {\n            barData[bookRef] = {}\n            barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n          } else {\n            barData[bookRef].quotes = (typeof barData[bookRef].quotes === 'undefined') ? numOfVerses : barData[bookRef].quotes + numOfVerses\n          }\n        })\n      }\n      if (allusions) {\n        allusions.forEach(allusionRef => {\n          const numOfVerses = getNumOfVerses(allusionRef)\n          const bookRef = allusionRef.substring(0,3)\n          if (!barData[bookRef]) {\n            barData[bookRef] = {\n              allusions: numOfVerses\n            }\n          } else {\n            barData[bookRef].allusions += numOfVerses\n          }\n        })\n      }\n    })\n\n    // distribute Bar Data from JSON\n    let books = Object.keys(barData);\n    books.sort(function(a, b) {\n      return bibleBookOrder.indexOf(a) - bibleBookOrder.indexOf(b);\n    });\n\n    const bookData = {\n      labels: [],\n      quotes: [],\n      allusions: []\n    }\n    books.forEach(book => {\n      bookData.labels.push(book)\n      bookData.quotes.push((barData[book].quotes) ? barData[book].quotes : 0)\n      bookData.allusions.push((barData[book].allusions) ? barData[book].allusions : 0)\n\n    })\n\n    return {\n      labels: bookData.labels,\n      datasets: [\n        {\n          label: 'Quotations',\n          data: bookData.quotes,\n          backgroundColor: 'rgb(209, 0, 209)',\n          borderColor: 'purple',\n          borderWidth: 1,\n          hoverBackgroundColor: 'purple',\n          hoverBorderColor: 'purple',\n        },\n        {\n          label: 'Allusions',\n          data: bookData.allusions,\n          backgroundColor: 'rgb(255, 238, 4)',\n          borderColor: 'rgb(184, 171, 0)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgb(184, 171, 0)',\n          hoverBorderColor: 'rgb(184, 171, 0)',\n        }\n      ],\n    };\n  }\n\n  return (\n    <div className={classes.root}>\n      <p className={classes.introSubtitle}>Old and New Testament Relationships</p>\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title={(props.testament === 'NT') ? 'Quotations and Allusions From This Segment' : `Quotations and Allusions Used in This Segment`} disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.piechart}`}>\n            <div className={classes.chartholder}>\n              <Doughnut \n                data={createPieChartData(props.pieData)} \n                options={chartOptions} \n                height={null}\n                width={null}\n              />\n            </div>\n          </CardContent>\n        </Card>\n        {/* <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card} ${classes.segmentBarChart}`}>\n          <CardHeader title=\"Quotations, Allusions and Remainder (verses)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.segChart}`}>\n            <div className={classes.chartholder}>\n              <HorizontalBar\n                data={createSegmentBarDataObj()}\n                width={40}\n                height={35}\n                options={SegmentBarChartOptions}\n              />\n            </div>\n          </CardContent>\n        </Card> */}\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.segmentBarChart}`}>\n          <CardHeader title=\"Books with Quotations and Allusions\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.bookChart}`}>\n            <div className={classes.chartholder}>\n              <HorizontalBar\n                data={createBookBarDataObj()}\n                width={40}\n                height={60}\n                options={BookBarChartOptions}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default OTNTData;","import React, { useEffect, useContext, useState } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport ReadTogether from '../images/SVB-Read-together.png'\nimport DiscussTogether from '../images/SVB-Discuss-together.png'\nimport SegmentTitles from '../data/SegmentTitles.json'\nimport QuestionsRefs from '../data/QuestionsRefs.json'\nimport QuestionsData from '../data/QuestionsData(Eng).json'\nimport Button from '@material-ui/core/Button';\nimport VerbViewDialog from '../components/Dialogs/VerbViewDialog'\nimport OTNTData from '../components/SegmentData/OTNTData'\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  paper: {\n      background: '#3A4C7D',\n      width: '75vw'\n  },\n  segmentDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingTop: '5px'\n  },\n  title: {\n    fontSize: '150%',\n    fontWeight: ' bold',\n    textDecoration: 'underline',\n    width: '100%',\n    margin: 0,\n    textAlign: 'center'\n  },\n  reference: {\n    margin: 0,\n    fontSize: '60%',\n    color: 'grey'\n  },\n  discuss: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n    borderTop: '0.25px lightgrey solid',\n  },\n  footer: {\n    textAlign: 'center',\n    fontSize: '60%',\n    margin: '10px 0 30px 0',\n    '& p': {\n      margin: 0\n    }\n  },\n  images: {\n    width: '200px',\n    margin: '10px auto',\n  },\n  readImage: {\n    marginBottom: '20px',\n    borderBottom: '0.25px lightgrey solid',\n  },\n  content: {\n    margin: '0 0 10px 0',\n    padding: '0 0 10px 0'\n  },\n  questions: {\n    textAlign: 'left',\n    margin: '30px 0',\n    '& p': {\n      margin: '10px 0',\n    }\n  },\n  imgCaption: {\n    color: 'grey',\n    fontSize: '70%',\n    margin: '-20px 0 0 0',\n    textAlign: 'center'\n  },\n  groupIcons: {\n    opacity: 0.60\n  },\n  furtherDiscovery: {\n    textAlign: 'center',\n    margin: '10px'\n  }\n}))\n\n\nexport default ({pageContext: {segment, book, segmentID}}) => {\n  const classes = useStyles();\n  const receivedAppContext = useContext(AppContext);\n\n  // This controls the popup for the word information\n  const [ verbDialog, updateVerbDialog ] = useState({open: false, content: {}})\n  const newVerbDialog = (obj) => {\n    console.log(obj)\n    updateVerbDialog(obj)\n  }\n\n  // figure out solution for introductions without QRefs \n  const [ questionRef, updateQuestionRef ] = useState((segmentID[0] === 'S') ? QuestionsRefs[segmentID].QRef1 : '')\n  // const NTBooks = [\"Tit\", \"Rev\", \"Jam\", \"3Jn\", \"Heb\", \"2Co\", \"Luk\", \"Mat\", \"2Ti\", \"2Th\", \"1Pe\", \"Gal\", \"2Pe\", \"Joh\", \"Php\", \"1Ti\", \"Phm\", \"Mar\", \"Eph\", \"Act\", \"1Co\", \"Col\", \"Jud\", \"Rom\", \"1Jn\", \"2Jn\", \"1Th\"]\n  // const isNT = (NTBooks.indexOf(book) !== -1) ? true : false\n  \n  function changeQuestions () {\n    if (questionRef === QuestionsRefs[segmentID].QRef1) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef2)\n    } else if (questionRef === QuestionsRefs[segmentID].QRef2) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef3)\n    } else if (questionRef === QuestionsRefs[segmentID].QRef3) {\n      updateQuestionRef(QuestionsRefs[segmentID].QRef1)\n    }\n  }\n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <p className={classes.title}>{SegmentTitles[segmentID].title}</p>\n      </div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(segmentID[0] === 'S') ? (\n        <div>\n          <div className={classes.segmentDataContainer}>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          <div className={`${classes.images} ${classes.readImage}`}>\n            <img src={ReadTogether} className={classes.groupIcons} alt=\"Read Together\" />\n            <p className={classes.imgCaption}>Each person reads a color aloud</p>\n          </div>\n          <div className={classes.content}>\n            {segment.content.map(block => {\n              if (block.data.color === 'black') {\n                return (<Narrator \n                  sourceData={block.data}\n                  inlines={block.nodes}\n                  verbViewDialog={newVerbDialog} />\n                  )\n              } else {\n                return (<SpeechBubble \n                  sourceData={block.data}\n                  inlines={block.nodes}\n                  verbViewDialog={newVerbDialog} />\n                  )\n              }\n            })}\n          </div>\n          {(verbDialog.open === true) ? (\n              <VerbViewDialog verbDialog={verbDialog} newVerbDialog={newVerbDialog} /> \n          ) : null}\n          <div className={classes.discuss}>\n            <div className={classes.images}>\n              <img src={DiscussTogether} alt=\"Discuss Together\" />\n              <p className={classes.imgCaption}>Discuss the questions with others</p>\n            </div>\n            <p className={classes.title}>{QuestionsData[questionRef].title}</p>\n            <div className={classes.questions}>\n              <p>{QuestionsData[questionRef].Q1}</p>\n              <p>{QuestionsData[questionRef].Q2}</p>\n              <p>{QuestionsData[questionRef].Q3}</p>\n              <p>{QuestionsData[questionRef].Q4}</p>\n            </div>\n            <Button color='secondary' variant=\"contained\" onClick={() => changeQuestions()}>Change Questions</Button>\n          </div>\n          <Divider />\n          <div className={classes.furtherDiscovery}>\n            <Typography variant=\"h4\">Further Discovery</Typography>\n            <OTNTData segmentID={segmentID}/>\n          </div>\n          <div className={classes.footer}>\n            <p>Copyright info of version</p>\n            <p>© {currentYear} SourceView LLC.</p>\n          </div>\n        </div>\n    ) : (\n        <Introduction \n          content={segment.content.document.nodes} \n          segmentID={segmentID}\n          book={book}\n        />\n      )}\n    </div>\n  )}","module.exports = __webpack_public_path__ + \"static/Foundational-b52df7354ececc9f918dc19b5085f0ac.png\";","module.exports = __webpack_public_path__ + \"static/Celebration-2c9ec1357f30421505bee054e0e82eeb.png\";","module.exports = __webpack_public_path__ + \"static/Communications-0bf260c2a8a26669d65be3987c7869c9.png\";","module.exports = __webpack_public_path__ + \"static/Economics-19650faf9e095f37bb714b06ed1142a3.png\";","module.exports = __webpack_public_path__ + \"static/Education-f8fc9f170534746838fd44f56d07182f.png\";","module.exports = __webpack_public_path__ + \"static/Family-1e9e99a1b1f8bea9c877685d76763247.png\";","module.exports = __webpack_public_path__ + \"static/Government-d2f7040273a32db2b509da594f423b6f.png\";","module.exports = __webpack_public_path__ + \"static/Religion-ec14c054570f8236824435380d78b2be.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Read-together-c3869d4d71bf839bdd9a7b8be1078625.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Discuss-together-ea87a32e2fe039e84980badd5ee97a5a.png\";","module.exports = __webpack_public_path__ + \"static/VerbViewLogo-5a8e4e8b2ba5866885e9c2179c015d41.png\";","var map = {\n\t\"./H067.json\": 510,\n\t\"./H619.json\": 511\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 509;"],"sourceRoot":""}