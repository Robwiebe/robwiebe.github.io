{"version":3,"sources":["webpack:///./src/components/SourceViewInfo/SourceViewInfo.js","webpack:///./src/components/SourceName/SourceName.js","webpack:///./src/components/Leaf/Leaf.js","webpack:///./src/components/WordDataTable/WordDataTable.js","webpack:///./src/components/VerbView/VerbView.js","webpack:///./src/components/Leaf/InterlinearLeaf.js","webpack:///./src/components/Inlines/Inlines.js","webpack:///./src/components/SpeechBubble/SpeechBubble.js","webpack:///./src/components/Introduction/Paragraph/Paragraph.js","webpack:///./src/components/Introduction/BulletedList/BulletedList.js","webpack:///./src/components/Introduction/Subtitle/Subtitle.js","webpack:///./src/components/Introduction/IntroData/IntroData.js","webpack:///./src/components/Introduction/Introduction.js","webpack:///./src/components/NarratorText/NarratorText.js","webpack:///./src/components/SegmentData/SegmentData.js","webpack:///./src/templates/ChapterPage.js","webpack:///./src/images/Foundational.png","webpack:///./src/images/Celebration.png","webpack:///./src/images/Communications.png","webpack:///./src/images/Economics.png","webpack:///./src/images/Education.png","webpack:///./src/images/Family.png","webpack:///./src/images/Government.png","webpack:///./src/images/Religion.png","webpack:///./src/images/SVB-Read-together.png","webpack:///./src/images/SVB-Discuss-together.png"],"names":["SourceViewInfo","props","SVBData","content","color","recipList","unique_recipients","map","recip","react_default","a","createElement","className","styles","SVBInfoTable","row","leftCell","style","fontSize","middleCell","rightCell","cellTitle","source","length","recipient","time_period","narrator","sourceName","unique_sources","SourceName","_useState","useState","open","sourceDialog","updateSourceDialog","newSourceDialog","obj","onClick","data","Dialog","maxWidth","onClose","DialogTitle","DialogContent","dividers","components_SourceViewInfo_SourceViewInfo","highlightColors","CEL","COM","ECO","EDU","FAM","GOV","REL","useStyles","makeStyles","theme","typography","padding","spacing","paper","background","width","logo","height","marginRight","flex","leaf","whiteSpace","chapter","fontWeight","verse","verticalAlign","position","top","backgroundColor","dialogRef","textAlign","marginBottom","dialogHeader","display","justifyContent","Leaf","receivedAppContext","useContext","AppContext","anchorEl","setAnchorEl","classes","_useState2","dialog","updateDialog","newDialog","console","log","keyPassage","marks","find","mark","type","undefined","sphere","id","substring","keyPassageNum","doubleHighlight","parseInt","footnote","bibleRef","classNames","push","styledClasses","c","indexOf","highlight","KeyPassages","spheres","handleClick","event","currentTarget","handleClickAway","Boolean","boxShadow","book","displayRef","text","onMouseOver","onMouseLeave","Popper","transition","placement","_ref","TransitionProps","ClickAwayListener","onClickAway","Fade","Object","assign","timeout","Paper","Typography","SPH","src","Foundational","Celebration","Communication","Economics","Education","Family","Government","Religion","getSphereLogo","mainSphere","title","questions","Q1","Q2","Q3","Q4","Table","displayedData","language","IT","lexeme","transSBL","GoodrickKohlenbergerNumbers","LouwNidaNumbers","ETCBCgloss","HebrewLexeme","SBLstyleTransliteration","Heb_ref","book_id","chapter_id","verse_id","KJV_ref","morphologyDetail","dialogTable","VerbView","bookData","labels","datasets","label","HBarHeight","verbView","es","hoverBackgroundColor","options","legend","maintainAspectRatio","closeButton","right","palette","grey","definition","InterlinearLeaf","join","interlinearLeaf","word_metadata","newLine","search","text1","text2","dictionary","version","require","Fragment","key","word_ID","whitespace","interlinearinterlinear","interlinearStrongs","StrongNumber","interlinearTranslation","extendedStrongNumber","strongs_def","WordDataTable","components_VerbView_VerbView","lineBreak","interlinearLeafGreek","interlinearLeafHebrew","Inlines","prose","leaves","interlinear","Leaf_InterlinearLeaf","components_Leaf_Leaf","poetry","SpeechBubble","hebrew","components_SourceName_SourceName","sourceData","speechbubblehebrew","inlines","inline","components_Inlines_Inlines","nodes","speechbubble","Paragraph","ListItem","listItem","BulletedList","listStyle","item","BulletedList_ListItem","Subtitle","main","flexWrap","maxHeight","card","margin","leftCard","top5","cardTitle","textDecoration","top5List","cardContent","lineHeight","red","green","blue","topSources","topWords","colorComparison","chartOptions","responsive","layout","left","bottom","boxWidth","SegmentData","Card","CardHeader","testament","disableTypography","CardContent","chart","pieData","percentage_labels","percentage_values","Introduction","block","Introduction_Paragraph_Paragraph","Introduction_Subtitle_Subtitle","Introduction_BulletedList_BulletedList","IntroData","pieChart","NarratorText","createColorData","keys","pop","values","Math","round","total","colors","sourcesArray","val","words","sort","b","top5Sources","count","forEach","name","getTopSources","sources","repeatedWords","segmentDataContainer","header","paddingTop","reference","discuss","borderTop","footer","& p","images","readImage","borderBottom","imgCaption","__webpack_exports__","_ref$pageContext","pageContext","segment","isNT","useEffect","window","searchID","scrollToElement","offset","ease","duration","updateSearchID","currentYear","Date","getFullYear","Array","isArray","components_SegmentData_SegmentData","ReadTogether","alt","components_NarratorText_NarratorText","components_SpeechBubble_SpeechBubble","DiscussTogether","components_Introduction_Introduction","document","module","exports","__webpack_require__","p"],"mappings":"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","file":"component---src-templates-chapter-page-js-7fe942637722b8f23db8.js","sourcesContent":["import React from 'react'\nimport styles from './SourceViewInfo.module.css'\n\nconst SourceViewInfo = (props) => {\n    const SVBData = props.content\n    const color = () => {\n        switch (SVBData.color) {\n            case 'blue':\n                return 'darkblue'\n            case 'green':\n                return '#006400'\n            case 'red':\n                return '#d60000'\n            case 'black':\n                return 'black'\n            default:\n                return 'black'\n        } \n    }\n\n    if (SVBData.color !== 'black') {\n        let recipList = ``\n        SVBData.unique_recipients.map(recip => {\n            recipList = (recipList !== '') ? recipList + `, ${recip}` : recipList + `${recip}`\n        })\n        return (\n            <div>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><i className={`pi pi-user`} style={{'fontSize': '3em'}}></i></td>\n                            <td className={styles.middleCell}><i className={`pi pi-arrow-circle-right`} style={{'fontSize': '3em', 'color': color()}}></i></td>\n                            <td className={styles.rightCell}><i className={`pi pi-users`} style={{'fontSize': '3em'}}></i></td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}><span className={styles.cellTitle}>SOURCE(S)</span><br />{SVBData.source}</td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}><span className={styles.cellTitle}>RECIPIENT(S)</span><br />{(SVBData.unique_recipients.length === 1) ? SVBData.recipient : recipList}</td>\n                        </tr>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    } else {\n        return (<div className={styles.narrator}>\n                <i className={`pi pi-user`} style={{'fontSize': '3em'}}></i>\n                <p className={styles.cellTitle}>SOURCE</p>\n                <p className={styles.sourceName}>{`${SVBData.source} (${SVBData.unique_sources[0]})`}</p>\n                <table className={styles.SVBInfoTable}>\n                    <tbody>\n                        <tr className={styles.row}>\n                            <td className={styles.leftCell}>Historical Time Period: </td>\n                            <td className={styles.middleCell}></td>\n                            <td className={styles.rightCell}>{SVBData.time_period[0]}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SourceViewInfo;","import React, { useContext, useState } from 'react'\nimport styles from './SourceName.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport SourceViewInfo from '../SourceViewInfo/SourceViewInfo'\n\nconst SourceName = (props) => {\n    // const receivedAppContext = useContext(AppContext)\n    \n    // This controls the popup for the source information\n    const [ sourceDialog, updateSourceDialog ] = useState({open: false, content: {}})\n    const newSourceDialog = (obj) => {\n        updateSourceDialog(obj)\n    }\n    return (\n    <p className={styles.sourceName}\n    onClick={() => newSourceDialog({open: !sourceDialog.open, content: props.data})}\n    >\n        {props.sourceName}\n        {(sourceDialog.open === true) ? (\n            <Dialog \n                maxWidth='lg'\n                open={sourceDialog.open}\n                onClose={() => newSourceDialog({open: false, content: {}})}>\n                    <DialogTitle>SourceView Info</DialogTitle>\n                    <DialogContent dividers>\n                    <SourceViewInfo content={sourceDialog.content}/>  \n                    </DialogContent>\n            </Dialog> \n        ) : null}\n    </p>\n)}\n\nexport default SourceName;","import React, { useContext, useState } from 'react'\nimport KeyPassages from './../../data/KeyPassages.json'\nimport styles from './Leaf.module.css'\nimport AppContext from '../../contextAPI/AppContext'\nimport Popper from '@material-ui/core/Popper';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Foundational from './../../images/Foundational.png'\nimport Celebration from './../../images/Celebration.png'\nimport Communication from './../../images/Communications.png'\nimport Economics from './../../images/Economics.png'\nimport Education from './../../images/Education.png'\nimport Family from './../../images/Family.png'\nimport Government from './../../images/Government.png'\nimport Religion from './../../images/Religion.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst highlightColors = {\n    CEL: '#f9d7fb',\n    COM: '#eed7fb',\n    ECO: '#fbe9d7',\n    EDU: '#d7fbf8',\n    FAM: '#fbcaca',\n    GOV: '#fafbca',\n    REL: '#d8fbca',\n}\nconst useStyles = makeStyles(theme => ({\n    typography: {\n      padding: theme.spacing(2),\n      fontSize: 'small',\n      color: 'white'\n    },\n    paper: {\n        background: '#3A4C7D',\n        width: 'fit-content',\n        maxWidth: '60vw'\n    },\n    logo: {\n        height: '30px',\n        width: '30px',\n        marginRight: '20px',\n        flex: '0 0 30px'\n    },\n    leaf: {\n        whiteSpace: 'pre-wrap',\n        height: '25px',\n    },\n    chapter: {\n        fontWeight: 'bold'\n    },\n    verse: {\n        verticalAlign: 'top',\n        position: 'relative',\n        top: '-0.3em',\n        fontSize: '60%',\n        backgroundColor: 'transparent'\n    },\n    dialogRef: {\n        color: 'grey',\n        fontSize: '80%',\n        textAlign: \"center\",\n        marginBottom: '-15px'\n    },\n    dialogHeader: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginBottom: '-10px'\n    }\n  }));\n\nconst Leaf = (props) => {\n    // This controls the visibility of chapter and verse references\n    const receivedAppContext = useContext(AppContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        console.log('dialog opening or closing: ', dialog)\n        updateDialog(obj)\n    }\n\n    // Create CSS styles from marks\n    const keyPassage = (props.marks) ? props.marks.find(mark => mark.type === 'keyPassage') : undefined\n    console.log(keyPassage)\n    const sphere = (keyPassage) ? keyPassage.data.id.substring(0.3) : null\n    const keyPassageNum = (keyPassage) ? keyPassage.data.id.substring(4,6) : null\n    const doubleHighlight = parseInt(keyPassageNum) > 46\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const footnote = (props.marks) ? props.marks.find(mark => mark.type === 'footnote') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n    let classNames = []\n    if (verse !== undefined) {\n        classNames.push(classes.verse)\n    }\n    if (chapter !== undefined) {\n        classNames.push(classes.chapter)\n    }\n\n    let styledClasses = ''\n\n    classNames.map(c => {\n        if (classNames.indexOf(c) === 0) {\n            styledClasses = `${c}`\n        } else {\n            styledClasses = styledClasses + `, ${c}`\n        }\n    })\n\n    let highlight = ''\n    if (keyPassage && doubleHighlight) {\n        highlight = `repeating-linear-gradient(${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]}, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]} 49.9%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 50.1%, ${highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]} 100%)`\n    } else if (keyPassage && !doubleHighlight) {\n        highlight = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else {\n        highlight = ''\n    }\n\n    let backgroundColor = '' \n    if (keyPassage && !doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[0]]\n    } else if (keyPassage && doubleHighlight) {\n        backgroundColor = highlightColors[KeyPassages[keyPassage.data.id].spheres[1]]\n    } else {\n        backgroundColor = ''\n    }\n\n    function getSphereLogo(SPH) {\n        const sphere = SPH.substring(0,3)\n        switch (sphere) {\n            case 'FOU':\n                return <img src={Foundational} className={classes.logo} />\n            case 'CEL':\n                return <img src={Celebration} className={classes.logo} />\n            case 'COM':\n                return <img src={Communication} className={classes.logo} />\n            case 'ECO':\n                return <img src={Economics} className={classes.logo} />\n            case 'EDU':\n                return <img src={Education} className={classes.logo} />\n            case 'FAM':\n                return <img src={Family} className={classes.logo} />\n            case 'GOV':\n                return <img src={Government} className={classes.logo} />\n            case 'REL':\n                return <img src={Religion} className={classes.logo} />\n        }\n    }\n    \n    function handleClick(event) {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n      }\n    \n    function handleClickAway() {\n        setAnchorEl(null)\n    }\n\n    const open = Boolean(anchorEl);\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return (\n            <span style={{\n                background: highlight,\n                boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n                whiteSpace: 'pre-wrap',\n                height: '25px',\n            }}\n            onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n            >\n            <span \n                id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`}\n                className={styledClasses} \n                style={{\n                    display: (receivedAppContext.displayRef) ? '' : 'none',\n                    background: highlight,\n                    boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : ''\n                }}\n                >\n                    {props.text}{(chapter)?'':'\\u00A0'}\n                </span></span>)\n    }\n    // If not a verse, don't create a reference\n     else {\n        return (<span style={{\n            background: highlight,\n            boxShadow: (backgroundColor) ? `0px 1px 0px 0px ${backgroundColor}` : '',\n            whiteSpace: 'pre-wrap',\n            height: '25px',\n        }}\n        onClick={() => newDialog({ open: !dialog.open, content: KeyPassages[keyPassage.data.id] })}\n        >\n            {footnote ? (\n                <span className={styledClasses} onClick={handleClick} onMouseOver={handleClick} onMouseLeave={handleClick}>\n                    {props.text}\n                    <Popper id=\"footnote\" open={open} anchorEl={anchorEl} transition placement=\"top\">\n                        {({ TransitionProps }) => (\n                            <ClickAwayListener onClickAway={handleClickAway}>\n                                <Fade {...TransitionProps} timeout={350}>\n                                    <Paper className={classes.paper}>\n                                    <Typography className={classes.typography}>{footnote.data.footnote}</Typography>\n                                    </Paper>\n                                </Fade>\n                            </ClickAwayListener>\n                        )}\n                    </Popper>\n                </span>\n            ) : <span className={styledClasses}>{props.text}</span>}\n            {(dialog.open === true) ? (\n                <Dialog \n                maxWidth='lg'\n                    open={dialog.open} \n                    onClose={() => newDialog({open: false, content: {}})}>\n                    <DialogTitle>\n                        <div className={classes.dialogHeader}>\n                            {getSphereLogo(sphere)}\n                            <p className={classes.dialogRef}>{dialog.content.mainSphere} #{keyPassage.data.id.substring(4,6)}</p>\n                        </div>\n                        {dialog.content.title}\n                    </DialogTitle>\n                    <DialogContent dividers>\n                        <p>Let's Think About This:</p>\n                        <ul>\n                            <li>{dialog.content.questions.Q1}</li>\n                            <li>{dialog.content.questions.Q2}</li>\n                            <li>{dialog.content.questions.Q3}</li>\n                            <li>{dialog.content.questions.Q4}</li>\n                        </ul>\n                    </DialogContent>\n                </Dialog> \n            ) : null}\n        </span>\n        )\n     }\n     \n    }\n\nexport default Leaf;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './WordDataTable.module.css'\n\nconst Table = (props) => {\n        const receivedAppContext = useContext(AppContext)\n        const displayedData = (receivedAppContext.language === 'GRK') ? [\n                ['Gloss', props.content.IT],\n                ['Lemma', props.content.lexeme],\n                ['SBL Transliteration', props.content.transSBL],\n                ['GK #', props.content.GoodrickKohlenbergerNumbers],\n                ['LouwNida #', props.content.LouwNidaNumbers]\n         ] : [\n                ['Gloss', props.content.ETCBCgloss],\n                ['Lemma', props.content.HebrewLexeme],\n                ['SBL Transliteration', props.content.SBLstyleTransliteration],\n                ['Hebrew Reference', `${props.content.Heb_ref.book_id} ${props.content.Heb_ref.chapter_id}:${props.content.Heb_ref.verse_id}`],\n                ['KJV Reference', `${props.content.KJV_ref.book_id} ${props.content.KJV_ref.chapter_id}:${props.content.KJV_ref.verse_id}`],\n                ['Morph Details', props.content.morphologyDetail]\n         ]\n        return (\n        <table className={styles.dialogTable}><tbody>\n                {displayedData.map(row => (<tr className={styles.row}><td className={styles.leftCell}>{row[0]}</td><td className={styles.rightCell}>{(typeof row[1] === \"object\")?`${row[1].book_id} ${row[1].chapter_id}:${row[1].verse_id}`:row[1]}</td></tr>))}\n                </tbody>\n        </table>\n        )\n}\n\nexport default Table;","import React, { useContext } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './VerbView.module.css'\n// import {Chart} from 'primereact/chart';\nimport { Doughnut } from 'react-chartjs-2';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst VerbView = () => {\n    const receivedAppContext = useContext(AppContext)\n\n    // -------DOUGHNUT CHART------- //\n    const occurrenceData = {\n        labels: ['God (6)','Others (22)'],\n        datasets: [\n        {\n            data: [6, 22],\n            backgroundColor: [\n                \"#FF6384\",\n                \"#36A2EB\"\n            ],\n            hoverBackgroundColor: [\n                \"#FF6384\",\n                \"#36A2EB\"\n            ]\n        }]    \n    };\n    const options = {\n        title: {\n            display: true,\n            text: 'OT Verb H311 מנא – mana’',\n            fontSize: 16\n        },\n        legend: {\n            position: 'top'\n        }\n    }\n    \n    // -------BAR CHART------- //\n    const bookData = {\n        labels: ['Gen', 'Num', '2Sa', '1Ki', '2Ki', '1Ch', '2Ch', 'Job', 'Psa', 'Ecc', 'Isa', 'Jer', 'Dan', 'Jon'],\n        datasets: [\n            {\n                label: 'God',\n                backgroundColor: '#42A5F5',\n                data: [0,0,0,0,0,0,0,0,2,0,2,0,0,4]\n            },\n            {\n                label: 'Others',\n                backgroundColor: '#9CCC65',\n                data: [2,1,1,3,1,4,1,1,1,1,0,1,6,0]\n            }\n        ]    \n    };\n\n    const HBarHeight = bookData.labels.length * 3\n\n    const bookDataOptions = {\n        title: {\n            display: true,\n            text: 'Occurrences in books',\n            fontSize: 16\n        },\n        legend: {\n            position: 'bottom'\n        },\n        maintainAspectRatio: false\n    }\n    return (\n    <div className={styles.verbView}>\n        <hr />\n        <p className={styles.title}>VerbView</p>\n        <Doughnut \n            data={occurrenceData} \n            options={options} \n        />\n        <hr />\n        <HorizontalBar \n            data={bookData}  \n            width={50}\n            height={HBarHeight}\n            options={bookDataOptions}\n        />\n    </div>\n    )\n}\n\nexport default VerbView;","import React, { useContext, useState } from 'react'\nimport AppContext from '../../contextAPI/AppContext'\nimport styles from './InterlinearLeaf.module.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport WordDataTable from '../WordDataTable/WordDataTable'\nimport VerbView from '../VerbView/VerbView'\nimport theme from '../../theme'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n    dialog: {\n      width: '75vw',\n      height: '75vh'\n    },\n    definition: {\n      fontWeight: 'bold'\n    }\n  });\n\nconst InterlinearLeaf = (props) => {\n    const classes = useStyles();\n    const receivedAppContext = useContext(AppContext);\n    \n    // This controls the popup for the word information\n    const [ dialog, updateDialog ] = useState({open: false, content: {}})\n    const newDialog = (obj) => {\n        console.log('dialog opening or closing: ', dialog)\n        updateDialog(obj)\n    }\n\n    // Check if the leaf is a chapter or verse\n    const chapter = (props.marks) ? props.marks.find(mark => mark.type === 'chapter') : undefined\n    const verse = (props.marks) ? props.marks.find(mark => mark.type === 'verse') : undefined\n    const bibleRef = (verse || chapter) ? props.marks.find(mark => mark.type === 'reference') : undefined\n\n    //ClassNames Array\n    const classNames = (verse !== undefined || chapter !== undefined) ? \n        [\n            (chapter) ? styles.chapter : null, \n            (verse) ? styles.verse : null\n        ]\n        .join(' ') : styles.interlinearLeaf\n    \n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (verse || chapter) {\n        return <span id={`${bibleRef.data.book}-${bibleRef.data.chapter}-${bibleRef.data.verse}`} className={(classNames !== null) ? classNames : ''}  style={{display: (receivedAppContext.displayRef) ? '' : 'none'}}>{props.text}{(chapter)?'':'\\u00A0'}</span>\n    }\n    \n    // Get Original Language Word Data\n    const word_metadata = (props.marks) ? props.marks.find(mark => mark.type === 'word_metadata') : undefined\n\n    // If it's just a chapter/verse reference then return that leaf with a reference\n    if (!word_metadata) {\n        return <span className={(classNames !== null) ? classNames : ''}>{props.text}</span>\n    }\n\n    // Check for paragraph breaks in the text string\n    let newLine = props.text.search('\\n')\n    // If there's a paragraph break, split the text string into two parts: text1 = word, text2 = paragraph break + white space (if any)\n    const text1 = (newLine !== -1)? props.text.substring(0,newLine): null\n    const text2 = (newLine !== -1)? props.text.substring(newLine) : null\n\n    const dictionary = (receivedAppContext.version === 'GNA') ? require('../../data/strongsGreekDictionary.json') : (receivedAppContext.version === 'WLC') ? require('../../data/strongsHebrewDictionary.json') : null\n\n    if (newLine > -1) {\n        return (\n            <React.Fragment>\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={styles.whitespace} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text1}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(!word_metadata.data.StrongNumber) ? '-' : word_metadata.data.StrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                </span>\n                {(dialog.open === true) ? (\n                    <Dialog \n                    maxWidth='lg'\n                        open={dialog.open} \n                        onClose={() => newDialog({open: false, content: {}})}>\n                        <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? dialog.content.StrongNumber : dialog.content.extendedStrongNumber}`}</DialogTitle>\n                        <DialogContent dividers>\n                            <p className={classes.definition}>{`DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                            <WordDataTable />\n                            {(dialog.content.StrongNumber === 'H4487') ? (<VerbView />) : null}\n                        </DialogContent>\n                    </Dialog> \n                ) : null}\n                    {(!text2)?(<div className={styles.lineBreak}/>):(\n                    <React.Fragment>\n                        <div className={styles.lineBreak}/>\n                        <span key={word_metadata.data.word_ID} className={styles.whitespace}>\n                            <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{text2}</span>\n                            {/* <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>TEST</span>\n                            <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>TEST</span> */}\n                        </span>\n                    </React.Fragment>)}\n            </React.Fragment>\n        )\n    } else {\n        return (\n                <span \n                    key={word_metadata.data.word_ID} \n                    className={(receivedAppContext.language === 'GRK') ? styles.interlinearLeafGreek : styles.interlinearLeafHebrew} \n                    onClick={() => newDialog({open: !dialog.open, content: Object.assign(word_metadata.data, {text: props.text})})}\n                    style={(word_metadata.data.StrongNumber === 'H4487') ? {backgroundColor: 'yellow'} : null}\n                >\n                    <span key={word_metadata.data.word_ID + 'text'} className={styles.interlinearinterlinear}>{props.text}</span>\n                    <span key={word_metadata.data.word_ID + 'strong'} className={styles.interlinearStrongs}>{(word_metadata.data.StrongNumber !== '') ? word_metadata.data.StrongNumber : word_metadata.data.extendedStrongNumber}</span>\n                    <span key={word_metadata.data.word_ID + 'gloss'} className={styles.interlinearTranslation}>{(receivedAppContext.language === 'GRK') ? word_metadata.data.IT : word_metadata.data.ETCBCgloss}</span>\n                    {(dialog.open === true) ? (\n                        <Dialog \n                        maxWidth='lg'\n                            open={dialog.open} \n                            onClose={() => newDialog({open: false, content: {}})}>\n                            <DialogTitle>{`${dialog.content.text} : ${(dialog.content.StrongNumber !== '') ? dialog.content.StrongNumber : dialog.content.extendedStrongNumber}`}</DialogTitle>\n                            <DialogContent dividers>\n                                <p className={classes.definition}>{`DEFINITION: `}<em>{(dictionary[dialog.content.StrongNumber]) ? dictionary[dialog.content.StrongNumber].strongs_def : 'N/A'}</em></p>\n                                <WordDataTable content={dialog.content}/>\n                                {(dialog.content.StrongNumber === 'H4487') ? (<VerbView />) : null}\n                            </DialogContent>\n                        </Dialog> \n                    ) : null}\n                </span>\n        )\n    }\n}\n\nexport default InterlinearLeaf;","import React, { useContext } from 'react'\nimport styles from './Inlines.module.css'\nimport Leaf from '../Leaf/Leaf'\nimport InterlinearLeaf from '../Leaf/InterlinearLeaf'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst Inlines = (props) => {\n    const receivedAppContext = useContext(AppContext)\n    if (props.type === 'prose') {\n        return (\n            <div className={styles.prose}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else if (props.type === 'poetry') {\n        return (\n            <div className={styles.poetry}>\n                {props.leaves.map(leaf => {\n                    if (receivedAppContext.interlinear) {\n                        return <InterlinearLeaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    } else {\n                        return <Leaf \n                        marks={leaf.marks}\n                        text={leaf.text}/>\n                    }\n                })}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Inlines","import React, { useContext } from 'react'\nimport SourceName from '../SourceName/SourceName'\nimport styles from \"./SpeechBubble.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst SpeechBubble = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubblehebrew, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div className={[styles.speechbubble, styles[props.sourceData.color]].join(' ')}>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n        )\n    }\n    \n    \n}\n\nexport default SpeechBubble;","import React from 'react'\nimport styles from './Paragraph.module.css'\n\nconst Paragraph = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = []\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Paragraph","import React from 'react'\nimport styles from './BulletedList.module.css'\n\nconst ListItem = (props) => {\n    return (<p className={styles.listItem}>\n        {props.content[0].leaves.map(leaf => {\n            let classNames = []\n            if (leaf.marks) {\n                if (leaf.marks.find(mark => mark.type === 'bold')) {\n                    classNames.push('bold')\n                }\n                if (leaf.marks.find(mark => mark.type === 'italic')) {\n                    classNames.push('italic')\n                }\n                if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                    classNames.push('smallcaps')\n                }\n            }\n            return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>\n        })}\n    </p>)\n}\n\nconst BulletedList = (props) => {\n    return (\n        <ul style={{listStyle: 'none'}}>\n            {props.content.map(item => { \n                return <ListItem content={item.nodes} />\n            })}\n        </ul>\n    )\n}\n\nexport default BulletedList","import React from 'react'\nimport styles from './Subtitle.module.css'\n\nconst Subtitle = (props) => {\n    return (\n        <p>\n            {props.content[0].leaves.map(leaf => { \n                let classNames = ['subtitle']\n                if (leaf.marks) {\n                    if (leaf.marks.find(mark => mark.type === 'bold')) {\n                        classNames.push('bold')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'italic')) {\n                        classNames.push('italic')\n                    }\n                    if (leaf.marks.find(mark => mark.type === 'smallcaps')) {\n                        classNames.push('smallcaps')\n                    }\n                }\n                    return <span className={(classNames.length > 0) ? classNames.map(mark => styles[mark]).join(' ') : ''}>{leaf.text}</span>})\n            }\n        </p>\n    )\n}\n\nexport default Subtitle","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'rgba(58, 76, 125, 0.07)'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst createPieChartData = (obj) => {\n  return {\n    labels: obj.percentage_labels,\n    datasets: [{\n      data: obj.percentage_values,\n      backgroundColor: [\n        'rgb(209, 0, 209)',\n        'rgb(255, 238, 4)',\n        'lightgrey',\n        ],\n      hoverBackgroundColor: [\n        'purple',\n        'rgb(184, 171, 0)',\n        'grey'\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title={(props.testament === 'NT') ? 'Quotes and Allusions from OT' : 'Quotes and Allusions used in NT'} disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut data={createPieChartData(props.pieData)} options={chartOptions} />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Books with Quotes and Allusions\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          BarChart with books\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Cross References\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p>List of hyperlinks</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React from 'react'\nimport styles from './Introduction.module.css'\nimport Paragraph from './Paragraph/Paragraph'\nimport BulletedList from './BulletedList/BulletedList'\nimport Table from './Table/Table'\nimport Subtitle from './Subtitle/Subtitle'\nimport IntroData from './IntroData/IntroData'\n\nconst Introduction = (props) => {\n    return (\n        <div>\n            <div>\n                {props.content.map(block => {\n                    switch (block.type) {\n                        case 'speech':\n                            return <Paragraph content={block.nodes} />\n                        case 'subtitle':\n                            return <Subtitle content={block.nodes} />\n                        case 'bulleted-list':\n                            return <BulletedList content={block.nodes} />\n                        case 'table':\n                            return <p style={{color: 'red'}}>TABLE WILL BE HERE!</p>\n                            // <Table content={block.nodes} />\n                        default:\n                            return null\n                    }\n                })}\n            </div>\n            <div>\n                <IntroData pieData={props.bookData.pieChart} testament={props.testament}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Introduction","import React, { useContext } from 'react'\nimport styles from \"./NarratorText.module.css\"\nimport Inlines from '../Inlines/Inlines'\nimport SourceName from '../SourceName/SourceName'\nimport AppContext from '../../contextAPI/AppContext'\n\nconst NarratorText = (props) => {\n    const receivedAppContext = useContext(AppContext)\n\n    if (receivedAppContext.language === 'HBR') {\n        return (\n            <div className={styles.hebrew}>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )} else {\n        return (\n            <div>\n                <SourceName \n                    sourceName={props.sourceData.source}\n                    data={props.sourceData}\n                />\n                <div>\n                {props.inlines.map(inline => {\n                    return <Inlines \n                    type={inline.type}\n                    leaves={inline.nodes}/>\n                })}\n                </div>\n            </div>\n    )}\n}\n\nexport default NarratorText;","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Doughnut } from 'react-chartjs-2'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'center',\n    marginBottom: '8px',\n    maxHeight: 'fit-content',\n  },\n  card: {\n    maxHeight: '150px',\n    margin: '5px',\n  },\n  leftCard: {\n    marginRight: '8px'\n  },\n  top5: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: '75%',\n    padding: 0\n  },\n  cardTitle: {\n    margin: '0',\n    textDecoration: 'underline',\n    fontWeight: 'bold',\n    fontSize: '80%',\n    padding: '2px'\n  },\n  top5List: {\n    padding: '1px',\n    margin: 1,\n  },\n  cardContent: {\n    margin: 0,\n    padding: 0,\n    fontSize: '11px',\n    lineHeight: '13px'\n  },\n  backgroundColor: {\n    backgroundColor: 'rgba(58, 76, 125, 0.07)'\n  },\n  red: {\n    color: '#d60000'\n  },\n  green: {\n    color: '#006400'\n  },\n  blue: {\n    color: 'darkblue'\n  },\n  topSources: {\n    flex: '1 100px'\n  },\n  topWords: {\n    flex: '1 100px'\n  },\n  colorComparison: {\n    flex: '1 1 300px',\n  }\n})\n\nconst getTopSources = (obj) => {\n    const sourceNames = Object.keys(obj);\n    let sourcesArray = sourceNames.map(sourceName => {\n        return {\n            key: sourceName,\n            val: obj[sourceName].words,\n            color: obj[sourceName].color\n        }\n    })\n\n    sourcesArray = sourcesArray.sort(function (a, b) {\n        if (a.val > b.val) {\n            return -1\n        } else if (a.val < b.val) {\n            return 1\n        } else if (a.val === b.val) {\n            return 0\n        }\n    });\n    const top5Sources = []\n    let count = 0;\n    sourcesArray.forEach(source => {\n        if (source.key !== \"The Narrator\" && count < 5) {\n            top5Sources.push({\n              name: source.key,\n              words: source.val, \n              color: source.color\n            })\n            count += 1;\n        } else return\n    })\n    return top5Sources\n}\n\nconst createColorData = (obj) => {\n  const labels = Object.keys(obj);\n  labels.pop()\n  const values = Object.values(obj)\n  values.pop()\n  return {\n    labels: ['Narrator', 'God', 'Main Character(s)', 'Everyone Else'],\n    datasets: [{\n      data: [\n      Math.round((values[0] / obj.total) * 100),\n      Math.round((values[3] / obj.total) * 100),\n      Math.round((values[2] / obj.total) * 100),\n      Math.round((values[1] / obj.total) * 100)\n      ],\n      backgroundColor: [\n        'grey',\n        '#ffadad',\n        '#b9f8b9',\n        'rgb(142, 227, 255)',\n        ],\n      hoverBackgroundColor: [\n        'black',\n        '#d60000',\n        '#006400',\n        'darkblue',\n        ]\n    }]\n  }\n}\n\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: true,\n  layout: {\n    padding: {\n      left: 10,\n      right: 10,\n      top: 0,\n      bottom: 50\n    }\n  },\n  legend: {\n    position: 'right',\n    labels: {\n      fontSize: 9,\n      boxWidth: 40\n    }\n    // display: false\n  },\n}\n\nconst SegmentData = (props) => {\n    const classes = useStyles();\n    return (\n      <div className={classes.main}>\n        <Card className={`${classes.backgroundColor} ${classes.card} ${classes.colorComparison}`}>\n          <CardHeader title=\"Color Comparison\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={`${classes.cardContent} ${classes.chart}`}>\n            <Doughnut data={createColorData(props.colors)} options={chartOptions} />\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.leftCard} ${classes.backgroundColor} ${classes.card}  ${classes.topSources}`}>\n          <CardHeader title=\"Top Sources (words)\" disableTypography=\"true\" className={classes.cardTitle}/>\n          <CardContent className={classes.cardContent}>\n          {getTopSources(props.sources).map(source => <p className={`${classes.top5List} ${classes[source.color]} ${classes.topWords}`} >{source.name} ({source.words})</p>)}\n          </CardContent>\n        </Card>\n        <Card className={`${classes.top5} ${classes.backgroundColor} ${classes.card} ${classes.topWords}`}>\n            <CardHeader title=\"Top Repeated Words\" disableTypography=\"true\" className={classes.cardTitle}/>\n            <CardContent className={classes.cardContent}>\n            <p className={classes.top5List}>{props.repeatedWords[0]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[2]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[1]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[3]}</p>\n            <p className={classes.top5List}>{props.repeatedWords[4]}</p>\n          </CardContent>\n        </Card>\n      </div>\n)}\n\nexport default SegmentData;","import React, { useEffect, useContext } from 'react'\nimport AppContext from '../contextAPI/AppContext'\nimport scrollToElement from 'scroll-to-element'\nimport SpeechBubble from '../components/SpeechBubble/SpeechBubble'\nimport Introduction from '../components/Introduction/Introduction'\nimport Narrator from '../components/NarratorText/NarratorText'\nimport SegmentData from '../components/SegmentData/SegmentData'\nimport ReadTogether from '../images/SVB-Read-together.png'\nimport DiscussTogether from '../images/SVB-Discuss-together.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    fontSize: 'small',\n    color: 'white'\n  },\n  paper: {\n      background: '#3A4C7D',\n      width: '75vw'\n  },\n  segmentDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingTop: '5px'\n  },\n  title: {\n    fontSize: '150%',\n    fontWeight: ' bold',\n    textDecoration: 'underline',\n    width: '100%',\n    margin: 0,\n    textAlign: 'center'\n  },\n  reference: {\n    margin: 0,\n    fontSize: '60%',\n    color: 'grey'\n  },\n  discuss: {\n    display: 'block',\n    textAlign: 'center',\n    margin: '10px 0',\n    padding: '10px 0',\n    borderTop: '0.25px lightgrey solid',\n  },\n  footer: {\n    textAlign: 'center',\n    fontSize: '60%',\n    margin: '10px 0 30px 0',\n    '& p': {\n      margin: 0\n    }\n  },\n  images: {\n    width: '200px',\n    margin: '10px auto',\n  },\n  readImage: {\n    marginBottom: '20px',\n    borderBottom: '0.25px lightgrey solid',\n  },\n  content: {\n    margin: '0 0 10px 0',\n    padding: '0 0 10px 0'\n  },\n  questions: {\n    textAlign: 'left',\n    margin: 0,\n    '& p': {\n      margin: '10px 0',\n    }\n  },\n  imgCaption: {\n    color: 'grey',\n    fontSize: '70%',\n    margin: '-20px 0 0 0',\n    textAlign: 'center'\n  }\n}))\n\n\nexport default ({pageContext: {segment, book}}) => {\n  const classes = useStyles();\n  const receivedAppContext = useContext(AppContext);\n  const NTBooks = [\"Tit\", \"Rev\", \"Jam\", \"3Jn\", \"Heb\", \"2Co\", \"Luk\", \"Mat\", \"2Ti\", \"2Th\", \"1Pe\", \"Gal\", \"2Pe\", \"Joh\", \"Php\", \"1Ti\", \"Phm\", \"Mar\", \"Eph\", \"Act\", \"1Co\", \"Col\", \"Jud\", \"Rom\", \"1Jn\", \"2Jn\", \"1Th\"]\n  const isNT = (NTBooks.indexOf(book) !== -1) ? true : false\n  \n  useEffect(() => {\n    if (typeof window !== undefined) {\n      \n      if (receivedAppContext.searchID !== '') {\n        const id = `#${receivedAppContext.searchID}`\n        scrollToElement(id, {\n            offset: -65,\n            ease: 'inOutCube',\n            duration: 1500\n        });\n        receivedAppContext.updateSearchID('')\n      }\n    }\n  }, [])\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <p className={classes.title}>Title</p>\n        <p className={classes.reference}>Reference</p>\n      </div>\n      {/* segments start with an array of block nodes (so they have a length), but intros start with an object \"document\"  */}\n      {(Array.isArray(segment.content)) ? (\n        <div>\n          <div className={classes.segmentDataContainer}>\n            <SegmentData \n              colors={segment.colors}\n              sources={segment.sources}\n              repeatedWords={segment.repeatedWords}\n            />\n          </div>\n          <div className={`${classes.images} ${classes.readImage}`}>\n            <img src={ReadTogether} alt=\"Read Together\" />\n            <p className={classes.imgCaption}>Each person reads a color aloud</p>\n          </div>\n          <div className={classes.content}>\n            {segment.content.map(block => {\n              if (block.data.color === 'black') {\n                return (<Narrator \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              } else {\n                return (<SpeechBubble \n                  sourceData={block.data}\n                  inlines={block.nodes} />\n                  )\n              }\n            })}\n          </div>\n          <div className={classes.discuss}>\n            <div className={classes.images}>\n              <img src={DiscussTogether} alt=\"Discuss Together\" />\n              <p className={classes.imgCaption}>Discuss the questions with others</p>\n            </div>\n            <p className={classes.title}>Title</p>\n            <div className={classes.questions}>\n              <p>Question #1: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #2: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #3: this is a really, really, really, really, really, really, really, really, really long question</p>\n              <p>Question #4: this is a really, really, really, really, really, really, really, really, really long question</p>\n            </div>\n          </div>\n          <div className={classes.footer}>\n            <p>copyright info of version</p>\n            <p>© {currentYear} SourceView LLC.</p>\n          </div>\n        </div>\n    ) : (\n        <Introduction \n          content={segment.content.document.nodes} \n          bookData={segment.bookData}\n          testament={isNT ? 'NT' : 'OT'}/>\n      )}\n    </div>\n  )}","module.exports = __webpack_public_path__ + \"static/Foundational-b52df7354ececc9f918dc19b5085f0ac.png\";","module.exports = __webpack_public_path__ + \"static/Celebration-2c9ec1357f30421505bee054e0e82eeb.png\";","module.exports = __webpack_public_path__ + \"static/Communications-0bf260c2a8a26669d65be3987c7869c9.png\";","module.exports = __webpack_public_path__ + \"static/Economics-19650faf9e095f37bb714b06ed1142a3.png\";","module.exports = __webpack_public_path__ + \"static/Education-f8fc9f170534746838fd44f56d07182f.png\";","module.exports = __webpack_public_path__ + \"static/Family-1e9e99a1b1f8bea9c877685d76763247.png\";","module.exports = __webpack_public_path__ + \"static/Government-d2f7040273a32db2b509da594f423b6f.png\";","module.exports = __webpack_public_path__ + \"static/Religion-ec14c054570f8236824435380d78b2be.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Read-together-c3869d4d71bf839bdd9a7b8be1078625.png\";","module.exports = __webpack_public_path__ + \"static/SVB-Discuss-together-ea87a32e2fe039e84980badd5ee97a5a.png\";"],"sourceRoot":""}